{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The SparkFun RTK products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This RTK Product Manual provides detailed descriptions of all the available features of the RTK products.</p> <p>The line of RTK products offered by SparkFun all run identical firmware. The RTK firmware and this guide cover the following products:</p> SparkFun RTK Facet L-Band (GPS-20000) SparkFun RTK Facet (GPS-19029) SparkFun RTK Reference Station (GPS-22429) Hookup Guide Hookup Guide Hookup Guide SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Express (GPS-18442) SparkFun RTK Surveyor (GPS-18443) Hookup Guide Hookup Guide Hookup Guide <p>Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported.</p> <p>There are multiple ways to configure an RTK product:</p> <ul> <li>Bluetooth - Good for in-field changes</li> <li>WiFi - Good for in-field changes</li> <li>Serial Terminal - Requires a computer but allows for all configuration settings</li> <li>Settings File - Used for configuring multiple RTK devices identically</li> </ul> <p>The Bluetooth or Serial Terminal methods are recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone.</p> <p>If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository. If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well!</p> <p>Things like how to attach an antenna or other hardware-specific topics are best read on the Hookup Guides for the individual products.</p>"},{"location":"accuracy_verification/","title":"Accuracy Verification","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Facet in the field</p> <p>You\u2019ve got an incredibly powerful GNSS receiver in your hands. How do you verify that you can get really accurate location readings? It's a bit of work but it's a lot of fun and you'll learn a tremendous amount about surveying along the way.</p> <p>This is, admittedly, a very US-centric tutorial. We hope that it will provide some of the tools and basic guidance to be replicated in other countries. If you have additional sources for GPS/GNSS surveyed monuments in your own country, consider adding them to this document!</p> <p>This is a replication and confirmation of the procedure done by RTKLibExplorer in 2018. We modified it to demonstrate a similar process but using u-blox hardware and with a few updates.</p> <p>The process goes like this: </p> <ul> <li>Find a local monument</li> <li>Convert the coordinates</li> <li>Take measurements</li> <li>Calculate differences</li> </ul>"},{"location":"accuracy_verification/#get-used-to-rtk","title":"Get Used to RTK","text":"<p>RTK Fix Mode</p> <p>Before we can consider doing anything in the field, we need to get really comfortable using the RTK product. Verify you can get your device into RTK Fix mode. This includes setting up a permanent base and/or using a service like Skylark to provide the correction data to the RTK product. Before planning a trip to the field get used to using the RTK product in Rover mode with NTRIP corrections being passed over Bluetooth to your device.</p>"},{"location":"accuracy_verification/#locate-gps-monument","title":"Locate GPS Monument","text":"<p>A common metal surveyor's mark</p> <p>Locate a GPS monument. These are the little metal caps, placed by surveyors, embedded into the sidewalk and roads around populated areas. While monuments are fairly common, we need a monument whose location is precisely known.</p> <p></p> <p>Boulder has a large number of monuments</p> <p>Thankfully, in the USA the National Geodetic Survey has an incredible database of public monuments. Enter your location into the NGS Data Explorer to find the nearest monument. </p> <p></p> <p>Boulder's GPS monuments</p> <p>While the Data Explorer will show many marks, turn off all but the GPS marks. These were surveyed with extreme precision and have published coordinates.</p>"},{"location":"accuracy_verification/#convert-monument-location","title":"Convert Monument Location","text":"<p>Monument near SparkFun</p> <p>Find a GPS monument that is easiest for you to get to, click on it, and open the datasheet. You'll see a large amount of text and data for that specific location.</p> <p></p> <p>Position in both NAD83 and ECEF</p> <p>My respect for the surveying industry grows daily, but that doesn't mean they are free from competing and confusing standards. What you need to know is that the SparkFun RTK product line outputs coordinates in the WGS84 coordinate system by default and can output ECEF as well. Most of the coordinates by the NGS are NAD83 which has about a 1.5-meter difference from the WGS84 coordinate system. No big deal for general mapping but it'll throw a wrench in your testing if you're not careful.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40 05 14.86880 (NAD83 in 2012)</li> <li>Longitude: -105 09 01.68689 (NAD83 in 2012)</li> <li>Elliptical Height: 1613.737 meters (NAD83 in 2012)</li> </ul>"},{"location":"accuracy_verification/#convert-nad83-to-today","title":"Convert NAD83 to Today","text":"<p>So we know the NAD83 Lat/Long of our monument, right? Not quite. </p> <p></p> <p>Example plate movement map</p> <p>The earth is not static and the tectonic plates have this annoying habit of moving. Note that the coordinates from our datasheet are from 6/27/2012. Ten years of movement can affect millimeter measurements.</p> <p></p> <p>Plate tectonic time machine</p> <p>Thankfully the NGS has a tool called Horizontal Time-Dependent Positioning. This allows both the conversion between coordinate systems and adjusting a given location to a given start and end time. Use the tool to convert the NAD83 coordinates of your monument from the time they were taken (June 27, 2012, in our example) to WGS84(G2139) coordinates on today's date. If you convert the location for your monument on a Tuesday and visit it 5 days later, the coordinates should still be perfectly fine. This tool is needed both for the coordinate change (NAD83 to WGS84) and for long (months or years) periods between when the monument was surveyed.</p> <p></p> <p>Monument converted to WGS84 corrected to 2022</p> <p>Once we enter all the pertinent data, we receive a nice output showing us our modern-day WGS84 coordinates! Also, note the X/Y/Z ECEF coordinates.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40 05 14.88667 (WGS84 in 2022)</li> <li>Longitude: -105 09 01.74023 (WGS84 in 2022)</li> <li>Elliptical Height: 1612.873 meters (WGS84 in 2022)</li> </ul> <p>And in ECEF (this will be handy in a minute):</p> <ul> <li>X: -1277423.441 m (ECEF in 2022)</li> <li>Y: -4717810.159 m (ECEF in 2022)</li> <li>Z: 4086459.331 m (ECEF in 2022)</li> </ul>"},{"location":"accuracy_verification/#convert-from-hhmmss-to-decimal","title":"Convert from HH:MM:SS to Decimal","text":"<p>Conversion to Decimal</p> <p>The NGS coordinates are in the hour/minute/second format (ie, 40 05 14.86880). We need decimal format when we're in the field viewing locations in SW Maps. We recommend the LatLong.net converter, but there are many options. Make sure the tools, converters, and calculators you use maintain 8 decimal places.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40.08746852 (WGS84 in 2022)</li> <li>Longitude: -105.15048340 (WGS84 in 2022)</li> <li>Elliptical Height: 1613.737 meters (WGS84 in 2022)</li> </ul> <p>These are the coordinates we hope to see using SW Maps once we get out into the field. Write down your monument coordinates so that you have some idea of how close your unit is to the ideal in real-time.</p>"},{"location":"accuracy_verification/#field-trip","title":"Field Trip!","text":"<p>Cheap tripod above the monument</p> <p>Not a bad view!</p> <p>You will need to decide how cheap you want your setup to be. I went too cheap; my tripod doesn\u2019t have a hook on the bottom so the string with a bolt (I didn\u2019t even have a plumb bob) to center above the marker was not central to the Facet. The height measurement from the mark to the ARP (bottom of the Facet) was done with a tape measure, in other words, not very accurate. But it works!</p> <p>Find the monument and locate your Facet (or RTK Surveyor, Express, Express Plus, Facet L-Band, etc) over the monument. Using a tape measure or other tool, measure the distance from the top of the monument to the bottom of the Facet. In this example, it was 45 \u00be\u201d or 1162mm. Obviously, millimeters matter here but don't let 'perfection' be the enemy of 'done'.</p> <p></p> <p>L-Band Facet ARP</p> <p>Locate the ARP of your given RTK product (53mm for units using the TOP106 Antenna, 61mm for Facet, 69mm for Facet L-Band). Add your ARP to the height above the monument you measured previously. In this example 1416 + 69 = 1.485m. Enter that total height into SW Maps as the \u2018Instrument Height\u2019. This will allow the software to subtract the antenna location height from the current 3D location to gain the location of the point where the plumb bob (or bolt) below your apparatus is located.</p> <p>With your instrument height determined, connect to the RTK product, begin sending RTCM corrections (either over NTRIP or radio link) and enter RTK Fix.</p>"},{"location":"accuracy_verification/#record-readings","title":"Record Readings","text":"<p>SW Maps screenshot of monument location</p> <p>We can see the approximate location of the monument in the above location.</p> <p></p> <p>Screenshot of a point in time</p> <p>Note the 8 decimal places on the Lat/Long. </p> <p>Screenshots are an easy way to record lat/long/alt but SW Maps (and other GIS software) allows the averaging of a position. Choose your own adventure. For our example, we took screenshots/snapshots of the location. Some surveyors hold a position for multiple minutes to get a point; we can do the same in under a second.</p> <p></p> <p>Comparison of three RTK correction sources</p> <p>Off the shelf, we regularly see 300 down to 150mm horizontal positional accuracy using any RTK product with a good L1/L2 antenna. This is shown in the picture above as the circle with 'No Corrections'. </p> <p>With corrections turned on, the benefit of an RTK fix is obvious. The two surveyed points overlap each other so closely they are nearly indistinguishable. The SparkFun base station is documented here and has a location accuracy of approximately 8.4mm. Using a base station is more accurate (as we will see) but L-Band corrections will also get you incredibly similar accuracy with a lot less hassle. </p>"},{"location":"accuracy_verification/#why-doesnt-it-match-the-image","title":"Why doesn\u2019t it match the image?","text":"<p>Actual location vs image</p> <p>Your location bubble may not fall directly over the pixels representing the monument. Why? Imagine you are a satellite 50 miles above the earth\u2019s surface. Now take a photo that is many megapixels. Now align all those pixels within a few millimeters of reality. Google maps (and all terrestrial imagery as an industry) does an incredible job of aligning the surface imagery but it is not perfect, and it is certainly not millimeter accurate. Do not assume the google maps image is where your monument actually exists.</p>"},{"location":"accuracy_verification/#spreadsheet-party","title":"Spreadsheet Party","text":"<p>We\u2019ve established the monument\u2019s location, we\u2019ve captured the location of the RTK Facet, and they are different, but by how much? Calculating the difference between Lat/Long coordinates is not trivial. We\u2019ve found converting to the ECEF coordinate system is the easiest way to calculate the difference between GPS coordinates.</p> <p></p> <p>Convert LLA to ECEF</p> <p>Enter your lat, long, and altitude coordinates into an LLA to ECEF converter. We found the Sysense calculator to work very well. How do we know it\u2019s accurate? Take the original coordinates from the NGS Datasheet, and use the calculator to convert them to ECEF. They are identical.</p> <p></p> <p>ECEF difference between monument and readings</p> <p>Feel free to look at and make a copy of the SparkFun example spreadsheet. ECEF is a wonderfully simplistic frame of reference; the comparison between two points is simply X/Y/Z in meters. We can use the Pythagorean theorem to calculate the 3D variance. In our example, it is 52mm using corrections from a fixed base, and 189mm for an L-Band corrected base.</p> <p>52mm off a professional mark is a clear indicator we are very close to the limit of our equipment. The sheer amount of geoscience, coordinate math, and relativistic physics that very smart people have contributed to enable any part of this experiment is awe-inspiring. It gave me great satisfaction and reassurance that our base at SparkFun HQ is set up well, and that, in the hands of a professional, the RTK product line is quite capable of providing very accurate readings.</p>"},{"location":"accuracy_verification/#how-do-i-get-14mm","title":"How do I get 14mm?!","text":"<ul> <li>Use the best equipment. Our mechanical setup was rickety and cheap. Use a surveyor\u2019s bipod setup, with a bubble level, and a prism pole to accurately level the RTK receiver and measure the distance to the monument.</li> <li>Use an antenna that is NGS calibrated to obtain accurate ARPs. The SparkFun TOP106 antenna has been calibrated and we are in the process of calibrating the RTK Facet and RTK Facet L-Band.</li> <li>Use an accurate base. A temporary or \u2018survey-in\u2019 base will not be accurate. The base needs 24 hours of logging with a PPP analysis. </li> <li>Be within 10km of your base. A baseline that is more than 10km will introduce inaccuracies to the RTK fix readings.</li> <li>Correction services are not as accurate as a fixed base. While services such as Skylark and PointPerfect are convenient, they use models to estimate the overall isotropic disturbance. A local, fixed base will outperform a correction service.</li> <li>Take an average of points. All the points taken in this example were single snapshots. Average a few seconds' worth of readings.</li> </ul> <p>This was a lot of fun and a good excuse to get outdoors. We hope you enjoy finding some new points in your world.</p>"},{"location":"configure_with_bluetooth/","title":"Configure with Bluetooth","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Configuration menu via Bluetooth</p> <p>Starting with firmware v3.0, Bluetooth-based configuration is supported. For more information about updating the firmware on your device, please see Updating RTK Firmware.</p> <p>The RTK device will be a discoverable Bluetooth device (both BT SPP and BLE are supported). For information about Bluetooth pairing, please see Connecting Bluetooth.</p>"},{"location":"configure_with_bluetooth/#entering-bluetooth-echo-mode","title":"Entering Bluetooth Echo Mode","text":"<p>Once connected, the RTK device will report a large amount of NMEA data over the link. To enter Bluetooth Echo Mode send the characters +++.</p> <p>Note: There must be a 2 second gap between any serial sent from a phone to the RTK device, and any escape characters. In almost all cases this is not a problem. Just be sure it's been 2 seconds since an NTRIP source has been turned off and attempting to enter Bluetooth Echo Mode.</p> <p></p> <p>The GNSS Messages menu shown over Bluetooth Echo Mode</p> <p>Once in Bluetooth Echo Mode, any character sent from the RTK unit will be shown in the Bluetooth app, and any character sent from the connected device (cell phone, laptop, etc) will be received by the RTK device. This allows the opening of the config menu as well as the viewing of all regular system output.</p> <p>For more information about the Serial Config menu please see Configure with Serial.</p> <p></p> <p>Exit from the Serial Config Menu</p> <p>Bluetooth can also be used to view system status and output. Simply exit the config menu using option 'x' and the system output can be seen.</p>"},{"location":"configure_with_bluetooth/#exit-bluetooth-echo-mode","title":"Exit Bluetooth Echo Mode","text":"<p>To exit Bluetooth Echo Mode simply disconnect Bluetooth. In the Bluetooth Serial Terminal app, this is done by pressing the 'two plugs' icon in the upper right corner. </p> <p></p> <p>Menu option 'b' for exiting Bluetooth Echo Mode</p> <p>Alternatively, if you wish to stay connected over Bluetooth but need to exit Bluetooth Echo Mode, use the 'b' menu option from the main menu.</p>"},{"location":"configure_with_bluetooth/#serial-bluetooth-terminal-settings","title":"Serial Bluetooth Terminal Settings","text":"<p>Here we provide some settings recommendations to make the terminal navigation of the RTK device a bit easier.</p> <p></p> <p>Terminal Settings with Timestamps disabled</p> <p>Disable timestamps to make the window a bit wider, allowing the display of longer menu items without wrapping.</p> <p></p> <p>Clear on send and echo off</p> <p>Clearing the input box when sending is very handy as well as turning off local echo.</p>"},{"location":"configure_with_serial/","title":"Configure with Serial","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>Note: Starting with v3.0 of the firmware any serial menu that is shown can also be accessed over Bluetooth. This makes any configuration of a device much easier in the field. Please see Configure With Bluetooth for more information.</p> <p>To configure an RTK device using serial attach a USB C cable to the device. The device can be on or off.</p>"},{"location":"configure_with_serial/#rtk-surveyor-express-express","title":"RTK Surveyor / Express / Express+","text":"<p>The SparkFun RTK Surveyor has a variety of connectors</p> <p>Connect the USB cable to the connector labeled Config ESP32.</p> <p>Once connected a COM port will enumerate. Open the <code>Device Manager</code> in Windows and look under the Ports branch to see what COM port the device is assigned to.</p>"},{"location":"configure_with_serial/#rtk-facet","title":"RTK Facet","text":"<p>Connect the USB cable to the USB connector.</p> <p>There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate two COM ports.</p> <p></p> <p>In the image above, the <code>USB Serial Device</code> is the ZED-F9P and the <code>USB-SERIAL CH340</code> is the ESP32.</p> <p>Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <p>Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation.</p> <p>Configuring the RTK device is done over the USB-Serial CH340 COM port via the serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. </p> <p>Configuring the ZED-F9P is done over the USB Serial Device port using u-center. It\u2019s not necessary for normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.</p>"},{"location":"configure_with_serial/#terminal-window","title":"Terminal Window","text":"<p>Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Check out our Serial Terminal Basics tutorial. </p> <p>Note that some Windows terminal programs (e.g. Tera Term) may reboot the Facet when the terminal connection is closed. You can disconnect the USB cable first to prevent this from happening.</p> <p></p> <p>Main Menu</p> <p>Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name. Note: When powered on, the RTK device will broadcast itself as either [Platform] Rover-XXXX or [Platform] Base-XXXX depending on which state it is in. The Platform is 'Facet', 'Express', 'Surveyor', etc.</p> <p>Pressing '1' or 's' for example, will open those submenus.</p> <p>The menus will timeout after 10 minutes of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages.</p> <p></p> <p>Configuration menu via Bluetooth</p> <p>Note: Starting with firmware v3.0, Bluetooth-based configuration is supported. Please see Configure With Bluetooth for more information.</p>"},{"location":"configure_with_serial/#system-report","title":"System Report","text":"<p>Sending the <code>~</code> character to the device over the serial port will trigger a system status report. This is a custom NMEA-style sentence, complete with CRC.</p> <p></p> <p>Terminal showing System Status</p> <p>Below is an example system status report sentence:</p> <p>$GNTXT,01,01,05,202447.00,270522,0.380,29,40.090355193,-105.184764700,1560.56,3,0,86*71</p> <ul> <li>$GNTXT : Start of custom NMEA sentence</li> <li>01 : Number of sentences</li> <li>01 : Sentence number</li> <li>05 : Sentence type ID (5 is for System Status messages)</li> <li>202447.00 : Current hour, minute, second, milliseconds</li> <li>270522 : Current day, month, year</li> <li>0.380 : Current horizontal positional accuracy (m)</li> <li>29 : Satellites in view</li> <li>40.090355193 : Latitude</li> <li>-105.184764700 : Longitude</li> <li>1560.56 : Altitude</li> <li>3 : Fix type (0 = no fix, 2 = 2D fix, 3 = 3D fix, 4 = 3D + Dead Reackoning, 5 = Time)</li> <li>0 : Carrier solution (0 = No RTK, 1 = RTK Float, 2 = RTK Fix)</li> <li>86 : Battery level (% remaining)</li> <li>*71 : The completion of the sentence and a CRC</li> </ul> <p>Note: This is a custom NMEA sentence, can vary in length, and may exceed the maximum permitted sentence length of 61 characters.</p>"},{"location":"configure_with_serial/#l-band-performance-during-serial-configuration","title":"L-Band Performance During Serial Configuration","text":"<p>Because of the way corrections are provided between the sub modules (NEO-D9S and ZED-F9P), the corrections will be interrupted while the configuration menu is open. RTK Fix may be lost if the menu is open for more than ~30s. RTK Fix will return once the configuration is complete and the menu is closed.</p> <p>Note: This only affects the RTK Facet L-Band model. </p>"},{"location":"configure_with_settings_file/","title":"Configure with Settings File","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>SparkFun RTK Settings File</p> <p>All device settings are stored both in internal memory and an SD card if one is detected. The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and a settings file then the settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card.</p> <p>All system configuration can be done by editing the SFE_[Platform]_Settings_0.txt file (example shown above) where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed. The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.</p> <p>Keep in mind: </p> <ul> <li>The settings file contains hundreds of settings.</li> <li>The SD card file \"SFE_Express_Settings_0.txt\" is used for Profile 1, SD card file \"SFE_Express_Settings_1.txt\" is used for Profile 2, etc. (note that setting 0 is for profile 1, ...)</li> <li>When switching to a new profile, the settings file on the SD card with all settings will be created or updated. The internal settings will not be updated until you switch to the profile. Additionally, the file for a particular profile will not be created on the SD card until you switch to that profile.</li> <li>It is not necessary that the settings file on the SD card have all of the settings.</li> </ul> <p>For example, if you only wanted to set up two wireless networks for profile 2, you could create a file named \"SFE_Express_Settings_1.txt\" that only contained the following settings:</p> <pre><code>profileName=a name you choose\nenablePvtServer=1\nwifiNetwork0SSID=your SSID name 1\nwifiNetwork0Password=your SSID password 1\nwifiNetwork1SSID=your SSID name 2\nwifiNetwork1Password=your SSID password 2\nwifiConfigOverAP=0\n</code></pre> <p>These settings on the SD card will overwrite the settings in the RTK Express internal memory. Once you select this profile on your RTK Express, the SD card file will be overwritten with all of the merged settings.</p>"},{"location":"configure_with_settings_file/#forcing-a-factory-reset","title":"Forcing a Factory Reset","text":"<p>If the device has been configured into an unknown state the device can be reset to factory defaults. Power down the RTK device and remove the SD card. Using a computer and an SD card reader, open the SFE_[Platform]_Settings_0.txt file where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). Modify the sizeOfSettings value to -1 and save the file to the SD card. Reinsert the SD card into the RTK unit and power up the device. Upon power up, the device will display 'Factory Reset' while it clears the settings.</p> <p>Note: A device may have multiple profiles, ie multiple settings files (SFE_Express_Settings_0.txt, SFE_Express_Settings_1.txt, etc). All settings files found on the SD card must be modified to guarantee the factory reset.</p>"},{"location":"configure_with_ucenter/","title":"Configure with u-center","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The ZED-F9P module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox.</p> <p>However, because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P using u-center. Nothing will break but your changes will likely be overwritten at the next power cycle.</p>"},{"location":"configure_with_wifi/","title":"Configure with WiFi","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Configuration page via WiFi</p> <p>Starting with firmware v1.7, WiFi-based configuration is supported. For more information about updating the firmware on your device, please see Updating RTK Firmware.</p> <p>The RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great.</p> <p></p> <p>Desktop vs Phone display size configuration</p>"},{"location":"configure_with_wifi/#rtk-express-express-plus-facet","title":"RTK Express / Express Plus / Facet","text":"<p>To get into WiFi configuration follow these steps:</p> <ol> <li>Power on the RTK Express, Express Plus, or Facet.</li> <li>Once the device has started press the Setup button repeatedly until the Config menu is highlighted.</li> <li>The display will blink a WiFi icon indicating it is waiting for incoming connections.</li> <li>Connect to WiFi network named \u2018RTK Config\u2019.</li> <li>Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar.</li> </ol> <p></p> <p>Device ready for cellphone configuration</p>"},{"location":"configure_with_wifi/#rtk-surveyor","title":"RTK Surveyor","text":"<p>To get into WiFi configuration follow these steps:</p> <ol> <li>Power the RTK Surveyor on in Rover mode.</li> <li>Once the device has started the Bluetooth status LED should be blinking at 1Hz. Now toggle the SETUP switch from Base and back to Rover within 1 second. If successful, the Bluetooth status LED will begin fading in/out. The device is now broadcasting as a WiFi access point.</li> <li>Connect to WiFi network named \u2018RTK Config\u2019.</li> <li>Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar.</li> </ol>"},{"location":"configure_with_wifi/#connecting-to-wifi-network","title":"Connecting to WiFi Network","text":"<p>The WiFi network RTK Config as seen from a cellphone</p> <p>Note: Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. If you still have problems turn off Mobile Data so that the phone does not default to cellular for internet connectivity and instead connects to the RTK Device.</p> <p></p> <p>Connected to the RTK WiFi Setup Page</p> <p>Clicking on the category 'carrot' will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section.</p> <p></p> <p>This unit has firmware version 1.8 and a ZED-F9P receiver</p> <p>Please note that the firmware for the RTK device and the firmware for the ZED receiver is shown at the top of the page. This can be helpful when troubleshooting or requesting new features.</p>"},{"location":"configure_with_wifi/#file-manager","title":"File Manager","text":"<p>Added in v3.0 firmware, a file manager is shown if an SD card is detected. This is a handy way to download files to a local device (cell phone or laptop) as well as delete any unneeded files. The SD size and free space are shown. And files may be uploaded to the SD card if needed.</p> <p>Additionally, clicking on the top checkbox will select all files for easy removal of a large number of files.</p>"},{"location":"configure_with_wifi/#saving-and-exit","title":"Saving and Exit","text":"<p>Once settings are input, please press \u2018Save Configuration\u2019. This will validate any settings, show any errors that need adjustment, and send the settings to the unit. The page will remain active until the user presses \u2018Exit to Rover Mode\u2019 at which point the unit will exit WiFi configuration and return to standard Rover mode.</p>"},{"location":"connecting_bluetooth/","title":"Connecting Bluetooth","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>SparkFun RTK products transmit full NMEA sentences over Bluetooth serial port profile (SPP) at 4Hz and 115200bps. This means that nearly any GIS application that can receive NMEA data over a serial port (almost all do) can be used with the RTK Express. As long as your device can open a serial port over Bluetooth (also known as SPP) your device can retrieve industry-standard NMEA positional data. The following steps show how to connect an external tablet, or cell phone to the RTK device so that any serial port-based GIS application can be used.</p>"},{"location":"connecting_bluetooth/#android","title":"Android","text":"<p>Pairing with the 'Express Rover-5556' over Bluetooth</p> <p>Open Android's system settings and find the 'Bluetooth' or 'Connected devices' options. Scan for devices and pair with the device in the list that matches the Bluetooth MAC address on your RTK device.</p> <p>When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. </p> <p></p> <p>Bluetooth MAC address B022 is shown in the upper left corner</p> <p>Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range.</p>"},{"location":"connecting_bluetooth/#enable-mock-location","title":"Enable Mock Location","text":"<p>Most GIS applications will gracefully handle the Bluetooth connection to the RTK device and provide an NTRIP Client for getting the RTCM corrections so this section can be skipped. If, in the rare case, a GIS app does not allow NTRIP corrections, Mock Locations can be enabled under Android. Then a data provider like Lefebure or GNSS Master can be used to act as a middle-man.</p> <p>Before proceeding, it is recommended to have the mock location provider app already installed. So if you haven't already, consider installing Lefebure, GNSS Master, etc.</p> <p>To enable Mock Locations, Developer Mode in Android must be enabled. It is best to google the most recent procedure for this but the following procedure should work:</p> <p>1) Open Android settings </p> <p>2) Open About phone</p> <p></p> <p>3) Scroll to the bottom and click on Build number five or more times. The device will prompt as more taps are required.</p> <p>Once Developer Mode is enabled:</p> <p>1) Open Android settings </p> <p>2) Open System</p> <p></p> <p>3) Open Developer options</p> <p></p> <p>4) Scroll all the way to the bottom of a very long list of developer options. </p> <p>5) Select the app to use for Mock Location. This is usually Lefebure or GNSS Master but can be tailored as needed.</p>"},{"location":"connecting_bluetooth/#apple-ios","title":"Apple iOS","text":"<p>Please see iOS GIS Software for information about how to connect to individual GIS apps. Some require a BLE connection and some require a WiFi hotspot connection.</p> <p>More information is available on the System Menu for switching between Bluetooth SPP and BLE.</p>"},{"location":"connecting_bluetooth/#windows","title":"Windows","text":"<p>Open settings and navigate to Bluetooth. Click Add device.</p> <p></p> <p>Adding Bluetooth Device</p> <p>Click Bluetooth 'Mice, Keyboards, ...'</p> <p></p> <p>Viewing available Bluetooth Devices</p> <p>Click on the RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps. </p> <p></p> <p>Bluetooth MAC address B022 is shown in the upper left corner</p> <p>Note: B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range.</p> <p></p> <p>Bluetooth Connection Success</p> <p>The device will begin pairing. After a few seconds, Windows should report that you are ready to go. </p> <p></p> <p>Bluetooth COM ports</p> <p>The device is now paired and a series of COM ports will be added under 'Device Manager'. </p> <p></p> <p>NMEA received over the Bluetooth COM port</p> <p>If necessary, you can open a terminal connection to one of the COM ports. Because the Bluetooth driver creates multiple COM ports, it's impossible to tell which is the serial stream so it's easiest to just try each port until you see a stream of NMEA sentences (shown above). You're all set! Be sure to close out the terminal window so that other software can use that COM port.</p>"},{"location":"contribute/","title":"Fix That Typo!","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <p></p> <p>The edit button at the top of every page</p> <p>Does something not make sense? Find a typo? Hit the edit button and make it better. If a section is confusing please open an issue and let us know.</p> <p>These pages are contained in the docs folder of the SparkFun RTK Firmware repository. Fork this repo, make changes to the markdown, then create a pull request with your changes, and enjoy making the words worlds world a better place.</p>"},{"location":"correction_sources/","title":"Correction Sources","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>To achieve an RTK Fix, SparkFun RTK products must be provided with a correction source. This correction data, sometimes called RTCM (see What is RTCM?), can be produced from a variety of sources.</p> <ul> <li>Paid Services</li> <li>Government Provided Corrections</li> <li>Permanent Base</li> </ul> <p>Note: In July of 2025 u-blox announced the L-Band service to North America would be discontinued on December 31st, 2025. RTK Facet L-Band units will continue to work after this date as high precision devices, but they will need to switch to an internet based correction services to obtain an RTK Fix.</p>"},{"location":"correction_sources/#paid-services","title":"Paid Services","text":"<p>These services cover entire countries and regions but charge a monthly fee. Easy to use, but the most expensive.</p> <ul> <li>PointOneNav ($50/month) - US, EU</li> <li>Onocoy ($25/month) - US, EU, Australia, and many other partial areas</li> <li>Skylark ($29 to $69/month) - US, EU, Japan, Australia</li> <li>SensorCloud RTK ($100/month) partial US, EU</li> <li>Premium Positioning (~$315/month) partial EU</li> <li>KeyNetGPS ($375/month) North Eastern US</li> <li>Hexagon/Leica ($500/month) - partial US, EU</li> </ul> <p>Using PointOneNav is discussed in the Quick Start guide. We'll discuss using Skylark below. All services have the same basic interface: as long as the service has NTRIP, the SparkFun RTK product can use it.</p> <p>Skylark</p> <p></p> <p>Skylark Coverage Area</p> <p>A company called SwiftNav offers a service called Skylark. As of writing, for $29 to $69 per month, you will get corrections covering North America, Europe, and the Asia Pacific. This is a very simple method for obtaining NTRIP corrections.</p> <p></p> <p>Upon creating an account, you'll be issued NTRIP credentials that can immediately be used with Lefebure, SW Maps, or any GIS app that supports NTRIP. </p> <p></p> <p>Entering credentials into SW maps</p> <p>The most difficult part of using Skylark for corrections is entering the auto-generated NTRIP Password. While we understand security is important, it's not trivial manually entering these types of credentials into a GIS application.</p> <p></p> <p>SW Maps showing Positional Accuracy</p> <p>One downside is that with a 'regional' provider such as Skylark the distance to the correction station may be larger than 10km. While we've always gotten an RTK fix, we often see horizontal positional accuracy of ~30mm instead of the 14mm when using our fixed GNSS reference station. Your mileage may vary.</p> <p>PointPerfect</p> <p>PointPerfect is a correction service run by u-blox. While a few different types of services are offered by PointPerfect, we no longer recommend using PointPerfect for the older models including RTK Facet L-Band, RTK Facet, RTK Express, RTK Express Plus, or RTK Surveyor. Other correction services using NTRIP are easier to use with these models. The newer RTK models, including RTK Torch, RTK Postcard, RTK Facet mosaic, and RTK EVK do support PointPerfect Flex NTRIP/RTCM. More information can be found here for those devices.</p> <p>Discontinuation of L-Band Service: In July of 2025 u-blox announced the discontinuation of L-Band service to North America on December 31st, 2025. RTK Facet L-Band units will continue to work after this date as high precision devices, but they will need to switch to an internet based correction services to obtain an RTK Fix.</p>"},{"location":"correction_sources/#government-provided-corrections","title":"Government Provided Corrections","text":"<p>State Wide Network of Continuously Operating Reference Stations (CORS)</p> <p>Be sure to check if your state or country provides corrections for free. Many do! Currently, there are 21 states in the USA that provide this for free as a department of transportation service. Search \u2018Wisconsin CORS\u2019 as an example. Similarly, in France, check out CentipedeRTK. </p> <p></p> <p>UNAVCO is a US-based governmental organization that runs a network of publicly available NTRIP sources. If you're lucky there's a station within 10km (6 miles) of you.</p> <p></p> <p>EUREF is a permanent GNSS network in the EU.</p> <p>There are several public networks across the globe, be sure to google around!</p>"},{"location":"correction_sources/#permanent-base","title":"Permanent Base","text":"<p>The base station at SparkFun</p> <p>A permanent base is a user-owned and operated base station. See Creating a Permanent Base for more information. A permanent base has the benefit of being the most accurate, with relatively low cost, but requires at least 24 hours of initial logging and some mechanical setup time (attaching the antenna, connecting a device to the internet, etc).</p>"},{"location":"correction_sources/#temporary-base","title":"Temporary Base","text":"<p>Temporary RTK Express Base setup with serial radio</p> <p>A temporary or mobile base setup is handy when you are in the field too far away from a correction source, or if your measurements do not require absolute accuracy. </p> <p>To set up a temporary base, a 2nd RTK device is mounted to a tripod and it is configured to complete a survey-in (aka, locate itself). It will then begin broadcasting RTCM correction data. This data (~1000 bytes a second) is sent over a data link to one or multiple rovers that can then obtain RTK Fix. </p> <p>Any tripod with a \u00bc\u201d camera thread will work. The Amazon Basics tripod works well enough but is a bit lightweight and rickety. </p> <p>For RTK products with an external antenna (ie, RTK Surveyor, RTK Express, RTK Express Plus) a cell phone holder is clamped to the tripod and the RTK device is held in the clamp. The \u00bc\u201d camera thread is adapted to \u215d\u201d 11-TPI and an L1/L2 antenna is attached. A Male TNC to Male SMA adapter connects the antenna to the RTK device.</p> <p>Any of the RTK Products (excluding the RTK Express Plus) can be set up to operate in Base mode. Once the base has been set up with a clear view of the sky, turn on the RTK device.</p> <p>On the RTK Surveyor, toggle the Setup switch to BASE. The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the red BASE LED will blink while a survey-in is active. Once complete, the LED will turn solid red and begin transmitting RTCM out the RADIO port.</p> <p></p> <p>RTK device in Survey-In Mode</p> <p>On the RTK Facet, RTK Facet L-Band, and RTK Express press the SETUP button until Base is illuminated then stop pressing the Setup button. The device will then enter either 'Fixed' or 'Survey-In' type Base mode depending on the system configuration. If the type has been set to Survey-In, the display will show the Survey-In screen.</p> <p>Note: Base mode is not possible on the RTK Express Plus.</p> <p></p> <p>External Serial Radio attached to the back of the RTK Express</p> <p>Once the survey is complete the device will begin producing RTCM correction data. If you are using a serial radio, data should start flowing across the link. RTK devices are designed to follow the u-blox recommended survey-in of 60 seconds and a mean 3D standard deviation of 5m of all fixes. If a survey fails to achieve these requirements it will auto-restart after 10 minutes.</p> <p>More expensive surveyor bases have a \u215d\u201d 11-TPI thread but the top of the surveyor base will often interfere with the antenna\u2019s TNC connector. If you chose to use a surveyor\u2019s \u2018stick\u2019 (often called a Prism Pole) be sure to obtain an extension to raise the antenna at least an inch.</p> <p>If you\u2019re shopping for a cell phone clamp be sure to get one that is compatible with the diameter of your tripod and has a knob to increase clamp pressure. Our tripod is 18mm in diameter and we\u2019ve had a good experience with this clamp. Your mileage may vary.</p> <p>Note: A mobile base station works well for quick trips to the field. However, the survey-in method is not recommended for the highest accuracy measurements because the positional accuracy of the base will directly translate to the accuracy of the rover. Said differently, if your base's calculated position is off by 100cm, so will every reading your rover makes. For many applications, such as surveying, this is acceptable since the Surveyor may only be concerned with measuring the lengths of property lines or features. If you\u2019re looking for maximum accuracy consider installing a permanent static base with a fixed antenna. We were able to pinpoint the antenna on the top of SparkFun with an incredible accuracy +/-2mm of accuracy using PPP!</p>"},{"location":"correction_sources/#other-sources","title":"Other Sources","text":"<p>There are a large number of networks run throughout the world. Be sure to dig a bit to find a local correction source near you.</p> <p></p> <ul> <li>RTK2go offers a list and map (click 'View all' from the list) of stations using their public casting service. While none of these stations have been verified as accurate, it can be a decent starting point to do a 'quick' test of your system.</li> </ul>"},{"location":"correction_transport/","title":"Correction Transport","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>Once a correction source is chosen, the correction data must be transported from the base to the rover. The RTCM serial data is approximately 530 bytes per second and is transmitted at 57600bps out of the RADIO port on a SparkFun RTK device.</p> <p>There are a variety of ways to move data from a base to a rover. We will cover the most common below. </p> <p>Note: RTK calculations require RTCM data to be delivered approximately once per second. If RTCM data is lost or not received by a rover, RTK Fix can still be maintained for many seconds before the device will enter RTK Float mode. This is beneficial where devices like Serial Radios may drop packets due to RF congestion.</p> <p>Note: The RTK Facet L-Band is capable of receiving RTCM corrections from a terrestrial source but because it has a built-in L-Band receiver, we recommend using the satellite-based corrections.</p>"},{"location":"correction_transport/#wifi","title":"WiFi","text":"<p>Any SparkFun RTK device can be set up as an NTRIP Server. This means the device will connect to local WiFi and broadcast its correction data to the internet. The data is delivered to something called an NTRIP Caster. Any number of rovers can then access this data using something called an NTRIP Client. Nearly every GIS application has an NTRIP Client built into it so this makes it very handy.</p> <p>WiFi broadcasting is the most common transport method of getting RTCM correction data to the internet and to rovers via NTRIP Clients.</p> <p></p> <p>Similarly, any SparkFun RTK device can be set up as an NTRIP Client. The RTK device will connect to the local WiFi and begin downloading the RTCM data from the given NTRIP Caster and RTK Fix will be achieved. This is useful only if the Rover remains in RF range of the WiFi access point. Because of the limited range, we recommend using a cellphone rather than WiFi for NTRIP Clients.</p>"},{"location":"correction_transport/#cellular","title":"Cellular","text":"<p>Using a cellphone is the most common way of transporting correction data from the internet to a rover. This method uses the cell phone's built-in internet connection to obtain data from an NTRIP Caster and then pass those corrections over Bluetooth to the RTK device.</p> <p>Shown above are SW Map's NTRIP Client Settings. Nearly all GIS applications have an NTRIP Client built in so we recommend leveraging the device you already own to save money. Additionally, a cell phone gives your rover incredible range: a rover can obtain RTCM corrections anywhere there is cellular coverage.</p> <p>Cellular can even be used in Base mode. We have seen some very inventive users use an old cell phone as a WiFi access point. The base unit is configured as an NTRIP Server with the cellphone's WiFi AP credentials. The base performs a survey-in, connects to the WiFi, and the RTCM data is pushed over WiFi, over cellular, to an NTRIP Caster.</p>"},{"location":"correction_transport/#l-band","title":"L-Band","text":"<p>What if you are in the field, far away from WiFi, cellular, radio, or any other data connection? Look to the sky! </p> <p>A variety of companies provide GNSS RTK corrections broadcast from satellites over a spectrum called L-Band. L-Band is any frequency from 1 to 2 GHz. These frequencies have the ability to penetrate clouds, fog, and other natural weather phenomena making them particularly useful for location applications.</p> <p>These corrections are not as accurate as a fixed base station, and the corrections can require a monthly subscription fee, but you cannot beat the ease of use!</p> <p>L-Band reception requires specialized RF receivers capable of demodulating the satellite transmissions. Currently, the RTK Facet L-Band is the only product that supports L-Band correction reception.</p>"},{"location":"correction_transport/#serial-radios","title":"Serial Radios","text":"<p>Serial radios, sometimes called telemetry radios, provide what is essentially a serial cable between the base and rover devices. Transmission distance, frequency, maximum data rate, configurability, and price vary widely, but all behave functionally the same. SparkFun recommends the HolyBro 100mW and the SparkFun LoRaSerial 1W radios for RTK use.</p> <p></p> <p>All SparkFun RTK products include a 4-pin to 6-pin cable that will allow you to connect the HolyBro branded radio or the SparkFun LoRaSerial radios to a base and rover RTK device.</p> <p></p> <p>These radios attach nicely to the back or bottom of an RTK device.</p> <p>The benefit of a serial telemetry radio link is that you do not need to configure anything; simply plug two radios onto two RTK devices and turn them on. </p> <p>The downside to serial telemetry radios is that they generally have a much shorter range (often slightly more than a 1-kilometer functional range) than a cellular link can provide.</p>"},{"location":"correction_transport/#ethernet","title":"Ethernet","text":"<p>The Reference Station send and receive correction data via Ethernet. (Note: it cannot currently send or receive correction data via WiFi)</p> <p>Please see Ethernet Menu for more details.</p>"},{"location":"displays/","title":"Displays","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The RTK Facet, Facet L-Band, Express, and Express Plus utilize a 0.96\" high-contrast OLED display. While small, it packs various situational data that can be helpful in the field. We will walk you through each display.</p>"},{"location":"displays/#power-onoff","title":"Power On/Off","text":"<p>RTK Facet Startup and Shutdown Screens</p> <p>Press and hold the power button until the display illuminates to turn on the device. Similarly, press and hold the power button to turn off the device.</p> <p>The device's firmware version is shown during the Power On display.</p>"},{"location":"displays/#force-power-off","title":"Force Power Off","text":"<p>In the event that a device becomes unresponsive, the device can be completely powered off by holding the power button for 10 seconds or more. The force-power-off method is hardware-based and will therefore work regardless of what firmware the device may be running.</p> <p></p> <p>If the power state of a device is not known (for example, because a display may be malfunctioning) the device can be connected to USB. If one or more COM ports enumerate, the device is on (shown above). If no COM ports are seen, the device is fully powered off.</p>"},{"location":"displays/#rover-fix","title":"Rover Fix","text":"<p>Rover with location fix</p> <p>Upon power up the device will enter either Rover mode or Base mode. Above, the Rover mode is displayed.</p> <ul> <li>MAC: The MAC address of the internal Bluetooth module. This is helpful knowledge when attempting to connect to the device from your phone. This will change to a Bluetooth symbol once connected.</li> <li>HPA: Horizontal positional accuracy is an estimate of how accurate the current positional readings are. This number will decrease rapidly after the first power-up and settle around 0.3m depending on your antenna and view of the sky. When RTK fix is achieved this icon will change to a double circle and the HPA number will decrease even further to as low as 0.014m.</li> <li>SIV: Satellites in view is the number of satellites used for the fix calculation. This symbol will blink before a location fix is generated and become solid when the device has a good location fix. SIV is a good indicator of how good of a view the antenna has. This number will vary but anything above 10 is adequate. We've seen as high as 31.</li> <li>Model: This icon will change depending on the selected dynamic model: Portable (default) Pedestrian, Sea, Bike, Stationary, etc.</li> <li>Log: This icon will remain animated while the log file is increasing. This is a good visual indication that you have an SD card inserted and RTK Facet can successfully record to it. There are three logging icons <ul> <li>Standard (three lines) is shown when the standard 5 NMEA messages are being logged</li> <li>PPP (capital P) is shown when the standard 5 NMEA + RAWX and SFRBX messages are recorded. This is most often used for post process positioning (PPP) and 12 to 24-hour logs for fixed permanent bases.</li> <li>Custom (capital C) is shown when a custom set of messages are being recorded (not standard, and not PPP).</li> </ul> </li> </ul>"},{"location":"displays/#rover-rtk-fix","title":"Rover RTK Fix","text":"<p>Rover with RTK Fix and Bluetooth connected</p> <p>Once NTRIP is enabled on your phone or RTCM data is being streamed into the Radio port the device will gain an RTK Fix. You should see the HPA drop to 14mm with a double circle bulls-eye as shown above.</p>"},{"location":"displays/#base-survey-in","title":"Base Survey-In","text":"<p>RTK device in Survey-In Mode</p> <p>Pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained.</p>"},{"location":"displays/#base-transmitting","title":"Base Transmitting","text":"<p>RTK Facet in Fixed Transmit Mode</p> <p>Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second.</p> <p>The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base.</p>"},{"location":"displays/#base-transmitting-ntrip","title":"Base Transmitting NTRIP","text":"<p>If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi. </p> <p></p> <p>RTK Facet in Transmit Mode with NTRIP</p> <p>Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second.</p> <p>Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to the USB port to view detailed location and ZED-F9P configuration information.</p>"},{"location":"displays/#l-band","title":"L-Band","text":"<p>L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. </p> <p></p> <p>Display showing 14 days until L-Band Keys Expire</p> <p>The unit will display various messages to aid the user in obtaining keys as needed.</p> <p></p> <p>Three-pronged satellite dish indicating L-Band reception</p> <p>Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution.</p>"},{"location":"displays/#reference-station","title":"Reference Station","text":"<p>The Reference Station is able to detect an open circuit or a short circuit on the GNSS antenna connection.</p> <p></p> <p>Reference Station with the GNSS antenna disconnected (open circuit)</p> <p></p> <p>Reference Station with a GNSS antenna cable fault (short circuit)</p> <p>When the Reference Station is in Network Time Protocol (NTP) mode, the display also shows a clock symbol - as shown above. The value next to the clock symbol is the Time Accuracy Estimate (tAcc) from the UBX-NAV-PVT message.</p> <p>Note: tAcc is the time accuracy estimate for the navigation position solution. The timing accuracy of the TP pulse is significantly better than this. We show the tAcc as we believe it is more meaningful than the TIM-TP time pulse quantization error (qErr) - which is generally zero.</p>"},{"location":"displays/#adding-a-display-to-the-rtk-surveyor","title":"Adding a Display to the RTK Surveyor","text":"<p>While the RTK Surveyor works very well using only LEDs, it is possible to add an external display. The SparkFun Micro OLED Breakout (Qwiic) can be attached to the Qwiic connector on the end of the Surveyor. At power on, the display will be automatically detected and used.</p>"},{"location":"embeddedsystem_connection/","title":"Output to an Embedded System","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>Many applications using the RTK products will use a 3rd party GIS application or mobile app like SW Maps and receive the data over Bluetooth. Alternatively, for embedded applications, a user can obtain the NMEA data over serial directly.</p> <p>For this example, we will connect the output from the Data port to a USB to Serial adapter so that we can view the serial data over a terminal connection.</p> <p>The Data port on the RTK Facet, Express, and Express Plus can be configured to output a variety of different signals including NMEA Serial data. Be sure to check out the Ports Menu section to be sure your device is configured to output NMEA.</p> <p>Connect the included 4-pin JST to breadboard cable to the Data port. The cable has the following pinout:</p> <ul> <li>Red - 3.3V</li> <li>Green - TX (output from the RTK device)</li> <li>Orange - RX (input into the RTK device)</li> <li>Black - GND</li> </ul> <p></p> <p></p> <p></p> <p>Open a terminal at 115200bps and you should see NMEA sentences:</p> <p></p> <p>The Data connector on all RTK products is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source, so if your embedded device has its own power do not connect the red wire.</p> <p>Warning! All data in and out of RTK products is 3.3V. Exposing these pins to 5V or higher voltage logic will damage the device.</p> <p>The parsing of NMEA sentences is straightforward and left to the reader. There are ample NMEA parsing libraries available in C++, Arduino, Python, and many more languages.</p>"},{"location":"embeddedsystem_connection/#reference-station","title":"Reference Station","text":"<p>The Reference Station provides direct access to the u-blox GNSS TX and RX signals via the 3.5mm screw terminal I/O header:</p> <p></p> <ul> <li> <p>TX2 : u-blox ZED-F9P UART2 transmit: 3.3V OUTPUT</p> </li> <li> <p>RX2 : u-blox ZED-F9P UART2 receive: 3.3V INPUT</p> </li> </ul> <p>Please see the Reference Station Hookup Guide for more details.</p>"},{"location":"firmware_update/","title":"Updating RTK Firmware","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The device has two primary firmwares:</p> <ul> <li>Firmware on the ESP32 microcontroller. Keep reading.</li> <li>Firmware on the u-blox ZED-F9P, ZED-F9P, or NEO-D9S Receiver. See below.</li> </ul> <p>The device firmware is displayed in a variety of places:</p> <ul> <li>Power On</li> <li>Serial Config Menu</li> <li>WiFi Config</li> </ul> <p></p> <p>RTK Express with firmware v3.0</p> <p>During power-on, the display will show the current device Firmware.</p> <p></p> <p>Main Menu showing RTK Firmware v3.0-Jan 19 2023</p> <p>The firmware is displayed when the main menu is opened over a serial connection.</p> <p></p> <p>WiFi Config page showing device firmware v2.7 and ZED-F9P firmware HPG 1.32</p> <p>The firmware is shown at the top of the WiFi config page.</p> <p>From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded over WiFi using the OTA method.</p> <ul> <li>OTA Method: Connect over WiFi to SparkFun to download the latest firmware over-the-air. This can be done using the serial menu or while in WiFi AP Config Mode. Requires a local WiFi network.</li> <li>GUI Method: Use the Windows, Linux, MacOS or Python GUI and a USB cable. (The Python package has been tested on Raspberry Pi)</li> <li>SD Method: Load the firmware on an SD card, then use a serial terminal with the Firmware Upgrade menu</li> <li>WiFi Method: Load the firmware over WiFi when the device is in WiFi AP Config Mode</li> <li>CLI Method: Use the command line batch_program.bat</li> </ul> <p>The OTA method is generally recommended. For more information see here.</p> <p>Remember, all SparkFun RTK devices are open source hardware meaning you have total access to the firmware and hardware. Be sure to check out each repo for the latest firmware and hardware information.</p>"},{"location":"firmware_update/#updating-firmware-over-the-air","title":"Updating Firmware Over-The-Air","text":"<p>Updating the firmware via WiFi config page</p> <p></p> <p>Updating the firmware via Firmware serial menu</p> <p>Introduced with version 3.0, firmware can be updated by pressing a button in the System Configuration section of the WiFi Config page, or over the Firmware menu of the serial interface. This makes checking and upgrading a unit very easy.</p> <p>Additionally, users may opt into checking for Beta firmware. This is the latest firmware that may have new features and is meant for testing. Beta firmware is not recommended for units deployed into the field as it may not be stable.</p> <p>If you have a device with firmware lower than v3.0, you will need to use the GUI or a method listed below to get to v3.x.</p> <p>With version 3.10 automatic release firmware update is supported over WiFi.  Enabling this feature is done using the serial firmware menu.  The polling period is speified in minutes and defaults to once a day.  The automatic firmware update only checks for and installs the current SparkFun released firmware versions over top of any:</p> <ul> <li>Older released versions (continual upgrade)</li> <li>Beta firmware versions (newer or older, restore to released version)</li> <li>Locally built versions (newer or older, restore to released version)</li> </ul>"},{"location":"firmware_update/#updating-firmware-using-the-uploader-gui","title":"Updating Firmware Using The Uploader GUI","text":"<p>RTK Firmware GUI</p> <p>This GUI makes it easy to point and click your way through a firmware update. There are versions for Windows, Linux, MacOS and a Python package installer.</p> <p>The latest GUI release can be downloaded here.</p> <p>Download the latest RTK firmware binary file located on the releases page or from the binaries repo.</p> <p>To Use</p> <ul> <li>Attach the RTK device to your computer using a USB cable.</li> <li>Turn the RTK device on.</li> <li>On Windows, open the Device Manager to confirm which COM port the device is operating on. On other platforms, check <code>/dev</code>.</li> </ul> <p></p> <p>Device Manager showing 'USB-Serial CH340' port on COM27</p> <ul> <li>Get the latest binary file located on the releases page or from the binaries repo.</li> <li>Run RTKUploader.exe (it takes a few seconds to start)</li> <li>Click Browse and select the binary file to upload</li> <li>Select the COM port previously seen in the Device Manager</li> <li>Click Upload Firmware</li> </ul> <p>Once complete, the device will reset and power down.</p> <p>If your RTK 'freezes' after the update, press <code>Reset ESP32</code> to get it going again.</p>"},{"location":"firmware_update/#updating-firmware-from-the-sd-card","title":"Updating Firmware From the SD Card","text":"<p>Firmware update taking place</p> <p>Download the latest binary file located on the releases page or from the binaries repo.</p> <p>The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot.</p> <p>Note: The firmware is called <code>RTK_Surveyor_Firmware_vXX.bin</code> even though there are various RTK products (Facet, Express, Surveyor, etc). We united the different platforms into one. The RTK Firmware runs on all our RTK products.</p>"},{"location":"firmware_update/#force-firmware-loading","title":"Force Firmware Loading","text":"<p>In the rare event that a unit is not staying on long enough for new firmware to be loaded into a COM port, the RTK Firmware (as of version 1.2) has an override function. If a file named RTK_Surveyor_Firmware_Force.bin is detected on the SD card at boot that file will be used to overwrite the current firmware, and then be deleted. This update path is generally not recommended. Use the GUI or WiFi OTA methods as the first resort.</p>"},{"location":"firmware_update/#updating-firmware-from-wifi","title":"Updating Firmware From WiFi","text":"<p>Note: Firmware versions 1.1 to 1.9 have an issue that severely limits firmware upload over WiFi and is not recommended; use the GUI method instead. Firmware versions v1.10 and beyond support direct firmware updates via WiFi.</p> <p>Firmware may be uploaded to the unit by clicking on 'Upload BIN', selecting the binary such as 'RTK_Surveyor_Firmware_v3_x.bin' and pressing upload. The unit will automatically reset once the firmware upload is complete.</p>"},{"location":"firmware_update/#updating-firmware-from-cli","title":"Updating Firmware From CLI","text":"<p>The command-line interface is also available. You\u2019ll need to download the RTK Firmware Binaries repo. This repo contains the binaries but also various supporting tools including esptool.exe and the three binaries required along with the firmware (bootloader, partitions, and app0).</p>"},{"location":"firmware_update/#windows","title":"Windows","text":"<p>Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. The easiest way to do this is to open the Device Manager:</p> <p></p> <p>CH340 is on COM6 as shown in Device Manager</p> <p>If the COM port is not showing be sure the unit is turned On. If an unknown device is appearing, you\u2019ll need to install drivers for the CH340. Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019).</p> <p></p> <p>batch_program.bat running esptool</p> <p>Once the correct COM is identified, run 'batch_program.bat' along with the binary file name and COM port. For example batch_program.bat RTK_Surveyor_Firmware_v2_0.bin COM6. COM6 should be replaced by the COM port you identified earlier.</p> <p>The batch file runs the following commands:</p> <pre><code>esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor_Partitions_16MB.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin\n</code></pre> <p>Where COM6 is replaced with the COM port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load.</p> <p>Note: Some users have reported the 921600bps baud rate does not work. Decrease this to 115200 as needed.</p> <p>Upon completion, your RTK device will reset and power down.</p>"},{"location":"firmware_update/#macos-linux","title":"macOS / Linux","text":"<p>Get esptool.py. Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at.</p> <p>If the COM port is not showing be sure the unit is turned On. If an unknown device is appearing, you\u2019ll need to install drivers for the CH340. Once you know the COM port, run the following command:</p> <pre><code>py esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor_Partitions_16MB.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin\n</code></pre> <p>Where /dev/ttyUSB0 is replaced with the port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load.</p> <p>Note: Some users have reported the 921600bps baud rate does not work. Decrease this to 115200 as needed.</p> <p>Upon completion, your RTK device will reset and power down.</p>"},{"location":"firmware_update/#updating-4mb-surveyors","title":"Updating 4MB Surveyors","text":"<p>RTK Surveyors sold before September 2021 may have an ESP32 WROOM module with 4MB flash instead of 16MB flash. These units still support all the functionality of other RTK products with the following limitations:</p> <ul> <li>There is not enough flash space for OTA. Upgrading the firmware must be done via CLI or GUI. OTA, WiFi, or SD update paths are not possible.</li> </ul> <p>The GUI (as of v1.3) will autodetect the ESP32's flash size and load the appropriate partition file. No user interaction is required.</p> <p>If you are using the CLI method, be sure to point to the 4MB partition file. For example:</p> <pre><code>esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/**RTK_Surveyor_Partitions_4MB**.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin\n</code></pre>"},{"location":"firmware_update/#determining-the-size-of-flash","title":"Determining The Size of Flash","text":"<p>To determine if the device has a 4MB module:</p> <ul> <li>Use the esptool via CLI. Please see the flash_id command for usage.</li> <li>Use the GUI and attempt a firmware update. The output will auto-detect and show the flash size, as shown below:</li> </ul> <p></p>"},{"location":"firmware_update/#updating-u-blox-firmware","title":"Updating u-blox Firmware","text":"<p>The following products contain the following u-blox receivers:</p> <ul> <li>RTK Surveyor: ZED-F9P</li> <li>RTK Express: ZED-F9P</li> <li>RTK Express Plus: ZED-F9R</li> <li>RTK Facet: ZED-F9P</li> <li>RTK Facet L-Band: ZED-F9P and NEO-D9S</li> </ul> <p>The firmware loaded onto the ZED-F9P, ZED-F9R, and NEO-D9S receivers is written by u-blox and can vary depending on the manufacture date. The RTK Firmware (that runs on the ESP32) is designed to flexibly work with any u-blox firmware. Upgrading the ZED-F9x/NEO-D9S is a good thing to consider but is not crucial to the use of RTK products.</p> <p>Not sure what firmware is loaded onto your RTK product? Open the System Menu to display the module's current firmware version.</p> <p>The firmware on u-blox devices can be updated using a Windows-based GUI or u-center. A CLI method is also possible using the <code>ubxfwupdate.exe</code> tool provided with u-center. Additionally, u-blox offers the source for the ubxfwupdate tool that is written in C. It is currently released only under an NDA so contact your local u-blox Field Applications Engineer if you need a different method.</p>"},{"location":"firmware_update/#updating-using-windows-gui","title":"Updating Using Windows GUI","text":"<p>SparkFun RTK u-blox Firmware Update Tool</p> <p>The SparkFun RTK u-blox Firmware Update Tool is a simple Windows GUI and python script that runs the ubxfwupdate.exe tool. This allows users to directly update module firmware without the need for u-center. Additionally, this tool queries the module to verify that the firmware type matches the module. Because the RTK Facet L-Band contains two u-blox modules that both appear as identical serial ports, it can be difficult and perilous to know which port to load firmware. This tool prevents ZED-F9P firmware from being accidentally loaded onto a NEO-D9S receiver and vice versa.</p> <p>The SparkFun RTK u-blox Firmware Update Tool will only run on Windows as it relies upon u-blox's <code>ubxfwupdate.exe</code>. The full, integrated executable for Windows is available here.</p> <ul> <li>Attach the RTK device's USB port to your computer using a USB cable</li> <li>Turn the RTK device on</li> <li>Open Device Manager to confirm which COM port the device is operating on</li> </ul> <p></p> <p>Device Manager showing USB Serial port on COM14</p> <ul> <li>Get the latest binary firmware file from the ZED Firmware, NEO Firmware folder, or the u-blox website</li> <li>Run RTK_u-blox_Update_GUI.exe (it takes a few seconds to start)</li> <li>Click the Firmware File Browse and select the binary file for the update</li> <li>Select the COM port previously seen in the Device Manager</li> <li>Click Update Firmware</li> </ul> <p>Once complete, the u-blox module will restart.</p>"},{"location":"firmware_update/#updating-using-u-center","title":"Updating Using u-center","text":"<p>If you're familiar with u-center a tutorial with step-by-step instructions for locating the firmware version as well as changing the firmware can be found in How to Upgrade Firmware of a u-blox Receiver.</p>"},{"location":"firmware_update/#zed-f9p-firmware-changes","title":"ZED-F9P Firmware Changes","text":"<p>This module is used in the Surveyor, Express, and Facet. It is capable of both Rover and base modes.</p> <p>Most of these binaries can be found in the ZED Firmware/ZED-F9P folder.</p> <p>All field testing and device-specific performance parameters were obtained with ZED-F9P v1.30.</p> <ul> <li> <p>v1.12 has the benefit of working with SBAS and an operational RTK status signal (the LED illuminates correctly). See release notes.</p> </li> <li> <p>v1.13 has a few RTK and receiver performance improvements but introduces a bug that causes the RTK Status LED to fail when SBAS is enabled. See release notes.</p> </li> <li> <p>v1.30 has a few RTK and receiver performance improvements, I<sup>2</sup>C communication improvements, and most importantly support for SPARTN PMP packets. See release notes.</p> </li> <li> <p>v1.32 has a few SPARTN protocol-specific improvements. See release notes. This firmware is required for use with the NEO-D9S and the decryption of PMP messages.</p> </li> </ul>"},{"location":"firmware_update/#zed-f9r-firmware-changes","title":"ZED-F9R Firmware Changes","text":"<p>This module is used in the Express Plus. It contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning. The ZED-F9R is not capable of operating in base mode.</p> <p>Most of these binaries can be found in the ZED Firmware/ZED-F9R folder.</p> <ul> <li> <p>v1.00 Initial release.</p> </li> <li> <p>v1.21 SPARTN support as well as adding E-scooter and robotic lawnmower dynamic models. See release notes.</p> </li> </ul>"},{"location":"firmware_update/#neo-d9s-firmware-changes","title":"NEO-D9S Firmware Changes","text":"<p>This module is used in the Facet L-Band to receive encrypted PMP messages over ~1.55GHz broadcast via a geosynchronous Inmarsat.</p> <p>This binary file can be found in the NEO Firmware folder.</p> <ul> <li>v1.04 Initial release.</li> </ul> <p>As of writing, no additional releases of the NEO-D9S firmware have been made.</p>"},{"location":"firmware_update/#compiling-source","title":"Compiling Source","text":"<p>This is information about how to compile the RTK Firmware from source. This is for advanced users who would like to modify the functionality of the RTK products.</p> <ul> <li>How SparkFun does it</li> <li>Using Docker</li> <li>Compiling on Windows (Deprecated)</li> <li>Compiling on Ubuntu 20.04 (Deprecated)</li> </ul>"},{"location":"firmware_update/#how-sparkfun-does-it","title":"How SparkFun does it","text":"<p>At SparkFun, we use GitHub Actions and a Workflow to compile each release of RTK Firmware. We run the compilation workflow directly on GitHub. A virtual ubuntu machine installs the Arduino CLI, installs the correct ESP32 Arduino core, patches the core in a couple of places, installs all the required libraries at the required version, converts the embedded HTML and Bootstrap JavaScript to binary zip format, and generates the firmware binary for the ESP32. That binary is either uploaded as an Artifact (by non-release-build) or pushed to the SparkFun RTK Firmware Binaries repo (by the compilation workflow).</p> <p>You are welcome to clone or fork this repo and do the exact same thing yourself. But you may need a paid GitHub Pro account to run the GitHub Actions, especially if you keep your clone / fork private.</p> <p>If you run the compilation workflow, it will compile the firmware and attempt to push the binary to the Binaries repo. This will fail as your account won't have the right permissions. The non-release-build is the one for you. The firmware binary will be attached as an Artifact to the workflow run. Navigate to Actions  Non-Release Build, select the latest run of Non-Release Build, the binary is in the Artifacts.</p> <p>You can then use (e.g.) the SparkFun RTK Firmware Uploader to upload the binary onto the ESP32.</p>"},{"location":"firmware_update/#using-docker","title":"Using Docker","text":"<p>Installing the correct version of the ESP32 core and of each required Arduino library, is tedious and error-prone. Especially on Windows. We've lost count of the number of times code compilation fails on our local machines, because we had the wrong ESP32 core installed, or forgot to patch Server.h... It is much easier to sandbox the firmware compilation using an environment like Docker.</p> <p>Docker is open-source. It is our new favourite thing!</p> <p>Here is a step-by-step guide for how to install Docker and compile the firmware from scratch:</p>"},{"location":"firmware_update/#clone-fork-or-download-the-rtk-firmware-repo","title":"Clone, fork or download the RTK Firmware repo","text":"<p>To build the RTK Firmware, you obviously need a copy of the source code.</p> <p>If you are familiar with Git and GitHub Desktop, you can clone the RTK Firmware repo directly into GitHub Desktop:</p> <p></p> <p>If you want to contribute to the RTK Firmware, and already have a GitHub account, you can Fork the repo:</p> <p></p> <p>Clone your fork to your local machine, make changes, and send us a Pull Request. This is exactly what the SparkFun Team do when developing the code. Please use the <code>release_candidate</code> branch for any such changes. We are very unlikely to merge anything directly into <code>main</code>, unless it is (e.g.) docs corrections or improvements.</p> <p>If you don't want to do either of those, you can simply Download a Zip copy of the repo instead. You will receive a complete copy as a Zip file. You can do this from the green Code button, or click on the icon below to download a copy of the main (released) branch:</p> <p></p> <p>For the real Wild West experience, you can also download a copy of the <code>release_candidate</code> code branch. This is where the team is actively changing and testing the code, before it becomes a full release. The code there will usually compile and will usually work, but we don't guarantee it! We may be part way through implementing some breaking changes at the time of your download...</p> <p></p>"},{"location":"firmware_update/#install-docker-desktop","title":"Install Docker Desktop","text":"<ul> <li>(Optional) Head to Docker and create an account. A free \"Personal\" account will cover occasional compilations of the firmware</li> <li>Download and install Docker Desktop - there are versions for Mac, Windows and Linux. You may need to restart to complete the installation.</li> <li>Run the Desktop<ul> <li>You don't need to have an account and you don't need to be signed in</li> <li>You only need to be signed in if you want to store or share your Container on Docker Hub</li> <li>If you don't sign in, Docker Desktop will run in Personal mode - which will cover local compilations of the firmware</li> </ul> </li> <li>On Windows, you may see an error saying \"WSL needs updating Your version of Windows Subsystem for Linux (WSL) is too old\". If you do:<ul> <li>Open a command prompt</li> <li>Type <code>wsl --update</code> to update WSL. At the time of writing, this installs Windows Subsystem for Linux 2.6.1</li> <li>Restart the Docker Desktop</li> </ul> </li> <li>If you are using Docker for the first time, the \"What is a container?\" and \"How do I run a container?\" demos are useful - but not essential<ul> <li>On Windows, you may want to give Docker Desktop permission to access to your Network, so it can access (e.g.) HTML ports</li> <li>You can Stop the container and Delete it when you are done</li> </ul> </li> <li>You may want to prevent Docker from running when your machine starts up<ul> <li>Uncheck \"Start Docker Desktop when you sign in to your computer\" in the Desktop settings</li> </ul> </li> </ul>"},{"location":"firmware_update/#using-docker-to-create-the-firmware-binary","title":"Using Docker to create the firmware binary","text":"<ul> <li>Make sure you have Docker Desktop running. You don't need to be signed in, but it needs to be running.</li> <li>Open a Command Prompt and <code>cd</code> into the SparkFun_RTK_Firmware folder</li> <li>Check you are in the right place. Type <code>dir</code> and hit enter. You should see the following files and folders:</li> </ul> <pre><code>    .gitattributes\n    .github\n    .gitignore\n    docs\n    Firmware\n    Graphics\n    Issue_Template.md\n    License.md\n    README.md\n</code></pre> <ul> <li><code>cd Firmware</code> and then <code>dir</code> again. You should see:</li> </ul> <pre><code>    app3M_fat9M_16MB.csv\n    compile_with_docker.bat\n    Dockerfile\n    readme.md\n    RTKFirmware.csv\n    RTK_Surveyor\n</code></pre> <ul> <li> <p>The file that does most of the work is the <code>Dockerfile</code></p> </li> <li> <p>But, if you're short on time, run <code>compile_with_docker.bat</code>. It does everything for you:</p> </li> </ul> <p></p> <ul> <li>Hey presto! You have your newly compiled firmware binary!</li> </ul> <p>You can then use (e.g.) the SparkFun RTK Firmware Uploader to upload the binary onto the ESP32.</p>"},{"location":"firmware_update/#running-the-dockerfile-manually","title":"Running the Dockerfile manually","text":"<p>If you want to see and understand what's going on under the hood with the Dockerfile, Image and Container:</p> <p>Here is how to perform each step manually:</p> <ul> <li>To begin, run the Dockerfile. Type:</li> </ul> <pre><code>docker build -t rtk_firmware .\n</code></pre> <p>You should see:</p> <p></p> <p></p> <ul> <li>If you want to see the full build progress including the output of echo or ls, use:</li> </ul> <pre><code>docker build -t rtk_firmware --progress=plain .\n</code></pre> <ul> <li>If you want to rebuild the image completely from scratch, without using the cache, use:</li> </ul> <pre><code>docker build -t rtk_firmware --progress=plain --no-cache .\n</code></pre> <p>Building the full Image from scratch is slow, taking several minutes. You should only need to do it once - unless you make any changes to the Dockerfile.</p> <ul> <li>When you make changes to the source code and want to recompile, use:</li> </ul> <pre><code>docker build -t rtk_firmware --no-cache-filter deployment .\n</code></pre> <p>This uses the cache for the <code>upstream</code> stage and avoids recreating the full ubuntu machine. But it ignores the cache for the <code>deployment</code> stage, ensuring the code is recompiled.</p>"},{"location":"firmware_update/#access-the-firmware-binary-by-running-the-image","title":"Access the firmware binary by running the Image","text":"<p>In Docker Desktop, in the Images tab, you should now be able to see an Image named <code>rtk_firmware</code>. We now need to Run that Image to access the firmware binary. Click the triangular Run icon under Actions:</p> <p></p> <p>Running the Image will create a Container, through which we can access the output of the arduino-cli code compilation.</p> <p>By default, the Container name is random. To avoid this, we define one in the Optional settings :</p> <p></p> <p>Run the Container and you should see:</p> <p></p> <p>In the Command Prompt, type the following :</p> <pre><code>docker cp rtk_container:/RTK_Surveyor.ino.bin .\n</code></pre> <p>Hey presto! A file called <code>RTK_Surveyor.ino.bin</code> appears in the current directory. That's the firmware binary we are going to upload to the ESP32.</p> <p></p> <p>If you need the <code>.elf</code> file so you can debug code crashes with me-no-dev's ESP ExceptionDecoder:</p> <pre><code>docker cp rtk_container:/RTK_Surveyor.ino.elf .\n</code></pre> <p>If you need the <code>.bootloader.bin</code> file so you can upload it with esptool:</p> <pre><code>docker cp rtk_container:/RTK_Surveyor.ino.bootloader.bin .\n</code></pre> <p>If you want the files to appear in a more convenient directory, replace the single <code>.</code> with a folder path.</p> <p>Delete the <code>rtk_container</code> container afterwards, to save disk space and so you can reuse the same container name next time. If you forget, you will see an error:</p> <p><code>Conflict. The container name \"/rtk_container\" is already in use by container. You have to remove (or rename) that container to be able to reuse that name.</code></p> <ul> <li>Remember: when you make changes to the source code and want to recompile, use:</li> </ul> <pre><code>docker build -t rtk_firmware --no-cache-filter deployment .\n</code></pre>"},{"location":"firmware_update/#shortcut-compile_with_dockerbat","title":"Shortcut: compile_with_docker.bat","text":"<p>Shortcut: the <code>compile_with_docker.bat</code> batch file does everything for you:</p> <pre><code>docker build -t rtk_firmware --no-cache-filter deployment .\ndocker create --name=rtk_container rtk_firmware:latest\ndocker cp rtk_container:/RTK_Surveyor.ino.bin .\ndocker cp rtk_container:/RTK_Surveyor.ino.elf .\ndocker cp rtk_container:/RTK_Surveyor.ino.bootloader.bin .\ndocker container rm rtk_container\n</code></pre>"},{"location":"firmware_update/#changing-the-build-properties","title":"Changing the build properties","text":"<p>Changing the build properties: if you want to change the build properties and (e.g.) include your own PointPerfect token, paste the following into a .bat file or shell script:</p> <pre><code>docker build -t rtk_firmware --no-cache-filter deployment^\n --build-arg FIRMWARE_VERSION_MAJOR=99^\n --build-arg FIRMWARE_VERSION_MINOR=99^\n --build-arg POINTPERFECT_TOKEN=\"0xe0,0x9c,&lt;&lt;=YOUR TOKEN IN C HEX FORMAT=&gt;&gt;,0x70,0x00\"^\n --build-arg ENABLE_DEVELOPER=false^\n --build-arg DEBUG_LEVEL=none^\n .\ndocker create --name=rtk_container rtk_firmware:latest\ndocker cp rtk_container:/RTK_Surveyor.ino.bin .\ndocker cp rtk_container:/RTK_Surveyor.ino.elf .\ndocker cp rtk_container:/RTK_Surveyor.ino.bootloader.bin .\ndocker container rm rtk_container\n</code></pre>"},{"location":"firmware_update/#compiling-on-windows-deprecated","title":"Compiling on Windows (Deprecated)","text":"<p>Note: we recommend using the Docker method. It is far easier and much less error-prone...</p> <p>The SparkFun RTK Firmware can be compiled using the Arduino IDE (currently v1.8.19). To compile:</p> <ol> <li> <p>Install Arduino.</p> </li> <li> <p>Install ESP32 for Arduino. Here are some good instructions for installing it via the Arduino Boards Manager. Note: Use v2.0.2 of the core. Note: We use the 'ESP32 Dev Module' for pin numbering. Select the correct board under Tools-&gt;Board-&gt;ESP32 Arduino-&gt;ESP32 Dev Module.</p> </li> <li> <p>Change the Partition table. Replace</p> <p><code>C:\\Users\\\\[user name]\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\2.0.2\\tools\\partitions\\app3M_fat9M_16MB.csv</code></p> <p>with the app3M_fat9M_16MB.csv file found in the Firmware folder. This will increase the program partition from a maximum of 1.9MB to 3MB.</p> </li> <li> <p>From the Arduino IDE, set the core settings from the Tools menu:</p> <p>A. Set the 'Partition Scheme' to 16M Flash (3MB APP/9MB FATFS). This will use the 'app3M_fat9M_16MB.csv' updated partition table.</p> <p>B. Set the 'Flash Size' to 16MB (128mbit)</p> </li> <li> <p>Obtain all the required libraries.</p> </li> <li> <p>Patch <code>Server.h</code> in the ESP core: copy <code>Server.h</code> from the <code>RTK_Surveyor\\Patch</code> folder and replace:</p> </li> </ol> <pre><code>~/.arduino15/packages/esp32/hardware/esp32/2.0.2/cores/esp32/Server.h\n</code></pre> <ol> <li>Update the web config <code>form.h</code> by running the two python scripts in the <code>Tools</code> folder:</li> </ol> <pre><code>python index_html_zipper.py ../RTK_Surveyor/AP-Config/index.html ../RTK_Surveyor/form.h\npython main_js_zipper.py ../RTK_Surveyor/AP-Config/src/main.js ../RTK_Surveyor/form.h\n</code></pre> <p>Once compiled, firmware can be uploaded directly to a unit when the RTK unit is on and the correct COM port is selected under the Arduino IDE Tools-&gt;Port menu.</p> <p>If you are seeing the error:</p> <p>text section exceeds available space ...</p> <p>You have not replaced the partition file correctly. See the 'Change Partition table' step inside the Windows instructions.</p> <p>Note: There are a variety of compile guards (COMPILE_WIFI, COMPILE_AP, etc) at the top of RTK_Surveyor.ino that can be commented out to remove them from compilation. This will greatly reduce the firmware size and allow for faster development of functions that do not rely on these features (serial menus, system configuration, logging, etc).</p>"},{"location":"firmware_update/#required-libraries","title":"Required Libraries","text":"<p>Note: You should click on the link next to each of the #includes at the top of RTK_Surveyor.ino within the Arduino IDE to open the library manager and download them. Getting them directly from Github also works but may not be 'official' releases.</p> <p>Using the library manager in the Arduino IDE, for each of the libraries below:</p> <pre><code>1. Locate the library by typing the libary name into the search box\n\n2. Click on the library\n\n3. Select the version listed in the compile-rtk-firmware.yml file for the [main](https://github.com/sparkfun/SparkFun_RTK_Firmware/blob/main/.github/workflows/compile-rtk-firmware.yml) or the [release_candidate](https://github.com/sparkfun/SparkFun_RTK_Firmware/blob/release_candidate/.github/workflows/compile-rtk-firmware.yml) branch\n\n4. Click on the Install button in the lower right\n</code></pre> <p>The RTK firmware requires the following libraries:</p> <pre><code>* [Arduino JSON @ 6.19.4](https://github.com/bblanchon/ArduinoJson)\n\n* [ESP32Time @ 2.0.0](https://github.com/fbiego/ESP32Time)\n\n* [ESP32 BleSerial @ 1.0.5](https://github.com/avinabmalla/ESP32_BleSerial)\n\n* [ESP32-OTA-Pull @ 1.0.0](https://github.com/mikalhart/ESP32-OTA-Pull)\n\n* Ethernet @ 2.0.2\n\n* [JC_Button @ 2.1.2](https://github.com/JChristensen/JC_Button)\n\n* [PubSub Client for MQTT @ 2.8.0](https://github.com/knolleary/pubsubclient)\n\n* [SdFat @ 2.1.1](https://github.com/greiman/SdFat)\n\n* [SparkFun LIS2DH12 Arduino Library @ 1.0.3](https://github.com/sparkfun/SparkFun_LIS2DH12_Arduino_Library)\n\n* [SparkFun MAX1704x Fuel Gauge Arduino Library @ 1.0.4](https://github.com/sparkfun/SparkFun_MAX1704x_Fuel_Gauge_Arduino_Library)\n\n* [SparkFun u-blox GNSS v3 @ 3.0.14](https://github.com/sparkfun/SparkFun_u-blox_GNSS_v3)\n\n* [SparkFun_WebServer_ESP32_W5500 @ 1.5.5](https://github.com/SparkFun/SparkFun_WebServer_ESP32_W5500)\n\n* [SparkFun Qwiic OLED Arduino Library @ 1.0.13](https://github.com/sparkfun/SparkFun_Qwiic_OLED_Arduino_Library)\n\n* [SSL CLient ESP32 @ 2.0.0](https://github.com/alkonosst/SSLClientESP32)\n</code></pre> <p>The following libraries are only available via GitHub:</p> <pre><code>* [AsyncTCP](https://github.com/me-no-dev/AsyncTCP) (not available via library manager)\n\n* [ESPAsyncWebServer](https://github.com/me-no-dev/ESPAsyncWebServer) (not available via library manager)\n</code></pre>"},{"location":"firmware_update/#compiling-on-ubuntu-2004-deprecated","title":"Compiling on Ubuntu 20.04 (Deprecated)","text":""},{"location":"firmware_update/#virtual-machine","title":"Virtual Machine","text":"<p>Execute the following commands to create the Linux virtual machine:</p> <ol> <li> <p>Using a browser, download the Ubuntu 20.04 Desktop image</p> </li> <li> <p>virtualbox</p> <ol> <li>Click on the new button</li> <li>Specify the machine Name, e.g.: Sparkfun_RTK_20.04</li> <li>Select Type: Linux</li> <li>Select Version: Ubuntu (64-bit)</li> <li>Click the Next&gt; button</li> <li>Select the memory size: 7168</li> <li>Click the Next&gt; button</li> <li>Click on Create a virtual hard disk now</li> <li>Click the Create button</li> <li>Select VDI (VirtualBox Disk Image)</li> <li>Click the Next&gt; button</li> <li>Select Dynamically allocated</li> <li>Click the Next&gt; button</li> <li>Select the disk size: 128 GB</li> <li>Click the Create button</li> <li>Click on Storage</li> <li>Click the empty CD icon</li> <li>On the right-hand side, click the CD icon</li> <li>Click on Choose a disk file...</li> <li>Choose the ubuntu-20.04... iso file</li> <li>Click the Open button</li> <li>Click on Network</li> <li>Under 'Attached to:' select Bridged Adapter</li> <li>Click the OK button</li> <li>Click the Start button</li> </ol> </li> <li> <p>Install Ubuntu 20.04</p> </li> <li> <p>Log into Ubuntu</p> </li> <li> <p>Click on Activities</p> </li> <li> <p>Type terminal into the search box</p> </li> <li> <p>Optionally install the SSH server</p> <ol> <li> <p>In the terminal window</p> <ol> <li>sudo apt install -y net-tools openssh-server</li> <li>ifconfig</li> </ol> <p>Write down the IP address</p> </li> <li> <p>On the PC</p> <ol> <li>ssh-keygen -t rsa -f ~/.ssh/Sparkfun_RTK_20.04</li> <li>ssh-copy-id -o IdentitiesOnly=yes -i ~/.ssh/Sparkfun_RTK_20.04  &lt;username&gt;@&lt;IP address&gt;</li> <li>ssh -Y &lt;username&gt;@&lt;IP address&gt;</li> </ol> </li> </ol> </li> </ol>"},{"location":"firmware_update/#build-environment","title":"Build Environment","text":"<p>Execute the following commands to create the build environment for the SparkFun RTK Firmware:</p> <ol> <li>sudo adduser $USER dialout</li> <li> <p>sudo shutdown -r 0</p> <p>Reboot to ensure that the dialout privilege is available to the user</p> </li> <li> <p>sudo apt update</p> </li> <li>sudo apt install -y  git  gitk  git-cola  minicom  python3-pip</li> <li>sudo pip3 install pyserial</li> <li>mkdir ~/SparkFun</li> <li>mkdir ~/SparkFun/esptool</li> <li>cd ~/SparkFun/esptool</li> <li>git clone https://github.com/espressif/esptool .</li> <li>cd ~/SparkFun</li> <li> <p>nano serial-port.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   serial-port.sh\n#\n#   Shell script to read the serial data from the RTK Express ESP32 port\n#\n#   Parameters:\n#       1:  ttyUSBn\n#\nsudo minicom -b 115200 -8 -D /dev/$1 &lt; /dev/tty\n</code></pre> </li> <li> <p>chmod +x serial-port.sh</p> </li> <li> <p>nano new-firmware.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   new-firmware.sh\n#\n#   Shell script to load firmware into the RTK Express via the ESP32 port\n#\n#   Parameters:\n#      1: ttyUSBn\n#      2: Firmware file\n#\nsudo python3 ~/SparkFun/RTK_Binaries/Uploader_GUI/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\\n0x1000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\\n0x8000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor_Partitions_16MB.bin \\\n0xe000   ~/SparkFun/RTK_Binaries/bin/boot_app0.bin \\\n0x10000  $2\n</code></pre> </li> <li> <p>chmod +x new-firmware.sh</p> </li> <li> <p>nano new-firmware-4mb.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   new-firmware-4mb.sh\n#\n#   Shell script to load firmware into the 4MB RTK Express via the ESP32 port\n#\n#   Parameters:\n#      1: ttyUSBn\n#      2: Firmware file\n#\nsudo python3 ~/SparkFun/RTK_Binaries/Uploader_GUI/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\\n0x1000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\\n0x8000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor_Partitions_4MB.bin \\\n0xe000   ~/SparkFun/RTK_Binaries/bin/boot_app0.bin \\\n0x10000  $2\n</code></pre> </li> <li> <p>chmod +x new-firmware-4mb.sh</p> <p>Get the SparkFun RTK Firmware sources</p> </li> <li> <p>mkdir ~/SparkFun/RTK</p> </li> <li>cd ~/SparkFun/RTK</li> <li> <p>git clone https://github.com/sparkfun/SparkFun_RTK_Firmware .</p> <p>Get the SparkFun RTK binaries</p> </li> <li> <p>mkdir ~/SparkFun/RTK_Binaries</p> </li> <li>cd ~/SparkFun/RTK_Binaries</li> <li> <p>git clone https://github.com/sparkfun/SparkFun_RTK_Firmware_Binaries.git .</p> <p>Install the Arduino IDE</p> </li> <li> <p>mkdir ~/SparkFun/arduino</p> </li> <li>cd ~/SparkFun/arduino</li> <li>wget https://downloads.arduino.cc/arduino-1.8.15-linux64.tar.xz</li> <li>tar -xvf ./arduino-1.8.15-linux64.tar.xz</li> <li>cd arduino-1.8.15/</li> <li> <p>sudo ./install.sh</p> <p>Add the ESP32 support</p> </li> <li> <p>Arduino</p> <ol> <li>Click on File in the menu bar</li> <li>Click on Preferences</li> <li>Go down to the Additional Boards Manager URLs text box</li> <li>Only if the textbox already has a value, go to the end of the value or values and add a comma</li> <li>Add the link: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json</li> <li>Note the value in Sketchbook location</li> <li>Click the OK button</li> <li>Click on File in the menu bar</li> <li>Click on Quit</li> </ol> <p>Get the required external libraries, then add to the Sketchbook location from above</p> </li> <li> <p>cd   ~/Arduino/libraries</p> </li> <li>mkdir AsyncTCP</li> <li>cd AsyncTCP/</li> <li>git clone https://github.com/me-no-dev/AsyncTCP.git .</li> <li>cd ..</li> <li>mkdir ESPAsyncWebServer</li> <li>cd ESPAsyncWebServer</li> <li> <p>git clone https://github.com/me-no-dev/ESPAsyncWebServer .</p> <p>Connect the Config ESP32 port of the RTK to a USB port on the computer</p> </li> <li> <p>ls /dev/ttyUSB*</p> <p>Enable the libraries in the Arduino IDE</p> </li> <li> <p>Arduino</p> <ol> <li>From the menu, click on File</li> <li>Click on Open...</li> <li>Select the ~/SparkFun/RTK/Firmware/RTK_Surveyor/RTK_Surveyor.ino file</li> <li>Click on the Open button</li> </ol> <p>Select the ESP32 development module</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Board</li> <li>Click on Board Manager\u2026</li> <li>Click on esp32</li> <li>Select version 2.0.2</li> <li>Click on the Install button in the lower right</li> <li>Close the Board Manager...</li> <li>From the menu, click on Tools</li> <li>Click on Board</li> <li>Click on ESP32 Arduino</li> <li>Click on ESP32 Dev Module</li> </ol> <p>Load the required libraries</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Manage Libraries\u2026</li> <li> <p>For each of the following libraries:</p> <ol> <li>Locate the library</li> <li>Click on the library</li> <li>Select the version listed in the compile-rtk-firmware.yml file for the main or the release_candidate branch</li> <li>Click on the Install button in the lower right</li> </ol> <p>Library List:</p> <ul> <li>ArduinoJson</li> <li>ESP32Time</li> <li>ESP32-OTA-Pull</li> <li>ESP32_BleSerial</li> <li>Ethernet</li> <li>JC_Button</li> <li>MAX17048 - Used for \u201cTest Sketch/Batt_Monitor\u201d</li> <li>PubSubClient</li> <li>SdFat</li> <li>SparkFun LIS2DH12 Arduino Library</li> <li>SparkFun MAX1704x Fuel Gauge Arduino Library</li> <li>SparkFun Qwiic OLED Graphics Library</li> <li>SparkFun u-blox GNSS v3</li> <li>SparkFun_WebServer_ESP32_W5500</li> </ul> </li> <li> <p>Click on the Close button</p> </li> </ol> <p>Select the terminal port</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Port, Select the port that was displayed in step 38 above</li> <li>Select /dev/ttyUSB0</li> <li>Click on Upload Speed</li> <li>Select 230400</li> </ol> <p>Setup the partitions for the 16 MB flash</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Flash Size</li> <li>Select 16MB</li> <li>From the menu, click on Tools</li> <li>Click on Partition Scheme</li> <li>Click on 16M Flash (3MB APP/9MB FATFS)</li> <li>From the menu click on File</li> <li>Click on Quit</li> </ol> </li> <li> <p>cd ~/SparkFun/RTK/</p> </li> <li>cp  Firmware/app3M_fat9M_16MB.csv  ~/.arduino15/packages/esp32/hardware/esp32/2.0.2/tools/partitions/app3M_fat9M_16MB.csv</li> </ol>"},{"location":"firmware_update/#arduino-cli","title":"Arduino CLI","text":"<p>The firmware can be compiled using Arduino CLI. This makes compilation fairly platform independent and flexible. All release candidates and firmware releases are compiled using Arduino CLI using a github action. You can see the source of the action here, and use it as a starting point for Arduino CLI compilation.</p> <p>This is the same method the Dockerfile uses - using arduino-cli on a virtual ubuntu machine.</p>"},{"location":"gis_software/","title":"GIS Software","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>While we recommend SW Maps for Android, there are a variety of 3rd party apps available for GIS and surveying. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data over Bluetooth into the software of your choice.</p>"},{"location":"gis_software/#sw-maps","title":"SW Maps","text":"<p>The best mobile app that we\u2019ve found is the powerful, free, and easy-to-use SW Maps by Softwel. It is compatible with Android and iOS, either phone or tablet with Bluetooth. What makes SW Maps truly powerful is its built-in NTRIP client. This is a fancy way of saying that we\u2019ll be showing you how to get RTCM correction data over the cellular network. </p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>List of available Bluetooth devices</p> <p>From SW Map's main menu, select Bluetooth GNSS. This will display a list of available Bluetooth devices. Select the Rover or Base you just paired with. If you are taking height measurements (altitude) in addition to position (lat/long) be sure to enter the height of your antenna off the ground including any ARP offsets of your antenna (this should be printed on the side).</p> <p>Click on 'CONNECT' to open a Bluetooth connection. Assuming this process takes a few seconds, you should immediately have a location fix.</p> <p></p> <p>SW Maps with RTK Fix</p> <p>You can open the GNSS Status sub-menu to view the current data.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. This is the amazing power of the SparkFun RTK products and SW Maps. Your phone can be the radio link! From the main SW Maps menu select NTRIP Client. Not there? Be sure the 'SparkFun RTK' instrument was automatically selected connecting. Disconnect and change the instrument to 'SparkFun RTK' to enable the NTRIP Connection option.</p> <p></p> <p>NTRIP Connection - Not there? Be sure to select 'SparkFun RTK' was selected as the instrument</p> <p></p> <p>Connecting to an NTRIP Caster</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>Once you have a full RTK fix you'll notice the location bubble in SW Maps turns green. Just for fun, rock your rover monopole back and forth on a fixed point. You'll see your location accurately reflected in SW Maps. Millimeter location precision is a truly staggering thing.</p>"},{"location":"gis_software/#field-genius","title":"Field Genius","text":"<p>Field Genius for Android is another good solution, albeit a lot more expensive than free. </p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>From the Main Menu open <code>Select Instrument</code>.</p> <p></p> <p>Click the 'Add Profile' button.</p> <p></p> <p>Click <code>GNSS Rover</code> and select NMEA as the Make. Set your Profile Name to something memorable like 'RTK-Express' then click the 'Create' button.</p> <p></p> <p>Click on 'SET UP COMMUNICATION'.</p> <p></p> <p>From the Bluetooth communication page, click the 'Search' button.</p> <p></p> <p>You will be shown a list of paired devices. Select the RTK device you'd like to connect to then click 'Connect'. The RTK device will connect and the MAC address shown on the RTK device OLED will change to the Bluetooth icon indicating a link is open.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p></p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. Your phone can be the radio link! Click on 'SET UP CORRECTIONS'.</p> <p></p> <p>Click on 'RTK via Internet' then 'SET UP INTERNET', then 'Done'.</p> <p></p> <p>Click on 'SET UP DATA SOURCE'.</p> <p></p> <p>Click 'Add New Source'.</p> <p></p> <p>Enter your NTRIP Caster credentials and click 'DONE'. </p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p></p> <p>Click 'My NTRIP1' then 'Done' and 'Connect'. </p> <p>You will then be presented with a list of Mount Points. Select the mount point you'd like to use then click 'Select' then 'Confirm'.</p> <p>Select 'Done' then from the main menu select 'Survey' to begin using the device.</p> <p></p> <p>Now you can begin using the SparkFun RTK device with Field Genius.</p>"},{"location":"gis_software/#survpc","title":"SurvPC","text":"<p>Note: The company behind SurvPC, Carlson Software, is not always welcoming to competitors of their $18,000 devices, so be warned.</p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>Equip Sub Menu</p> <p>Select the Equip sub menu then <code>GPS Rover</code></p> <p></p> <p>Select NMEA GPS Receiver</p> <p>From the drop down, select <code>NMEA GPS Receiver</code>.</p> <p></p> <p>Select Model: DGPS</p> <p>Select DGPS if you'd like to connect to an NTRIP Caster. If you are using the RTK Facet L-Band, or do not need RTK fix type precision, leave the model as Generic.</p> <p></p> <p>Bluetooth Settings Button</p> <p>From the <code>Comms</code> submenu, click the Blueooth settings button.</p> <p></p> <p>SurvPC Bluetooth Devices</p> <p>Click <code>Find Device</code>.</p> <p></p> <p>List of Paired Bluetooth Devices</p> <p>You will be shown a list of devices that have been paired. Select the RTK device you want to connect to.</p> <p></p> <p>Connect to Device</p> <p>Click the <code>Connect Bluetooth</code> button, shown in red in the top right corner. The software will begin a connection to the RTK device. You'll see the MAC address on the RTK device changes to the Bluetooth icon indicating it's connected. </p> <p>If SurvPC detects NMEA, it will report a successful connection.</p> <p></p> <p>Receiver Submenu</p> <p>You are welcome to enter the ARP (antenna reference point) and surveying stick length for your particular setup.</p> <p>NTRIP Client</p> <p>Note: If you are using a radio to connect Base to Rover, or if you are using the RTK Facet L-Band you do not need to set up NTRIP; the device will achieve RTK fixes and output extremely accurate location data by itself. But if L-Band corrections are not available, or you are not using a radio link, the NTRIP Client can provide corrections to this Rover.</p> <p></p> <p>RTK Submenu</p> <p>If you selected 'DGPS' as the Model type, the RTK submenu will be shown. This is where you give the details about your NTRIP Caster such as your mount point, user name/pw, etc. For more information about creating your own NTRIP mount point please see Creating a Permanent Base</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK Express. Within a few seconds, the RTK Express will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p>Once everything is connected up, click the Green check in the top right corner.</p> <p></p> <p>Storing Points</p> <p>Now that we have a connection, you can use the device, as usual, storing points and calculating distances.</p> <p></p> <p>SurvPC Skyplot</p> <p>Opening the Skyplot will allow you to see your GNSS details in real-time.</p> <p>If you are a big fan of SurvPC please contact your sales rep and ask them to include SparkFun products in their Manufacturer drop-down list.</p>"},{"location":"gis_software/#survey-master","title":"Survey Master","text":"<p>Survey Master by ComNam / SinoGNSS is an Android-based option. The download location can vary so google 'Survey Master ComNav Download' if the link above fails. Download the zip file, send the APK file to a phone and install the program.</p> <p></p> <p>By default, a wizard will guide you through the setup. The Project step will ask you for the name of the project, the datum, etc. </p> <p></p> <p>Next select your connection. </p> <p></p> <p>For the Device Model select 'NMEA Device'. </p> <p></p> <p>If you are just getting started, use one of the default antenna types. If you are attempting to get sub-centimeter accuracy, enter the parameters of your antenna and add it. Above are the NGS-certified parameters for the TOP106 antenna.</p> <p></p> <p>Click the 'Target Device' option to get a list of available Bluetooth devices. Make sure your RTK product is on and you should see the device. In this example 'Express Rover-B022' was chosen.</p> <p>To finish, click 'Connect'. You should see the Bluetooth MAC address on your RTK product change to the Bluetooth icon indicating a connection is established.</p> <p></p> <p>Next is configuring the 'Work mode' of the device. The step is where we set up our NTRIP correction source.</p> <p></p> <p>Click 'Add' to create a new work mode.</p> <p></p> <p>Shown above, we configure the NTRIP Client. Survey Master calls this the 'SinoGNSS' Protocol. Click on the three bars to the right of 'Server' to enter a new NTRIP connection.</p> <p></p> <p>Here you can add different NTRIP Caster providers. If you're using RTK2Go be sure to enter your contact email into the user name.</p> <p></p> <p>Return to the 'Datalink type' window and select the Server you just entered. Re-enter the server address and port for your NTRIP Caster. Once complete, click on the down-pointing arrow. This will ping the Caster and obtain the mount point table. Select your mount point.</p> <p></p> <p>Select the newly created work mode and press the 'Apply' button.</p> <p></p> <p>Survey Master will attempt to connect to your specified RTK corrections source (NTRIP Caster). Upon success, you will be located on the Project menu.</p> <p>Survey Master expects many more NMEA sentences than most GIS software. We must enable some additional messages on the RTK device to correctly communicate with Survey Master. </p> <p></p> <p>Note above: There are 9 enabled messages and GSV is set to '1'.</p> <p>Connect to the RTK device either over WiFi AP config or via Serial. Above is shown the serial method.</p> <p>Open a terminal at 115200bps and press a key to open the serial configuration menu. Press '2' for GNSS Messages, press '1' for NMEA messages, now be sure to enable 9 messages to a rate of 1:</p> <ul> <li>GGA</li> <li>GLL</li> <li>GRS</li> <li>GSA</li> <li>GST</li> <li>GSV</li> <li>RMC</li> <li>VTG</li> <li>ZDA</li> </ul> <p>Once complete, press x until you exit the serial menus. Now we may return to Survey Master.</p> <p></p> <p>Click on the 'Survey' menu and then 'Topo Survey'. Above we can see a device with RTK float, and 117mm horizontal positional accuracy.</p> <p>Known Issues:</p> <ul> <li>Survey Master parses the GxGSV sentence improperly and will only indicate GPS satellites even though the fix solution is using all satellites.</li> </ul> <p></p> <p>To verify the NMEA sentences are being delivered correctly, Survey Master has a built-in tool. Select the Device-&gt;Rover-&gt;More-&gt;'H-Terminal'. </p>"},{"location":"gis_software/#vespucci","title":"Vespucci","text":"<p>Vespucci is an Open Street Map editor for Android.</p> <p>This software requires the RTK device to connect over TCP. Be sure you have a local WiFi network entered into the WiFi Config menu, have a TCP Client or Server enabled, and have noted the TCP port (it's 2948 by default).</p> <p></p> <p>With a map open, select the gear icon on the bottom bar.</p> <p></p> <p>From the Preferences menu, scroll to the bottom and select 'Advanced Preferences'.</p> <p></p> <p>Select Location settings.</p> <p></p> <p>Select GPS/GNSS source. Select NMEA from TCP client. TCP server is also supported.</p> <p></p> <p>Select NMEA network source. Enter the IP address and TCP port of the RTK device. The IP address can be found by opening a serial terminal while connected to WiFi (it is reported every few seconds). The TCP port is entered into the WiFi Config menu.</p> <p></p> <p>Close all menus and you should see your location within Vespucci.</p>"},{"location":"gis_software/#qgis","title":"QGIS","text":"<p>QGIS is a free and open-source geographic information system software for desktops. It's available here.</p> <p>Once the software is installed open QGIS Desktop.</p> <p></p> <p>Open the View Menu, then look for the 'Panels' submenu.</p> <p></p> <p>From the Panels submenu, enable 'GPS Information'. This will show a new panel on the left side.</p> <p>At this point, you will need to enable TCP Server mode on your RTK device from the WiFi Config menu. Once the RTK device is connected to local WiFi QGIS will be able to connect to the given IP address and TCP port.</p> <p></p> <p>Above: From the subpanel, select 'gpsd'.</p> <p></p> <p>Enter the IP address of your RTK device. This can be found by opening a serial connection to the device. The IP address will be displayed every few seconds. Enter the TCP port to use. By default an RTK device uses 2948.</p> <p>Press 'Connect'. </p> <p></p> <p>The device location will be shown on the map. To see a map, be sure to enable OpenStreetMap under the XYZ Tiles on the Browser.</p> <p></p> <p>Alternatively, a direct serial connection to the RTK device can be obtained. Use a USB cable to connect to the 'CONFIG UBLOX' port on RTK Surveyor/Express/Plus and the single USB C port on the RTK Facet/L-Band. Be sure you have the u-blox driver installed. Then select the appropriate COM port for the u-blox module. See Configure with Serial for more information.</p>"},{"location":"gis_software/#qfield","title":"QField","text":"<p>QField is a free GIS the Android app that runs QGIS.</p> <p></p> <p>The 'Reset to Surveying Defaults' button</p> <p>First, configure the RTK device to output only NMEA messages. QField currently does not correctly parse other messages such as RAWX or RTCM so these will interfere with communication if they are enabled.</p> <p>These RTK device settings can be found under the Messages menu through the WiFi config page or through the Serial Config menu.</p> <p></p> <p>Create an account and project on QFieldCloud. This project will be synchronized and viewable on the QField app.</p> <p></p> <p>Refresh Projects button</p> <p>Once the project is created, press the Refresh projects list button to update the list. Then select your project.</p> <p></p> <p>'Hamburger' menu in upper right corner</p> <p>Press the icon in the top left corner of the app to open the project settings.</p> <p></p> <p>Project settings</p> <p>From the project settings menu, press the gear icon to open the device settings dropdown menu.</p> <p></p> <p>Project settings submenu</p> <p>From the submenu, select 'Settings'.</p> <p></p> <p>Positioning Menu</p> <p>Select the Positioning Menu. Then, with your RTK device on and in normal mode (not AP Config) press the Scan button in the QField app to update the dropdown list of available Bluetooth devices. If your device is not detected, be sure you've paired your cellphone or laptop with Bluetooth.</p> <p>Once connected exit out of the menus and see position information within your project.</p>"},{"location":"gis_software/#apple-ios","title":"Apple iOS","text":"<p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK devices support Bluetooth Low Energy (BLE) which does work with iOS.</p> <p>We recommend SWMaps for iOS. SWMaps is available for iOS here.  </p> <p>More information is available on the System Menu for switching between Bluetooth SPP and BLE.</p> <p>To begin:</p> <p>Make sure your RTK device is switched on, in Rover mode and operating in Bluetooth BLE mode.</p> <p>Make sure Bluetooth is enabled on your iOS device Settings.</p> <p>The RTK device will not appear in the OTHER DEVICES list. That is OK.</p> <p></p> <p>iOS Settings Bluetooth</p> <p>Open SWMaps.</p> <p>Open or continue a Project if desired.</p> <p>SWMaps will show your approximate location based on your iOS device's location.</p> <p></p> <p>iOS SWMaps Initial Location</p> <p>Press the 'SWMaps' icon at the top left of the screen to open the menu.</p> <p></p> <p>iOS SWMaps Menu</p> <p>Select Bluetooth GNSS.</p> <p></p> <p>iOS SWMaps Bluetooth Connection</p> <p>Set the Instrument Model to Generic NMEA (Bluetooth LE).</p> <p></p> <p>iOS SWMaps Instrument Model</p> <p>Press 'Scan' and your RTK device should appear.</p> <p></p> <p>iOS SWMaps Bluetooth Scan</p> <p>Select (tick) the RTK device and press 'Connect'.</p> <p></p> <p>iOS SWMaps Bluetooth Connected</p> <p>Close the menu and your RTK location will be displayed on the map.</p> <p>You can now use the other features of SWMaps, including the built-in NTRIP Client.</p> <p>Re-open the menu and select 'NTRIP Client'.</p> <p>Enter the details for your NTRIP Caster - as shown in the SWMaps section above.</p> <p></p> <p>iOS SWMaps NTRIP Client</p> <p>Click 'Connect'</p> <p>At this point, you should see a Bluetooth Pairing Request. Select 'Pair' to pair your RTK with your iOS device.</p> <p></p> <p>iOS Bluetooth Pairing</p> <p>SWMaps will now receive NTRIP correction data from the caster and push it to your RTK over Bluetooth BLE.</p> <p>From the SWMaps menu, open 'GNSS Status' to see your position, fix type and accuracy.</p> <p></p> <p>iOS SWMaps GNSS Status</p> <p>If you return to the iOS Bluetooth Settings, you will see that your iOS and RTK devices are now paired.</p> <p></p> <p>iOS Settings Bluetooth - Paired</p>"},{"location":"gis_software/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK Express. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK Express.</p>"},{"location":"gis_software/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources. </p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. </p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station. </p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"gis_software_android/","title":"Android","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>While we recommend SW Maps for Android, there are a variety of 3rd party apps available for GIS and surveying for Android, iOS, and Windows. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p>"},{"location":"gis_software_android/#arcgis-field-maps","title":"ArcGIS Field Maps","text":"<p>ArcGIS Field Maps by Esri is a popular GIS app. Unfortunately it does not have a built in NTRIP Client to allow high precision corrections down to the RTK device. To enable high-precision, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open Field Maps.</p> <p></p> <p>Select World Imagery.</p> <p></p> <p>ArcGIS Field Maps with 12mm accuracy</p> <p>Field Maps will use the device's internal location as its default location provider. With GNSS Master or Lefebure providing the mock location to the phone, Field Maps will have a super precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#arcgis-quickcapture","title":"ArcGIS QuickCapture","text":"<p>ArcGIS QuickCapture by Esri is a popular GIS app. Unfortunately it does not allow Bluetooth connections to 3rd party RTK devices. To enable a connection to a SparkFun RTK device, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open QuickCapture.</p> <p></p> <p>For the purposes of this demonstration, click Continue without signing in.</p> <p></p> <p>Select the + then Browse Projects.</p> <p></p> <p>Select a project.</p> <p></p> <p>From the BioBlitz project screen we can see we have a GPS accuracy of less than 1 ft. The RTK device has RTK fix and is providing extremely accurate (better than 20mm or 1\") positional data.</p> <p>Click the map icon in the upper right.</p> <p></p> <p>The location of the receiver is shown on a map. With GNSS Master or Lefebure providing the mock location to the phone, QuickCapture will have a very precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#arcgis-survey123","title":"ArcGIS Survey123","text":"<p>ArcGIS Survey123 by Esri is a popular GIS app. Unfortunately it does not allow Bluetooth connections to 3rd party RTK devices. To enable a connection to a SparkFun RTK device, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open Survey123.</p> <p></p> <p>For the purposes of this demonstration, click Continue without signing in.</p> <p></p> <p>Select the satellite icon in the upper right corner.</p> <p></p> <p>If the mock location provider app is running, you should see the Lat/Lon/Alt from the RTK device. In the above image, RTK Fix is achieved with 0.033ft (10mm) accuracy. Click on the map icon.</p> <p></p> <p>The location of the receiver is shown on a map. With GNSS Master or Lefebure providing the mock location to the phone, Survey123 will have a very precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#diamond-maps","title":"Diamond Maps","text":"<p>Diamond Maps is a great solution for utilities and municipalities. $20/month GIS software with many great features. Get the Android app here.</p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>From the Home Screen, click on the 'hamburger' settings button in the top left corner.</p> <p></p> <p>Select GPS Status.</p> <p></p> <p>Click on the Select a GPS Source box and select the RTK device that was previously paired with.</p> <p></p> <p>Once a receiver is selected, its status will be shown in the GPS Setup window. Additionally, an NTRIP Client is available for corrections.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p></p> <p>From this window, an NTRIP Client can be configured. Enter your NTRIP Caster information then click on START. Click Close to exit out to the main window.</p> <p></p> <p>0.03ft accuracy shown in green</p> <p>Closing the GPS Source window will show the map as well as the relative accuracy in feet. </p>"},{"location":"gis_software_android/#field-genius","title":"Field Genius","text":"<p>Field Genius for Android is another good solution, albeit a lot more expensive than free. </p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>From the Main Menu open <code>Select Instrument</code>.</p> <p></p> <p>Click the 'Add Profile' button.</p> <p></p> <p>Click <code>GNSS Rover</code> and select NMEA as the Make. Set your Profile Name to something memorable like 'RTK-Express' then click the 'Create' button.</p> <p></p> <p>Click on 'SET UP COMMUNICATION'.</p> <p></p> <p>From the Bluetooth communication page, click the 'Search' button.</p> <p></p> <p>You will be shown a list of paired devices. Select the RTK device you'd like to connect to then click 'Connect'. The RTK device will connect and the MAC address shown on the RTK device OLED will change to the Bluetooth icon indicating a link is open.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p></p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. Your phone can be the radio link! Click on 'SET UP CORRECTIONS'.</p> <p></p> <p>Click on 'RTK via Internet' then 'SET UP INTERNET', then 'Done'.</p> <p></p> <p>Click on 'SET UP DATA SOURCE'.</p> <p></p> <p>Click 'Add New Source'.</p> <p></p> <p>Enter your NTRIP Caster credentials and click 'DONE'. </p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station. If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p></p> <p>Click 'My NTRIP1' then 'Done' and 'Connect'. </p> <p>You will then be presented with a list of Mount Points. Select the mount point you'd like to use then click 'Select' then 'Confirm'.</p> <p>Select 'Done' then from the main menu select 'Survey' to begin using the device.</p> <p></p> <p>Now you can begin using the SparkFun RTK device with Field Genius.</p>"},{"location":"gis_software_android/#gnss-master","title":"GNSS Master","text":"<p>GNSS Master is a great utility when a given GIS app does not have an NTRIP Client or a way to connect over Bluetooth. GNSS Master connects to a RTK device over Bluetooth (or Bluetooth BLE) as well as any correction source (NTRIP, PointPerfect, even USB Serial), and then acts as the phone's location using Mock Location.</p> <p>Note: Most GIS apps will not need GNSS Master or Mock Location enabled and this section can be skipped.</p> <p>Read how to Enable Mock Location.</p> <p></p> <p>From the GNSS Master main screen, select GNSS Receiver Connection.</p> <p></p> <p>Pick the RTK device to connect to from the list, then click Connect. The Data Rate should increase indicating data flowing from the RTK device to the GNSS Master app. Click the back button to return to the main screen.</p> <p></p> <p>Select Correction Input to setup an NTRIP Client.</p> <p></p> <p>This is one of the powerful features of GNSS Master - multiple connections can be entered. This is helpful if you regularly switch between locations or NTRIP Casters and your GIS software only allows entry of a single NTRIP source. GNSS Master supports corrections from NTRIP Casters but also PointPerfect and a direct serial connection to a GNSS receiver. This can be really helpful in advanced setups.</p> <p></p> <p>Enter your NTRIP Client information then click SAVE.</p> <p></p> <p>Once connected the Data Rate should increase above 0 bytes per second.  Return to the home screen by hitting the back button.</p> <p></p> <p>Enable mock location. If GNSS Master throws an error, re-enable GNSS Master as your Mock Location provider in Developer Options.</p> <p>Once enabled, any GIS app that selects 'Internal' or 'Phone Location' as its source will instead be fed the high precision NMEA being generated by the RTK device connected over Bluetooth.</p>"},{"location":"gis_software_android/#lefebure","title":"Lefebure","text":"<p>Lefebure NTRIP Client is the original app for getting correction from an NTRIP caster and down over Bluetooth. It's an oldie but a goodie.</p> <p>Note: Most GIS apps will not need Lefebure or Mock Location enabled and this section can be skipped.</p> <p>The problem is that if Lefebure is connected to the RTK device providing RTCM corrections over Bluetooth, then other GIS applications cannot use the same Bluetooth connection at the same time. That's where mock locations save the day. Lefebure can be setup to take over or 'mock' the GPS location being reported by the phone. Nearly all GIS apps can use the phone's GPS location. So if the phone's location is magically super precise, then Lefebure can be the NTRIP Client and data provide, and your GIS app is none the wiser, and uses the phone's location.</p> <p>Read how to Enable Mock Location.</p> <p></p> <p>Once mock locations are enabled, click on the Settings gear in the top left corner.</p> <p></p> <p>If needed, an NTRIP Client can be setup to provide corrections over Bluetooth to the RTK device.</p> <p></p> <p>Enter the Caster information and hit the back button.</p> <p></p> <p>Select Receiver Settings.</p> <p></p> <p>Select the RTK device that has been paired over Bluetooth. Also enable Mock Locations. Hit the back button to return to the main screen.</p> <p></p> <p>Press the Connect button. The app will connect to the NTRIP Caster. Now, any GIS app that selects 'Internal' or 'Phone Location' as its source will instead be fed the high precision NMEA being generated by the RTK device connected over Bluetooth.</p>"},{"location":"gis_software_android/#qfield","title":"QField","text":"<p>QField is a free GIS Android app that runs QGIS.</p> <p></p> <p>The 'Reset to Surveying Defaults' button</p> <p>First, configure the RTK device to output only NMEA messages. QField currently does not correctly parse other messages such as RAWX or RTCM so these will interfere with communication if they are enabled.</p> <p>These RTK device settings can be found under the Messages menu through the WiFi config page or through the Serial Config menu.</p> <p></p> <p>Create an account and project on QFieldCloud. This project will be synchronized and viewable on the QField app.</p> <p></p> <p>Refresh Projects button</p> <p>Once the project is created, press the Refresh projects list button to update the list. Then select your project.</p> <p></p> <p>'Hamburger' menu in upper right corner</p> <p>Press the icon in the top left corner of the app to open the project settings.</p> <p></p> <p>Project settings</p> <p>From the project settings menu, press the gear icon to open the device settings dropdown menu.</p> <p></p> <p>Project settings submenu</p> <p>From the submenu, select 'Settings'.</p> <p></p> <p>Positioning Menu</p> <p>Select the Positioning Menu. Then, with your RTK device on and in normal mode (not AP Config) press the Scan button in the QField app to update the dropdown list of available Bluetooth devices. If your device is not detected, be sure you've paired your cellphone or laptop with Bluetooth.</p> <p>Once connected exit out of the menus and see position information within your project.</p>"},{"location":"gis_software_android/#survey-master","title":"Survey Master","text":"<p>Survey Master by ComNam / SinoGNSS is an Android-based option. The download location can vary so google 'Survey Master ComNav Download' if the link above fails. Download the zip file, send the APK file to a phone and install the program.</p> <p></p> <p>By default, a wizard will guide you through the setup. The Project step will ask you for the name of the project, the datum, etc. </p> <p></p> <p>Next select your connection. </p> <p></p> <p>For the Device Model select 'NMEA Device'. </p> <p></p> <p>If you are just getting started, use one of the default antenna types. If you are attempting to get sub-centimeter accuracy, enter the parameters of your antenna and add it. Above are the NGS-certified parameters for the TOP106 antenna.</p> <p></p> <p>Click the 'Target Device' option to get a list of available Bluetooth devices. Make sure your RTK product is on and you should see the device. In this example 'Express Rover-B022' was chosen.</p> <p>To finish, click 'Connect'. You should see the Bluetooth MAC address on your RTK product change to the Bluetooth icon indicating a connection is established.</p> <p></p> <p>Next is configuring the 'Work mode' of the device. The step is where we set up our NTRIP correction source.</p> <p></p> <p>Click 'Add' to create a new work mode.</p> <p></p> <p>Shown above, we configure the NTRIP Client. Survey Master calls this the 'SinoGNSS' Protocol. Click on the three bars to the right of 'Server' to enter a new NTRIP connection.</p> <p></p> <p>Here you can add different NTRIP Caster providers. If you're using RTK2Go be sure to enter your contact email into the user name.</p> <p></p> <p>Return to the 'Datalink type' window and select the Server you just entered. Re-enter the server address and port for your NTRIP Caster. Once complete, click on the down-pointing arrow. This will ping the Caster and obtain the mount point table. Select your mount point.</p> <p></p> <p>Select the newly created work mode and press the 'Apply' button.</p> <p></p> <p>Survey Master will attempt to connect to your specified RTK corrections source (NTRIP Caster). Upon success, you will be located on the Project menu.</p> <p>Survey Master expects many more NMEA sentences than most GIS software. We must enable some additional messages on the RTK device to correctly communicate with Survey Master. </p> <p></p> <p>Note above: There are 9 enabled messages and GSV is set to '1'.</p> <p>Connect to the RTK device either over WiFi AP config or via Serial. Above is shown the serial method.</p> <p>Open a terminal at 115200bps and press a key to open the serial configuration menu. Press '2' for GNSS Messages, press '1' for NMEA messages, now be sure to enable 9 messages to a rate of 1:</p> <ul> <li>GGA</li> <li>GLL</li> <li>GRS</li> <li>GSA</li> <li>GST</li> <li>GSV</li> <li>RMC</li> <li>VTG</li> <li>ZDA</li> </ul> <p>Once complete, press x until you exit the serial menus. Now we may return to Survey Master.</p> <p></p> <p>Click on the 'Survey' menu and then 'Topo Survey'. Above we can see a device with RTK float, and 117mm horizontal positional accuracy.</p> <p>Known Issues:</p> <ul> <li>Survey Master parses the GxGSV sentence improperly and will only indicate GPS satellites even though the fix solution is using all satellites.</li> </ul> <p></p> <p>To verify the NMEA sentences are being delivered correctly, Survey Master has a built-in tool. Select the Device-&gt;Rover-&gt;More-&gt;'H-Terminal'. </p>"},{"location":"gis_software_android/#surpad","title":"SurPad","text":"<p>SurPad is an Android app available as a free trial for 30-days. It's loaded as an APK (rather than through Google Play).</p> <p>Be sure your RTK device has been paired over Bluetooth to your phone.</p> <p></p> <p>SurPad Home Screen</p> <p>Create a project and get to the home screen. Shown above, click on the GNSS receiver icon.</p> <p></p> <p>SurPad connecting over Bluetooth</p> <p>Set the Device manufacturer to Other, Device type to RTK(NMEA0183), and Communication Mode to Bluetooth. Select the SparkFun RTK device that you would like to connect to on the Paired Devices list and then click Connect.</p> <p>Once connected to the device a Debug button will appear. This is one of the nice features of SurPad: Running debug will allow you to inspect the NMEA coming across the link.</p> <p>Once done, press the back arrow (top left corner) to return to the home screen. </p> <p></p> <p>SurPad Point Survey map</p> <p>Above: From the home screen press the Survey button at the bottom, then Point Survey to bring up the map.</p> <p>In the top left corner, press the green hamburger + cell phone icon. This will open the NTRIP settings.</p> <p></p> <p>SurPad Data Link NTRIP Configuration</p> <p>Change the Connect Mode from TCP Client to NTRIP. If you are unable to edit or change the Connect Mode from TCP Client be sure the TCP Client is stopped by pressing the Stop button in the lower left corner (located in the same spot as the highlighted Start).</p> <p></p> <p>SurPad NTRIP Connection</p> <p>Enter the information for your NTRIP caster. In the above example, we are connected to the SparkFun base station on RTK2Go. For RTK2Go you will need to enter a valid email address for a user name but a password is not required.</p> <p>Click on Start and you should see the 'Receive data' progress bar (highlighted above) increase each second indicating a connection. Once complete, press 'Apply' to return to the map.</p> <p></p> <p>SurPad with RTK Fix</p> <p>Above: After a few moments, the RTK device should move to RTK Float, then RTK Fix. You can see the age of the RTCM data in the upper bar, along with the horizontal (23mm) and vertical (31mm) accuracy estimates. Now you can begin taking points.</p>"},{"location":"gis_software_android/#survpc","title":"SurvPC","text":"<p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>Equip Sub Menu</p> <p>Select the Equip sub menu then <code>GPS Rover</code></p> <p></p> <p>Select NMEA GPS Receiver</p> <p>From the drop down, select <code>NMEA GPS Receiver</code>.</p> <p></p> <p>Select Model: DGPS</p> <p>Select DGPS if you'd like to connect to an NTRIP Caster. If you are using the RTK Facet L-Band, or do not need RTK fix type precision, leave the model as Generic.</p> <p></p> <p>Bluetooth Settings Button</p> <p>From the <code>Comms</code> submenu, click the Blueooth settings button.</p> <p></p> <p>SurvPC Bluetooth Devices</p> <p>Click <code>Find Device</code>.</p> <p></p> <p>List of Paired Bluetooth Devices</p> <p>You will be shown a list of devices that have been paired. Select the RTK device you want to connect to.</p> <p></p> <p>Connect to Device</p> <p>Click the <code>Connect Bluetooth</code> button, shown in red in the top right corner. The software will begin a connection to the RTK device. You'll see the MAC address on the RTK device changes to the Bluetooth icon indicating it's connected. </p> <p>If SurvPC detects NMEA, it will report a successful connection.</p> <p></p> <p>Receiver Submenu</p> <p>You are welcome to enter the ARP (antenna reference point) and surveying stick length for your particular setup.</p> <p>NTRIP Client</p> <p>Note: If you are using a radio to connect Base to Rover, or if you are using the RTK Facet L-Band you do not need to set up NTRIP; the device will achieve RTK fixes and output extremely accurate location data by itself. But if L-Band corrections are not available, or you are not using a radio link, the NTRIP Client can provide corrections to this Rover.</p> <p></p> <p>RTK Submenu</p> <p>If you selected 'DGPS' as the Model type, the RTK submenu will be shown. This is where you give the details about your NTRIP Caster such as your mount point, user name/pw, etc. For more information about creating your own NTRIP mount point please see Creating a Permanent Base</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK device. Within a few seconds, the RTK device will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p>Once everything is connected up, click the Green check in the top right corner.</p> <p></p> <p>Storing Points</p> <p>Now that we have a connection, you can use the device, as usual, storing points and calculating distances.</p> <p></p> <p>SurvPC Skyplot</p> <p>Opening the Skyplot will allow you to see your GNSS details in real-time.</p> <p>If you are a big fan of SurvPC please contact your sales rep and ask them to include SparkFun products in their Manufacturer drop-down list.</p>"},{"location":"gis_software_android/#sw-maps","title":"SW Maps","text":"<p>The best mobile app that we\u2019ve found is the powerful, free, and easy-to-use SW Maps by Softwel. It is compatible with Android and iOS, either phone or tablet with Bluetooth. What makes SW Maps truly powerful is its built-in NTRIP client. This is a fancy way of saying that we\u2019ll be showing you how to get RTCM correction data over the cellular network. </p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>List of available Bluetooth devices</p> <p>From SW Map's main menu, select Bluetooth GNSS. This will display a list of available Bluetooth devices. Select the Rover or Base you just paired with. If you are taking height measurements (altitude) in addition to position (lat/long) be sure to enter the height of your antenna off the ground including any ARP offsets of your antenna (this should be printed on the side).</p> <p>Click on 'CONNECT' to open a Bluetooth connection. Assuming this process takes a few seconds, you should immediately have a location fix.</p> <p></p> <p>SW Maps with RTK Fix</p> <p>You can open the GNSS Status sub-menu to view the current data.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. This is the amazing power of the SparkFun RTK products and SW Maps. Your phone can be the radio link! From the main SW Maps menu select NTRIP Client. Not there? Be sure the 'SparkFun RTK' instrument was automatically selected connecting. Disconnect and change the instrument to 'SparkFun RTK' to enable the NTRIP Connection option.</p> <p></p> <p>NTRIP Connection - Not there? Be sure to select 'SparkFun RTK' was selected as the instrument</p> <p></p> <p>Connecting to an NTRIP Caster</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK device. Within a few seconds, the RTK device will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>Once you have a full RTK fix you'll notice the location bubble in SW Maps turns green. Just for fun, rock your rover monopole back and forth on a fixed point. You'll see your location accurately reflected in SW Maps. Millimeter location precision is a truly staggering thing.</p>"},{"location":"gis_software_android/#vespucci","title":"Vespucci","text":"<p>Vespucci is an Open Street Map editor for Android.</p> <p>This software requires the RTK device to connect over TCP. Be sure you have a local WiFi network entered into the WiFi Config menu, have a TCP Client or Server enabled, and have noted the TCP port (it's 2948 by default).</p> <p></p> <p>With a map open, select the gear icon on the bottom bar.</p> <p></p> <p>From the Preferences menu, scroll to the bottom and select 'Advanced Preferences'.</p> <p></p> <p>Select Location settings.</p> <p></p> <p>Select GPS/GNSS source. Select NMEA from TCP client. TCP server is also supported.</p> <p></p> <p>Select NMEA network source. Enter the IP address and TCP port of the RTK device. The IP address can be found by opening a serial terminal while connected to WiFi (it is reported every few seconds). The TCP port is entered into the WiFi Config menu.</p> <p></p> <p>Close all menus and you should see your location within Vespucci.</p>"},{"location":"gis_software_android/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_android/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_android/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources. </p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. </p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station. </p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"gis_software_ios/","title":"iOS","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>There are a variety of 3rd party apps available for GIS and surveying for Android, iOS, and Windows. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p> <p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support additional connection options including TCP and Bluetooth Low Energy (BLE).</p>"},{"location":"gis_software_ios/#arcgis-field-maps","title":"ArcGIS Field Maps","text":"<p>For reasons unknown, Esri removed TCP support from Field Maps for iOS and is therefore not usable by SparkFun RTK devices at this time. </p> <p>If you must use iOS, checkout SW Maps, ArcGIS QuickCapture, or ArcGIS Survey123. </p> <p>Field Maps for Android is supported.</p>"},{"location":"gis_software_ios/#arcgis-quickcapture","title":"ArcGIS QuickCapture","text":"<p>ArcGIS QuickCapture is a popular offering from Esri that works well with SparkFun RTK products.</p> <p>ArcGIS QuickCapture connects to the RTK device over TCP. In other words, the RTK device needs to be connected to the same WiFi network as the device running QuickCapture. Generally, this is an iPhone or iPad operating as a hotspot.</p> <p>Note: The iOS hotspot defaults to 5.5GHz. This must be changed to 2.4GHz. Please see Hotspot Settings.</p> <p></p> <p></p> <p>The RTK device must use WiFi to connect to the iPhone or iPad. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p></p> <p>Next, the RTK device must be configured as a PVT Server. The default port of 2948 works well. See TCP/UDP Menu for more information.</p> <p></p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into QuickCapture. You can now proceed to the QuickCapture app to set up the software connection.</p> <p></p> <p>From the main screen, press the hamburger icon in the top left corner. </p> <p></p> <p>Press the Settings button.</p> <p></p> <p>Select the Location Provider option.</p> <p>Select Via Network.</p> <p></p> <p>Enter the IP address and port previously obtained from the RTK device and click ADD.</p> <p></p> <p>That provider should now be shown connected.</p> <p></p> <p>From the main screen, click on the plus in the lower left corner and then BROWSE PROJECTS.</p> <p></p> <p>For this example, add the BioBlitz project.</p> <p></p> <p>Above, we can see the GPS accuracy is better than 1ft. Click on the map icon in the top right corner.</p> <p></p> <p>From the map view, we can see our location with very high accuracy. We can now begin gathering point information with millimeter accuracy.</p>"},{"location":"gis_software_ios/#arcgis-survey123","title":"ArcGIS Survey123","text":"<p>ArcGIS Survey123 Home Screen</p> <p>ArcGIS Survey123 is a popular offering from Esri that works well with SparkFun RTK products.</p> <p>ArcGIS Survey123 connects to the RTK device over TCP. In other words, the RTK device needs to be connected to the same WiFi network as the device running ArcGIS. Generally, this is an iPhone or iPad.</p> <p></p> <p></p> <p>Adding WiFi network to settings</p> <p>The RTK device must use WiFi to connect to the data collector. Using a cellular hotspot or cellphone is recommended. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p></p> <p>TCP Server Enabled on port 2948</p> <p>Next, the RTK device must be configured as a TCP Server. The default port of 2948 works well. See TCP/UDP Menu for more information.</p> <p></p> <p>RTK device showing IP address</p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into ArcGIS Survey123. You can now proceed to the ArcGIS Survey123 app to set up the software connection.</p> <p></p> <p>ArcGIS Survey123 Home Screen</p> <p>From the home screen, click on the 'hamburger' icon in the upper right corner.</p> <p></p> <p>ArcGIS Survey123 Settings Menu</p> <p>From the settings menu, click on the Settings gear.</p> <p></p> <p>ArcGIS Survey123 Settings List</p> <p>From the settings list, click on Location.</p> <p></p> <p>ArcGIS Survey123 List of Location Providers</p> <p>Click on the Add location provider.</p> <p></p> <p>ArcGIS Survey123 Network Connection Type</p> <p>Select Network.</p> <p></p> <p>ArcGIS Survey123 TCP Connection Information</p> <p>Enter the IP address previously found along with the TCP port. Once complete, click Add.</p> <p></p> <p>ArcGIS Survey123 Sensor Settings</p> <p>You may enter various sensor-specific settings including antenna height, if desired. To view real-time sensor information, click on the satellite icon in the upper right corner.</p> <p></p> <p>ArcGIS Survey123 Sensor Data</p> <p>The SparkFun RTK device's data should now be seen. Click on the Map icon to return to the mapping interface.</p> <p></p> <p>ArcGIS Survey123 Map Interface</p> <p>Returning to the map view, we can now begin gathering point information with millimeter accuracy.</p>"},{"location":"gis_software_ios/#qfield","title":"QField","text":"<p>QField is a free iOS app that runs QGIS.</p> <p></p> <p>Modified NMEA messages on RTK Torch</p> <p>First, configure the RTK device to output only the following NMEA messages:</p> <ul> <li>GPGGA</li> <li>GPGSA</li> <li>GPGST</li> <li>GPGSV</li> </ul> <p>QField currently does not correctly parse other messages such as GPRMC, or RTCM. These messages will prevent communication if they are enabled.</p> <p>These NMEA message settings can be found under the Messages menu, using the web config page or the serial config interface.</p> <p></p> <p></p> <p>Adding WiFi network to settings</p> <p>Next, the RTK device must use WiFi to connect to the data collector. Using a cellular hotspot or cellphone is recommended. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p></p> <p>TCP Server Enabled on port 9000</p> <p>Next, the RTK device must be configured as a TCP Server. QField uses a default port of 9000 so that is what we recommend using. See TCP/UDP Menu for more information.</p> <p></p> <p>RTK device showing IP address</p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into QField. You can now proceed to the QField app to set up the software connection.</p> <p></p> <p>QField Opening Screen</p> <p>Click on QFieldCloud projects to open your project that was previously created on the QField Cloud or skip this step by using one of the default projects (Bee Farming, Wastewater, etc).</p> <p></p> <p>QField Main Map</p> <p>From the main map, click on the 'hamburger' icon in the upper left corner.</p> <p></p> <p>QField Settings Gear</p> <p>Click on the gear to open settings.</p> <p></p> <p>Click on the Settings menu.</p> <p></p> <p>QField Positioning Menu</p> <p>From the Positioning menu, click Add.</p> <p></p> <p>QField Entering TCP Information</p> <p>Select TCP as the connection type. Enter the IP address of the RTK device and the port number. Finally, hit the small check box in the upper left corner (shown in pink above) to close the window.</p> <p>Once this information is entered, QField will automatically attempt to connect to that IP and port.</p> <p></p> <p>QField TCP Connected</p> <p>Above, we see the port is successfully connected. Exit out of all menus.</p> <p></p> <p>QField Connected via TCP with RTK Fix</p> <p>Returning to the map view, we see an RTK Fix with 11mm positional accuracy.</p>"},{"location":"gis_software_ios/#sw-maps","title":"SW Maps","text":"<p>SWMaps is available for iOS here.  </p> <p>Make sure your RTK device is switched on and operating in Rover mode.</p> <p>Make sure Bluetooth is enabled on your iOS device Settings.</p> <p>The RTK device will not appear in the OTHER DEVICES list. That is OK.</p> <p></p> <p>iOS Settings Bluetooth</p> <p>Open SWMaps.</p> <p>Open or continue a Project if desired.</p> <p>SWMaps will show your approximate location based on your iOS device's location.</p> <p></p> <p>iOS SWMaps Initial Location</p> <p>Press the 'SWMaps' icon at the top left of the screen to open the menu.</p> <p></p> <p>iOS SWMaps Menu</p> <p>Select Bluetooth GNSS.</p> <p></p> <p>iOS SWMaps Bluetooth Connection</p> <p>Set the Instrument Model to Generic NMEA (Bluetooth LE).</p> <p></p> <p>iOS SWMaps Instrument Model</p> <p>Press 'Scan' and your RTK device should appear.</p> <p></p> <p>iOS SWMaps Bluetooth Scan</p> <p>Select (tick) the RTK device and press 'Connect'.</p> <p></p> <p>iOS SWMaps Bluetooth Connected</p> <p>Close the menu and your RTK location will be displayed on the map.</p> <p>You can now use the other features of SWMaps, including the built-in NTRIP Client.</p> <p>Re-open the menu and select 'NTRIP Client'.</p> <p>Enter the details for your NTRIP Caster - as shown in the SWMaps section above.</p> <p></p> <p>iOS SWMaps NTRIP Client</p> <p>Click 'Connect'</p> <p>At this point, you should see a Bluetooth Pairing Request. Select 'Pair' to pair your RTK with your iOS device.</p> <p></p> <p>iOS Bluetooth Pairing</p> <p>SWMaps will now receive NTRIP correction data from the caster and push it to your RTK over Bluetooth BLE.</p> <p>From the SWMaps menu, open 'GNSS Status' to see your position, fix type and accuracy.</p> <p></p> <p>iOS SWMaps GNSS Status</p> <p>If you return to the iOS Bluetooth Settings, you will see that your iOS and RTK devices are now paired.</p> <p></p> <p>iOS Settings Bluetooth - Paired</p>"},{"location":"gis_software_ios/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_ios/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_ios/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources. </p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. </p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station. </p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"gis_software_windows/","title":"Windows","text":"<p>Torch: </p> <p>There are a variety of 3rd party apps available for GIS and surveying. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p>"},{"location":"gis_software_windows/#qgis","title":"QGIS","text":"<p>QGIS is a free and open-source geographic information system software for desktops. It's available here.</p> <p>Once the software is installed open QGIS Desktop.</p> <p></p> <p>Open the View Menu, then look for the 'Panels' submenu.</p> <p></p> <p>From the Panels submenu, enable 'GPS Information'. This will show a new panel on the left side.</p> <p>At this point, you will need to enable TCP Server mode on your RTK device from the WiFi Config menu. Once the RTK device is connected to local WiFi QGIS will be able to connect to the given IP address and TCP port.</p> <p></p> <p>Above: From the subpanel, select 'gpsd'.</p> <p></p> <p>Enter the IP address of your RTK device. This can be found by opening a serial connection to the device. The IP address will be displayed every few seconds. Enter the TCP port to use. By default an RTK device uses 2948.</p> <p>Press 'Connect'. </p> <p></p> <p>The device location will be shown on the map. To see a map, be sure to enable OpenStreetMap under the XYZ Tiles on the Browser.</p> <p></p> <p>Alternatively, a direct serial connection to the RTK device can be obtained. Use a USB cable to connect to the 'CONFIG UBLOX' port on RTK Surveyor/Express/Plus and the single USB C port on the RTK Facet/L-Band. Be sure you have the u-blox driver installed. Then select the appropriate COM port for the u-blox module. See Configure with Serial for more information.</p>"},{"location":"gis_software_windows/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_windows/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_windows/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources. </p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. </p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station. </p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"intro/","title":"Quick Start","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>This quick start guide will get you started in 10 minutes or less. For the full product manual, please proceed to the Introduction.</p> <p>Are you using Android or iOS?</p>"},{"location":"intro/#android","title":"Android","text":"<ol> <li> <p>Download SW Maps. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p></p> <p>Download SW Maps for Android</p> </li> <li> <p>Mount the hardware:</p> <ul> <li>For RTK Surveyor/Express/Express Plus: Attach the included antenna to a monopole using the included thread adapter. Clamp the RTK device to the monopole. Use the included cable to connect the antenna to the RTK Surveyor/Express/Express Plus (Figure 1).</li> <li>For RTK Facet/Facet L-Band: Attach the Facet to a monopole using the included thread adapter (Figure 1).</li> </ul> <p></p> <p>Figure 1</p> </li> <li> <p>Turn on your RTK device by pressing the POWER button until the display shows \u2018SparkFun RTK\u2019 then you can release it (Figure 2). </p> <p></p> <p>Figure 2</p> </li> <li> <p>Please note the four-digit code in the top left corner of the display (B022 in the picture below). This is the MAC address you will want to pair with (Figure 3).</p> <p></p> <p>Figure 3</p> </li> <li> <p>From your cell phone, open Bluetooth settings and pair it with a new device. You will see a list of available Bluetooth devices. Select the \u2018Facet Rover-3AF1\u2019 where 'Facet' is the type of device you have (Surveyor, Express, Facet, etc) and 3AF1 is the MAC address you see on the device\u2019s display (Figure 4).</p> <p></p> <p>Figure 4</p> </li> <li> <p>Once paired, open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019. </p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You should see the \u2018Facet Rover-3AF1\u2019 in the list. Select it then press the \u2018Connect\u2019 button in the bottom left corner (Figure 5). SW Maps will show a warning that the instrument height is 0m. That\u2019s ok. </p> <p></p> <p>Figure 5</p> </li> <li> <p>Once connected, have a look at the display on the RTK device. You should see the MAC address disappear and be replaced by the Bluetooth icon (Figure 6). You\u2019re connected!</p> <p></p> <p>Figure 6</p> </li> <li> <p>Now put the device outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 7). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will start at around 10 meters and begin to decrease. The lower the HPA the more accurate your position. If you wait a few moments, this will drop dramatically to around 0.3 meters (300mm = 1ft) or better. </p> <p></p> <p>Figure 7</p> </li> </ol> <p>You can now use your RTK device to measure points with very good (sub-meter) accuracy. If you need extreme accuracy (down to 10mm) continue reading the RTK Crash Course.</p>"},{"location":"intro/#ios","title":"iOS","text":"<p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support Bluetooth Low Energy (BLE) which does work with iOS.</p> <ol> <li> <p>Download SW Maps for iOS. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p></p> <p>Download SW Maps for iOS</p> </li> <li> <p>Mount the hardware:</p> <ul> <li>For RTK Surveyor/Express/Express Plus: Attach the included antenna to a monopole using the included thread adapter. Clamp the RTK device to the monopole. Use the included cable to connect the antenna to the RTK Surveyor/Express/Express Plus (Figure 1).</li> <li>For RTK Facet/Facet L-Band: Attach the Facet to a monopole using the included thread adapter (Figure 1).</li> </ul> <p></p> <p>Figure 1</p> </li> <li> <p>Turn on your RTK device by pressing the POWER button until the display shows \u2018SparkFun RTK' then you can release it (Figure 2). </p> <p></p> <p>Figure 2</p> </li> <li> <p>Put the RTK device into configuration mode by tapping the POWER or SETUP button multiple times until the Config menu is highlighted (Figure 3).</p> <p></p> <p>Figure 3</p> </li> <li> <p>From your phone, connect to the WiFi network RTK Config.</p> </li> <li> <p>Open a browser (Chrome is preferred) and type rtk.local into the address bar. Note: Devices with older firmware may still need to enter 192.168.4.1.</p> </li> <li> <p>Under the System Configuration menu, change the Bluetooth Protocol to BLE (Figure 4). Then click Save Configuration and then Exit and Reset. The unit will now reboot.</p> <p></p> <p>Figure 4</p> </li> <li> <p>You should now be disconnected from the RTK Config WiFi network. Make sure Bluetooth is enabled on your iOS device Settings (Figure 5). The RTK device will not appear in the OTHER DEVICES list. That is OK.</p> <p></p> <p>Figure 5</p> </li> <li> <p>Open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019. </p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You will need to agree to allow a Bluetooth connection. Set the Instrument Model to Generic NMEA (Bluetooth LE). Press 'Scan' and your RTK device should appear. Select it then press the \u2018Connect\u2019 button in the bottom left corner.</p> </li> <li> <p>Once connected, have a look at the display on the RTK device. You should see the MAC address disappear and be replaced by the Bluetooth icon (Figure 6). You\u2019re connected!</p> <p></p> <p>Figure 6</p> </li> <li> <p>Now put the device outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 7). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will start at around 10 meters and begin to decrease. The lower the HPA the more accurate your position. If you wait a few moments, this will drop dramatically to around 0.3 meters (300mm = 1ft) or better. </p> <p></p> <p>Figure 7</p> </li> </ol> <p>You can now use your RTK device to measure points with very good (sub-meter) accuracy. If you need extreme accuracy (down to 10mm) continue reading the RTK Crash Course.</p>"},{"location":"intro/#rtk-crash-course","title":"RTK Crash Course","text":"<p>To get millimeter accuracy we need to provide the RTK unit with correction values. Corrections, often called RTCM, help the RTK unit refine its position calculations. RTCM (Radio Technical Commission for Maritime Services) can be obtained from a variety of sources but they fall into three buckets: Commercial, Public, and Civilian Reference Stations.</p> <p>Commercial Reference Networks</p> <p>These companies set up a large number of reference stations that cover entire regions and countries, but charge a monthly fee. They are often easy to use but can be expensive.</p> <ul> <li>PointOneNav ($50/month) - US, EU, Australia, South Korea</li> <li>Skylark ($29 to $69/month) - US, EU, Japan, Australia</li> <li>SensorCloud RTK ($100/month) partial US, EU</li> <li>Premium Positioning (~$315/month) partial EU</li> <li>KeyNetGPS ($375/month) North Eastern US</li> <li>Hexagon/Leica ($500/month) - partial US, EU</li> </ul> <p>Public Reference Stations</p> <p> </p> <p>State Wide Network of Continuously Operating Reference Stations (CORS)</p> <p>Be sure to check if your state or country provides corrections for free. Many do! Currently, there are 21 states in the USA that provide this for free as a department of transportation service. Search \u2018Wisconsin CORS\u2019 as an example. Similarly, in France, check out CentipedeRTK. There are several public networks across the globe, be sure to google around!</p> <p>Civilian Reference Stations</p> <p></p> <p>The base station at SparkFun</p> <p>You can set up your own correction source. This is done with a 2nd GNSS receiver that is stationary, often called a Base Station. There is just the one-time upfront cost of the Base Station hardware. See the Creating a Permanent Base document for more information.</p>"},{"location":"intro/#ntrip-example","title":"NTRIP Example","text":"<p>Once you have decided on a correction source we need to feed that data into your SparkFun RTK device. In this example, we will use PointOneNav and SW Maps.</p> <ol> <li> <p>Create an account on PointOneNav. Note: This service costs $50 per month at the time of writing.</p> </li> <li> <p>Open SW Maps and connect to the RTK device over Bluetooth.</p> </li> <li> <p>Once connected, open the SW Maps menu again (top left corner) and you will see a new option; click on \u2018NTRIP Client'.</p> </li> <li> <p>Enter the credentials provided by PointOneNav and click Connect (Figure 1). Verify that Send NMEA GGA is checked.</p> <p></p> <p>Figure 1</p> </li> <li> <p>Corrections will be downloaded every second from PointOneNav using your phone\u2019s cellular connection and then sent down to the RTK device over Bluetooth. You don't need a very fast internet connection or a lot of data; it's only about 530 bytes per second.</p> </li> </ol> <p>Assuming you are outside, as soon as corrections are sent to the device, the Crosshair icon will become double and begin flashing. Once RTK Fix is achieved (usually under 30 seconds) the double crosshairs will become solid and the HPA will be below 20mm (Figure 2). You can now take positional readings with millimeter accuracy!</p> <p></p> <p>Figure 2</p> <p>In SW Maps, the position bubble will turn from Blue (regular GNSS fix), then to Orange (RTK Float), then to Green (RTK Fix) (Figure 3).</p> <p></p> <p>Figure 3</p> <p>RTK Fix will be maintained as long as there is a clear view of the sky and corrections are delivered to the device every few seconds.</p>"},{"location":"intro/#common-gotchas","title":"Common Gotchas","text":"<ul> <li> <p>High-precision GNSS only works with dual frequency L1/L2 antennas. This means that GPS antenna you got in the early 2000s with your TomTom is not going to work. Please use the L1/L2 antennas provided by SparkFun.</p> </li> <li> <p>High-precision GNSS works best with a clear view of the sky; it does not work indoors or near a window. GNSS performance is generally not affected by clouds or storms. Trees and buildings can degrade performance but usually only in very thick canopies or very near tall building walls. GNSS reception is very possible in dense urban centers with skyscrapers but high-precision RTK may be impossible.</p> </li> <li> <p>The location reported by the RTK device is the location of the antenna element; it's not the location of the pointy end of the stick. Lat and Long are fairly easy to obtain but if you're capturing altitude be sure to do additional reading on ARPs (antenna reference points) and how to account for the antenna height in your data collection software.</p> </li> <li> <p>An internet connection is required for most types of RTK. RTCM corrections can be transmitted over other types of connections (such as serial telemetry radios). See Correction Transport for more details.</p> </li> </ul>"},{"location":"intro/#rtk-facet-l-band-keys","title":"RTK Facet L-Band Keys","text":"<p>The RTK Facet L-Band is unique in that it must obtain keys to decrypt the signal from a geosynchronous satellite. Here are the steps to do so:</p> <ol> <li> <p>Turn on your RTK Facet L-Band by pressing the POWER button until the display shows \u2018SparkFun RTK' then you can release it (Figure 1). </p> <p></p> <p>Figure 1</p> </li> <li> <p>Put the RTK device into configuration mode by tapping the POWER button multiple times until the Config menu is highlighted (Figure 2).</p> <p></p> <p>Figure 2</p> </li> <li> <p>From your phone or laptop, connect to the WiFi network RTK Config.</p> </li> <li> <p>Open a browser (Chrome is preferred) and type rtk.local into the address bar. Note: Devices with older firmware may still need to enter 192.168.4.1.</p> </li> <li> <p>Under the WiFi Configuration menu, enter the SSID and password for your local WiFi network (Figure 3). You can enter up to four. This can be a home,   office, cellular hotspot, or any other WiFi network. The unit will attempt to connect to the internet periodically to obtain new keys, including this first day. Then click Save Configuration and then Exit and Reset. The unit will now reboot.</p> <p></p> <p>Figure 3</p> </li> <li> <p>After reboot, the device will connect to WiFi and obtain keys. You should see a series of displays indicating the automatic process (Figure 4).</p> <p></p> <p>Figure 4 </p> <p>Keys are valid for a minimum of 29 days and a maximum of 60. The device will automatically attempt to connect to WiFi to obtain new keys. If WiFi is not available during that period the keys will expire. The device will continue to operate with expired keys, with ~0.3m accuracy but not be able to obtain RTK Fix mode.</p> </li> <li> <p>Now put the device outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Within about 30 seconds you should see 10 or more satellites in view (SIV). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will start at around 10 meters and begin to decrease. The lower the HPA the more accurate your position. </p> <p></p> <p>Figure 5</p> <p>Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three-pronged icon (Figure 5). As the unit's accuracy increases a normal cross-hair will turn to a double blinking cross-hair indicating a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution. The HPA will be below 0.030 (30mm) or better once RTK Fix is achieved.</p> </li> </ol> <p>You can now use your RTK device to measure points with millimeter accuracy. Please see Android or iOS for guidance on getting the RTK device connected to GIS software over Bluetooth.</p>"},{"location":"intro/#rtk-reference-station","title":"RTK Reference Station","text":"<p>While most of this Quick Start guide can be used with the RTK Reference Station, the Reference Station Hookup Guide is the best place to get started.</p>"},{"location":"menu_base/","title":"Base Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>In addition to providing accurate local location fixes, the SparkFun RTK devices can also serve as a correction source, also called a Base. The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. Said differently, the 'Base' is told where it is, and that it's not moving. If the GPS signals say otherwise, the Base knows there was a disturbance in the Force ionosphere. These differences are the correction values passed to the Rover so that the Rover can have millimeter-level accuracy.</p> <p>There are two types of bases: Surveyed and Fixed. A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that the RTK Facet supports both Survey-In and Fixed Base techniques.</p> <p>Note: The RTK Express Plus does not support Base mode. The Express Press contains an internal IMU and additional algorithms to support high-precision location fixes using dead reckoning.</p> <p>Note: The RTK Facet L-Band is designed to use corrections provided via u-blox's PointPerfect system therefore, a Base/Rover setup is not needed. However, if the service is not available the RTK Facet L-Band can still be used in a traditional Base/Rover setup. Here we\u2019ll describe how to assemble a Rover and Base.</p> <p>Please see the following tutorials for more information:</p> What is GPS RTK? Getting Started with u-center for u-blox Setting up a Rover Base RTK System How to build a DIY GNSS reference station <p>The Base Menu allows the user to select between Survey-In or Fixed Base setups.</p> <p></p> <p>Controlling the type of Base from WiFi AP Config</p> <p></p> <p>Base Menu Options</p>"},{"location":"menu_base/#mode","title":"Mode","text":"<p>In Survey-In mode, the minimum observation time and Mean 3D Standard Deviation can be set. The defaults are 60 seconds and 5 meters as directed by u-blox. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours or an initial positional accuracy of 0.3m is not going to significantly improve the accuracy of the survey - use PPP instead.</p> <p></p> <p>Fixed base coordinate input</p> <p>In Fixed mode, the coordinates of the antenna need to be set. These can be entered in ECEF or Geographic coordinates. Whenever a user enters Base mode by pressing the SETUP button the GNSS receiver will immediately go into Base mode with these coordinates and immediately begin outputting RTCM correction data.</p> <p>Note: The 'Paste Current XYZ' button will copy the current base coordinates and paste them into the X/Y/Z boxes. This shortcut allows the user to skip writing down coordinates just to re-enter them. However, taking a snap-shot of the unit's position in time is a very inaccurate way to assign the unit's base position.</p> <p></p> <p>RTK Facet in Survey-In Mode</p> <p>Once the device has been configured, pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained.</p> <p></p> <p>RTK Facet in Fixed Transmit Mode</p> <p>Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second. During this phase, the ZED-F9P is outputting the RTCM corrections out of the RADIO port. Attaching an external serial radio to this port will allow the Base to send corrections to any Rover.</p> <p>The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base.</p>"},{"location":"menu_base/#ntrip-server","title":"NTRIP Server","text":"<p>NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet!</p> <p>Enabling NTRIP will present a handful of new options seen below:</p> <p></p> <p>Configuring NTRIP Server settings via WiFi Config AP</p> <p></p> <p>Settings for the NTRIP Server</p> <p>This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to the user's mount point. This eliminates the need for a radio link.</p> <p>Once the NTRIP server is enabled you will need a handful of credentials:</p> <ul> <li>Local WiFi SSID and password</li> <li>A casting service such as RTK2Go or Emlid (the port is almost always 2101)</li> <li>A mount point and password</li> </ul> <p></p> <p>RTK Facet in Transmit Mode with NTRIP Enabled</p> <p></p> <p>NTRIP Server Connected!</p> <p>If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi.</p> <p>Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second.</p> <p></p> <p>Every second a few hundred bytes, up to ~2k, will be transmitted to your mount point.</p> <p>Note: During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to view detailed location information using the System Report command.</p>"},{"location":"menu_base/#commonly-use-coordinates","title":"Commonly Use Coordinates","text":"<p>A list of common coordinates</p> <p>For users who return to the same base position or monument, the coordinates can be saved to a 'Commonly Used Coordinates' list. A nickname and the X/Y/Z positions are saved to the list. Any record on the list can be loaded from the list into the X/Y/Z fields allowing quick switching without the need to hand record or re-enter coordinates from day-to-day repositioning of the base.</p>"},{"location":"menu_base/#rtcm-message-rates","title":"RTCM Message Rates","text":"<p>When the device is in Base mode, the fix rate is set to 1Hz. This will override any Rover setting. </p> <p></p> <p>Additionally, RTCM messages are generated at a rate of 1Hz. If lower RTCM rates are desired the RTCM Rates menu can be used to modify the rates of any supported RTCM message. This can be helpful when using longer-range radios that have lower bandwidth.</p>"},{"location":"menu_base/#supported-latlong-coordinate-formats","title":"Supported Lat/Long Coordinate Formats","text":"<p>When entering coordinates for a fixed Base in Geodetic format, the following formats are supported:</p> <ul> <li>DD.ddddddddd (ie -105.184774720, 40.090335429)</li> <li>DDMM.mmmmmmm (ie -10511.0864832)</li> <li>DD MM.mmmmmmm (ie 40 05.42013)</li> <li>DD-MM.mmmmmmm (40-05.42013)</li> <li>DDMMSS.ssssss (-1051105.188992)</li> <li>DD MM SS.ssssss (-105 11 05.188992)</li> <li>DD-MM-SS.ssssss (40-05-25.2075)</li> </ul> <p></p> <p>These coordinate formats are automatically detected and converted as needed. The coordinates are displayed in the format they are entered. If a different format is desired, the coordinate display format can be changed via the serial Base menu.</p> <p>For more information about coordinate formats, check out this online converter.</p>"},{"location":"menu_base/#assisted-base","title":"Assisted Base","text":"<p>An Assisted Base is where a temporary base is set up to Survey-In its location but is simultaneously provided RTCM corrections so that its Survey-In is done with very precise readings. An assisted base running a Survey-In removes much of the relative inaccuracies from a Rover-Base system. We've found an Assisted Base varies as little as 50mm RMS between intra-day tests, with accuracy within 65mm of a PPP of the same location, same day.</p> <p>To set up an assisted base the RTK device should be located in a good reception area and provided with RTCM corrections. Let it obtain RTK Fix from a fixed position (on a tripod, for example) in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode (also called Survey-In). The device will take 60 seconds of positional readings, at which point the fixed position of the base will be set using RTK augmented coordinates. At this point, corrections provided to the base can be discontinued. The Base will begin outputting very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.</p> <p>Similarly, the RTK Facet L-Band can be set up as a relay: the L-Band device can be located in a good reception area, and then transmit very accurate corrections to a rover via Radio or internet link. Because the RTK Facet L-Band can generate its own corrections, you do not need to provide them during Survey-In. To set up an assisted base, set up an RTK Facet L-Band unit with a clear view of the sky, and let it obtain RTK Fix from a fixed position in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode. The device will take 60 seconds of positional readings, at which point the fixed position will be set using RTK fixed coordinates. The RTK Facet L-Band will then output very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.</p>"},{"location":"menu_data_logging/","title":"Data Logging Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p>"},{"location":"menu_data_logging/#wifi-interface","title":"WiFi Interface","text":"<p>Please see the System Menu WiFi Interface.</p>"},{"location":"menu_data_logging/#serial-interface","title":"Serial Interface","text":"<p>RTK Data Logging Configuration Menu</p> <p>From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 128GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (&gt;500MB) so plan accordingly.</p> <ul> <li>Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The <code>[DeviceName]</code> is Surveyor, Express, etc.</li> <li>Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with &lt;10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information.</li> <li>Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached.</li> <li> <p>Option 4 will close the current log and start a new log.</p> </li> <li> <p>Option 5 will record the coordinates of the base antenna to a custom NMEA message within the log if the RTCM1005 or RTCM1006 message is received. This can be helpful when doing field work and the location of the base is needed; the log on the roving device will contain the location of the base preventing the user from needing to record the base location separately. The ARP is logged in a custom GNTXT,01,01,10 message as ECEF-X, ECEF-Y, ECEF-Z, Antenna Height. The Antenna Height will be zero if the data was extracted from RTCM1005.</p> </li> <li> <p>Option 7 will enable/disable creating a comma separated file (Marks_date.csv) that is written each time the mark state is selected with the setup button on the RTK Surveyor, RTK Express or RTK Express Plus, or the power button on the RTK Facet.</p> </li> <li> <p>Option 8 will enable/disable the resetting of the system if an SD card is detected but fails to initialize. This can be helpful to harden a system that may be deployed for long periods of time. Without intervention, if an SD card is detected but fails to respond, the system will reset in an attempt to re-mount the faulty SD card interface.</p> </li> </ul> <p>Note: If you are wanting to log RAWX sentences to create RINEX files useful for post-processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get a higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.</p>"},{"location":"menu_debug/","title":"Debug Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Showing the debug menu</p> <p>The Debug menu enables the user to enable and disable various debug features. None of these options are needed for normal users or daily use. These are provided for faster software development and troubleshooting.</p> <ol> <li>I2C Debugging Output - Enable additional ZED-F9P interface debug messages</li> <li>Heap Reporting - Display currently available bytes, lowest value and the largest block</li> <li>Task Highwater Reporting - Shows stack usage of select tasks</li> <li>Set the SPI / microSD card frequency - SD card interface speed. Default is 16MHz. </li> <li>Set SPP RX buffer size - Default 128 bytes</li> <li>Set SPP TX buffer size - Controls how large the buffer used to communicate over Bluetooth</li> <li>Throttle Bluetooth transmissions during SPP congestion - Reduce bytes transmitted if Bluetooth link becomes busy</li> <li>Display reset counter - Enable to display a small number indicating non-power on reset count</li> <li>Set GNSS serial timeout in seconds - Sets the number of milliseconds before reporting serial available</li> <li>Periodically display WiFi IP Address</li> <li>Periodically display system states</li> <li>Periodically display WiFi states</li> <li>Periodically display NTRIP Client states</li> <li> <p>Periodically display NTRIP Server states</p> </li> <li> <p>t - Display the test screen</p> </li> <li>e - Erase LittleFS: Clear settings and profiles saved internally (not on microSD card)</li> <li>r - Reset the system</li> <li>x - Exit the debug menu</li> </ol>"},{"location":"menu_ethernet/","title":"Ethernet Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The Reference Station sends and receives NTRIP correction data via Ethernet. It can also send NMEA and RTCM navigation messages to an external TCP Server via Ethernet. It also has a dedicated Configure-Via-Ethernet (Cfg Eth) mode which is accessed via the MODE button and OLED display.</p> <p>By default, the Reference Station will use DHCP to request an IP Address from the network Gateway. But you can optionally configure it with a fixed IP Address.</p> <p></p> <p>The Reference Station Ethernet menu - with DHCP selected</p> <p></p> <p>The Reference Station Ethernet menu - with a fixed IP address selected</p>"},{"location":"menu_ethernet/#ethernet-tcp-client","title":"Ethernet TCP Client","text":"<p>The Reference Station can act as an Ethernet TCP Client, sending NMEA and / or UBX data to a remote TCP Server.</p> <p>This is similar to the WiFi TCP Client mode on our other RTK products, but the data can be sent to any server based on its IP Address or URL.</p> <p>E.g. to connect to a local machine via its IP Address, select option \"c\" and then enter the IP Address using option \"h\"</p> <p></p> <p></p> <p>The above animation was generated using TCP_Server.py.</p>"},{"location":"menu_gnss/","title":"GNSS Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The ZED-F9P is immensely configurable. The RTK device will, by default, put the ZED-F9P into the most common configuration for rover/base RTK for use with SW Maps and other GIS applications. </p> <p>The GNSS Configuration menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations.</p> <p></p> <p>The most common settings on the RTK Device WiFi AP Config</p> <p>From the main menu, pressing 1 will bring up the GNSS configuration menu. </p> <p></p> <p>GNSS menu showing measurement rates and dynamic model</p>"},{"location":"menu_gnss/#measurement-frequency","title":"Measurement Frequency","text":"<p>Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; RTK devices support up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; the ZED-F9P supports up to 8255 seconds (137 minutes) between readings.</p> <p></p> <p>Note: When in Base mode, the measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP.</p>"},{"location":"menu_gnss/#dynamic-model","title":"Dynamic Model","text":"<p>The Dynamic Model can be changed but it is recommended to leave it as Portable. For more information, please refer to the ZED-F9P Integration Manual.</p>"},{"location":"menu_gnss/#min-sv-elevation-and-cn0","title":"Min SV Elevation and C/N0","text":"<p>GNSS menu showing Minimum SV Elevation and C/N0</p> <p>A minimum elevation is set in degrees. If a satellite is detected that is below this elevation, it will be excluded from any GNSS position calculation.</p> <p>A minimum C/N0 is set in dB. If a satellite is detected that is below this signal strength, it will be excluded from any GNSS position calculation.</p>"},{"location":"menu_gnss/#constellations-menu","title":"Constellations Menu","text":"<p>Enable or disable the constellations used for fixes</p> <p>The ZED-F9P is capable of tracking 184 channels across four constellations and two bands (L1/L2) including GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By default, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the ZED to ignore those signals when calculating a location fix.</p>"},{"location":"menu_gnss/#ntrip-client","title":"NTRIP Client","text":"<p>NTRIP Client enabled showing settings</p> <p>The SparkFun RTK devices can obtain their correction data over a few different methods. For detailed information see Correction Sources.</p> <ul> <li>Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is sent from the phone to the RTK device.</li> <li>WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. WiFi and Bluetooth can run simultaneously. This is helpful in situations where a GIS software does not have an NTRIP Client; a cellular hotspot can be used to provide WiFi to the RTK device setup to use NTRIP Client an obtain RTK Fix, while Bluetooth is used to connect to the GIS software for data mapping and collection.</li> <li>Radio - A base RTK unit and a rover have serial radios plugged into the RADIO port. RTCM data generated by the base station is set over the radio to the rover.</li> </ul> <p>Once the NTRIP Client is enabled you will need a handful of credentials:</p> <ul> <li>Local WiFi SSID and password (WPA2)</li> <li>A casting service and port such as RTK2Go or Emlid (the port is almost always 2101)</li> <li>A mount point and password</li> </ul> <p>With these credentials set, the RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode.</p> <p></p> <p>Rover with Active NTRIP Client Connection</p> <p>Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.</p>"},{"location":"menu_messages/","title":"Messages Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Message rate configuration from WiFi AP Config</p> <p></p> <p>The messages configuration menu</p> <p>From this menu, a user can control the output of various NMEA, RTCM, RXM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available).</p> <p>Because of the large number of configurations possible, we provide a few common settings:</p> <ul> <li>Reset to Surveying Defaults (NMEAx5)</li> <li>Reset to PPP Logging Defaults (NMEAx5 + RXMx2)</li> <li>Turn off all messages (serial command only)</li> <li>Turn on all messages (serial command only)</li> </ul>"},{"location":"menu_messages/#reset-to-surveying-defaults-nmeax5","title":"Reset to Surveying Defaults (NMEAx5)","text":"<p>This will turn off all messages and enable the following messages:</p> <ul> <li>NMEA-GGA, NMEA-GSA, NMEA-GST, NMEA-GSV, NMEA-RMC</li> </ul> <p>These five NMEA sentences are commonly used with SW Maps for general surveying.</p>"},{"location":"menu_messages/#reset-to-ppp-logging-defaults-nmeax5-rxmx2","title":"Reset to PPP Logging Defaults (NMEAx5 + RXMx2)","text":"<p>This will turn off all messages and enable the following messages:</p> <ul> <li>NMEA-GGA, NMEA-GSA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX</li> </ul> <p>These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). You can read more about PPP here.</p>"},{"location":"menu_messages/#individual-messages","title":"Individual Messages","text":"<p>Configuring the NMEA messages</p> <p>There are a large number of messages supported (listed below). Each message sub-menu will present the user with the ability to set the message report rate.</p> <p>Each message rate input controls which messages are disabled (0) and how often the message is reported (1 = one message reported per 1 fix, 5 = one report every 5 fixes). The message rate range is 0 to 20.</p> <p>Note: The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to a 4Hz fix rate, the GSV message will appear once per second.</p> <p>The following 120 messages are supported for Bluetooth output and logging:</p> \u2022 NMEA-DTM \u2022 NMEA-GBS \u2022 NMEA-GGA \u2022 NMEA-GLL \u2022 NMEA-GNS \u2022 NMEA-GRS \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RLM \u2022 NMEA-RMC \u2022 NMEA-THS \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NMEA-NAV2-GGA \u2022 NMEA-NAV2-GLL \u2022 NMEA-NAV2-GNS \u2022 NMEA-NAV2-GSA \u2022 NMEA-NAV2-RMC \u2022 NMEA-NAV2-VTG \u2022 NMEA-NAV2-ZDA \u2022 PUBX-POLYP \u2022 PUBX-POLYS \u2022 PUBX-POLYT \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1 \u2022 ESF-ALG \u2022 ESF-INS \u2022 ESF-MEAS \u2022 ESF-RAW \u2022 ESF-STATUS \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-SPAN \u2022 MON-SYS \u2022 MON-TXBUF \u2022 NAV2-CLOCK \u2022 NAV2-COV \u2022 NAV2-DOP \u2022 NAV2-EELL \u2022 NAV2-EOE \u2022 NAV2-POSECEF \u2022 NAV2-POSLLH \u2022 NAV2-PVAT \u2022 NAV2-PVT \u2022 NAV2-SAT \u2022 NAV2-SBAS \u2022 NAV2-SIG \u2022 NAV2-STATUS \u2022 NAV2-TIMEBDS \u2022 NAV2-TIMEGAL \u2022 NAV2-TIMEGLO \u2022 NAV2-TIMEGPS \u2022 NAV2-TIMELS \u2022 NAV2-TIMEQZSS \u2022 NAV2-TIMEUTC \u2022 NAV2-VELECEF \u2022 NAV2-VELNED \u2022 NAV-ATT \u2022 NAV-CLOCK \u2022 NAV-COV \u2022 NAV-DOP \u2022 NAV-EELL \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-PL \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVAT \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SBAS \u2022 NAV-SIG \u2022 NAV-SLAS \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEQZSS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-COR \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 RXM-SPARTN \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY"},{"location":"menu_messages/#turn-off-all-messages","title":"Turn off all messages","text":"<p>This will turn off all messages. This is handy for advanced users who need to start from a blank slate. This setting is only available over serial configuration.</p>"},{"location":"menu_messages/#turn-on-all-messages","title":"Turn on all messages","text":"<p>This will turn on all messages. This is a setting used for firmware testing and should not be needed in normal use. This setting is only available over serial configuration.</p>"},{"location":"menu_messages/#esf-messages","title":"ESF Messages","text":"<p>The ZED-F9R module, found only on the Express Plus, supports additional External Sensor Fusion messages. These messages show the raw accelerometer and gyroscope values of the internal IMU. These messages can consume up to 34,000 bytes of bandwidth. Please see here for more information.</p>"},{"location":"menu_ntp/","title":"Network Time Protocol Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The Reference Station can act as an Ethernet Network Time Protocol (NTP) server.</p> <p>Network Time Protocol has been around since 1985. It is a simple way for computers to synchronize their clocks with each other, allowing the network latency (delay) to be subtracted:</p> <ul> <li> <p>A client sends a NTP request (packet) to the chosen or designated server</p> <ul> <li>The request contains the client's current clock time - for identification</li> </ul> </li> <li> <p>The server logs the time the client's request arrived and then sends a reply containing:</p> <ul> <li>The client's clock time - for identification</li> <li>The server's clock time - when the request arrived at the server</li> <li>The server's clock time - when the reply is sent</li> <li>The time the server's clock was last synchronized - providing the age of the synchronization</li> </ul> </li> <li> <p>The client logs the time the reply is received - using its own clock</p> </li> </ul> <p>When the client receives the reply, it can deduce the total round-trip delay which is the sum of:</p> <ul> <li> <p>How long the request took to reach the server</p> </li> <li> <p>How long the server took to construct the reply</p> </li> <li> <p>How long the reply took to reach the client</p> </li> </ul> <p>This exchange is repeated typically five times, before the client synchronizes its clock to the server's clock, subtracting the latency (delay) introduced by the network.</p> <p>Having your own NTP server on your network allows tighter clock synchronization as the network latency is minimized.</p> <p>The Reference Station can be placed into its dedicated NTP mode, by pressing the MODE button until NTP is highlighted in the display and pausing there.</p> <p></p> <p>Selecting NTP mode</p> <p>The Reference Station will first synchronize its Real Time Clock (RTC) using the very accurate time provided by the u-blox GNSS module. The module's Time Pulse (Pulse-Per-Second) signal is connected to the ESP32 as an interrupt. The ESP32's RTC is synchronized to Universal Time Coordinate (UTC) on the rising edge of the TP signal using the time contained in the UBX-TIM-TP message.</p> <p>The WIZnet W5500 interrupt signal is also connected to the ESP32, allowing the ESP32 to accurately log when each NTP request arrives.</p> <p>The Reference Station will respond to each NTP request within a few 10s of milliseconds.</p> <p>If desired, you can log all NTP requests to a file on the microSD card, and/or print them as diagnostic messages. The log and messages contain the NTP timing information and the IP Address and port of the Client.</p> <p></p> <p>System Debug Menu - NTP Diagnostics (Click for a closer look)</p> <p></p> <p>Logging Menu - Log NTP Requests</p>"},{"location":"menu_ntp/#logged-ntp-requests","title":"Logged NTP Requests","text":"<p>NTP uses its own epoch - midnight January 1st, 1900. This is different than the standard Unix epoch - midnight January 1st, 1970 - and the GPS epoch - midnight January 6th, 1980. The times shown in the log and diagnostic messages use the NTP epoch. You can use online calculators to convert between the different epochs:</p> <ul> <li> <p>https://weirdo.cloud/</p> </li> <li> <p>https://www.unixtimestamp.com/</p> </li> <li> <p>https://www.labsat.co.uk/index.php/en/gps-time-calculator</p> </li> </ul>"},{"location":"menu_ntp/#ntp-on-windows","title":"NTP on Windows","text":"<p>If you want to synchronize your Windows PC to a Reference Station NTP Server, here's how to do it:</p> <ul> <li>Install Meinberg NTP - this replaces the Windows built-in Time Service</li> </ul> <p></p> <ul> <li>During the installation, select \"Create an initial configuration file\" and select the NTP Pool server for your location</li> <li>Select \"Use fast initial sync mode\" for faster first synchronization</li> </ul> <p></p> <ul> <li>The next step is to edit the NTP Configuration File<ul> <li>Editing the file requires Administrator privileges</li> <li>Open the Start menu, navigate to Meinberg, right-click on Edit NTP Configuration and select Run as administrator</li> </ul> </li> </ul> <p></p> <ul> <li>Comment the lines in ntp.conf which name the pool.ntp servers</li> <li>Add an extra server line and include the IP Address for your Reference Station. It helps to give your Reference Station a fixed IP Address first - see Menu Ethernet</li> <li>Save the file</li> </ul> <p></p> <ul> <li>Finally, restart the NTP Service<ul> <li>Again this needs to be performed with Administrator privileges</li> <li>Open the Start menu, navigate to Meinberg, right-click on Restart NTP Service and select Open file loctaion</li> </ul> </li> </ul> <p></p> <ul> <li>Right-click on the Restart NTP Service and select Run as administrator</li> </ul> <p></p> <ul> <li>You can check if your PC clock synchronized successfully by opening a Command Prompt (cmd) and running ntpq -pd</li> </ul> <p></p> <p>If enabled, your Windows PC NTP requests will be printed and logged by the reference station. See above.</p>"},{"location":"menu_pointperfect/","title":"PointPerfect Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>Note: This section only applies to RTK Facet L-Band products. Regular RTK Facet, Surveyor, Express, and Express Plus products do not have L-Band antennas or receivers built-in.</p> <p>Note: In July of 2025 u-blox announced the discontinuation of L-Band service to North America on December 31st, 2025. RTK Facet L-Band units will continue to work after this date as high precision devices, but they will need to switch to an internet based correction services to obtain an RTK Fix.</p> <p></p> <p>Configuring PointPerfect settings over WiFi</p> <p></p> <p>Configuring PointPerfect settings over serial</p> <p>RTK Facet L-Band products are equipped with a special antenna and extra receiver to decrypt the L-Band corrections using the PointPerfect service from u-blox. The PointPerfect sub-menu allows a user to enter their 'Home' WiFi settings. This WiFi SSID and password are used to regularly obtain the needed decryption keys from u-blox. This is normally your home WiFi or other accessible WiFi.</p> <p>PointPerfect L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to WiFi at each power on. If WiFi is not available, it will continue normal operation. If the keys fully expire, the device will continue to receive the L-Band signal but will be unable to decrypt the signal, disabling high-precision GNSS. The RTK Facet L-Band will continue to have extraordinary accuracy (we've seen better than 0.15m HPA) but not the centimeter-level accuracy that comes with RTK.</p> <p>Note: The RTK Facet L-Band is capable of receiving RTCM corrections over traditional means including NTRIP data over Bluetooth or a serial radio. But the real point of L-Band and PointPerfect is that you can be anywhere, without cellular or radio cover, and still enjoy millimeter accuracy.</p> <p></p> <p>Display showing 14 days until keys expire</p> <p>The unit will display various messages to aid the user in obtaining keys as needed.</p> <p></p> <p>Three pronged satellite dish indicating L-Band reception</p> <p>Upon successful reception and decryption of PointPerfect corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution.</p> <p></p> <p>PointPerfect Menu</p> <p>The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi to obtain new keys.</p> <ul> <li> <p>Option '1' disables the use of PointPerfect corrections.</p> </li> <li> <p>Option '2' disables the automatic attempts at WiFi connections when key expiry is less than 28 days.</p> </li> <li> <p>Option '3' will trigger an immediate attempt to connect over WiFi and update the keys.</p> </li> <li> <p>Option '4' will display the Device ID. This is needed when a SparkFun RTK Facet L-Band product needs to be added to the PointPerfect system. This is normally taken care of when you purchase the L-Band unit with PointPerfect service added, but for customers who wish to extend their subscription beyond the initial year, or did not purchase the service and want to add it at a later date, this Device ID is what customer service needs.</p> </li> <li> <p>Option 'k' will bring up the Manual Key Entry menu.</p> </li> </ul> <p></p> <p>Manual Key Entry Menu</p> <p>Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys.</p> <p>Option '1' will allow a user to enter their Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer its own devices, the token can be changed here.</p>"},{"location":"menu_ports/","title":"Ports Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Setting the baud rates of the two available external ports</p> <p></p> <p>Baud rate configuration of Radio and Data ports</p>"},{"location":"menu_ports/#radio-port","title":"Radio Port","text":"<p>By default, the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug-and-play solution). This can be set from 4800bps to 921600bps.</p> <p>The radio port is connected to the F9P's UART2.</p>"},{"location":"menu_ports/#mux-channel","title":"Mux Channel","text":"<p>The Data port on the RTK Facet, Express, and Express Plus is very flexible. Internally the Data connector is connected to a digital mux allowing one of four software-selectable setups. By default, the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial.</p> <ul> <li>NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired.</li> <li>PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. This pin can be configured as an extremely accurate time base. The pulse length and time between pulses are configurable down to 1us. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the External Event Logging section below and the Timemark section of the ZED-F9P Integration Manual for more information.</li> <li>I2C - (On Express, Facet, and Facet L-Band) The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus.</li> <li>Wheel/Dir Encoder - (On Express Plus) Connect the DATA port to the wheel tick inputs on the ZED-F9R. This aids the Sensor Fusion engine for IMU based location fixes when installed in an automobile. Signals must be limited to 3.3V.</li> <li>GPIO - The TX pin operates as a DAC-capable GPIO on the ESP32. The RX pin operates as an ADC-capable input on the ESP32. This is useful for custom applications.</li> </ul>"},{"location":"menu_ports/#data-port","title":"Data Port","text":"<p>By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is sent. If you need to decrease the baud rate to 115200bps or other, be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns.</p> <p></p> <p>Monitoring the COM ports on the ZED-F9P</p> <p>If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough.</p> <p>Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single-board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.</p>"},{"location":"menu_ports/#wheel-ticks","title":"Wheel Ticks","text":"<p>On the RTK Express Plus only. This dropdown is made available if users wish to connect wheel ticks and a direction encoder as inputs to the ZED-F9R. This aids the Sensor Fusion engine for IMU based location fixes when installed in an automobile. Signals must be limited to 3.3V.</p>"},{"location":"menu_ports/#pulse-per-second","title":"Pulse Per Second","text":"<p>Configuring the External Pulse and External Events over WiFi</p> <p></p> <p>Port menu showing mux data port connections</p> <p>When PPS/Event Trigger is selected, the Pulse-Per-Second output from the ZED-F9x is sent out of the TX pin of the DATA port. Once the RTK device has GNSS reception, this can be used as a very accurate time base. </p> <p>The time between pulses can be configured down to 100ns (10MHz) with an accuracy of 30ns RMS and 60ns 99%. The pulse width and polarity are also configurable.</p> <p></p> <p>For PPS, only the Black and Green wires are needed. If you need to provide 3.3V to your system, the red wire can supply up to 600mA but we do not recommend sourcing more than 300mA.</p> <ul> <li>Red - 3.3V</li> <li>Green - TX (output from the RTK device)</li> <li>Orange - RX (input into the RTK device)</li> <li>Black - GND</li> </ul> <p>Similarly, the RX pin of the DATA port can be used for event logging. See External Event Logging for more information.</p>"},{"location":"menu_ports/#external-event-logging","title":"External Event Logging","text":"<p>Three RTK Expresses wired with external microphones</p> <p>The external triggering system is a powerful feature enabling a variety of scientific applications. Above is three RTK Expresses wired with external microphones used in a 'popped balloon' audio triangulation experiment.</p> <p>The ZED-F9P has the ability to mark a detected event with +/-30 nanosecond accuracy. When enabled, an event on the RX pin (a low-to-high or high-to-low transition) on the DATA port, will trigger a message in the log with a very accurate timestamp. </p> <ul> <li>Red - 3.3V</li> <li>Green - TX (output from the RTK device)</li> <li>Orange - RX (input into the RTK device)</li> <li>Black - GND</li> </ul> <p></p> <p>For event logging, only the Black and Orange wires are needed. If you need to provide 3.3V to your system, the red wire can supply up to 600mA but we do not recommend sourcing more than 300mA.</p> <p></p> <p>Configuring the External Pulse and External Events over WiFi</p> <p>Be sure to select 'Enable External Event Logging' through the ports menu.</p> <p>Events within the log have the following format:</p> <p>$GNTXT,numberOfSentences,sentenceNumber,CUSTOM_NMEA_TYPE_EVENT,triggerCount,towMsR,towSubMsR,accEst*CRC</p> <p>For example: </p> <pre><code>$GNTXT,01,01,02,5,494326906,136292,31*74\n</code></pre> <p>Where</p> <ul> <li>$GNTXT: Custom NMEA text message</li> <li>01: numberOfSentences in this report</li> <li>01: sentenceNumber</li> <li>02: sentenceType - Externally triggered events are type 0x02</li> <li>5: triggerCount</li> <li>494326906: towMsR - Time Of Week of rising edge (ms)</li> <li>136292: towSubMsR - Millisecond fraction of Time Of Week of rising edge (ns)</li> <li>31: accEst - Accuracy estimate (ns)</li> <li>74: NMEA CRC</li> </ul> <p>The event timestamps can be analyzed to precisely coordinate or triangulate a past event. In the case of the three RTK Expresses with microphones, the three units' locations were known with RTK 14mm accuracy. The air temperature was taken to obtain the speed of sound. From these data points, we can solve for the location of a sound such as a popped balloon.</p>"},{"location":"menu_ports/#surveyor-data-port","title":"Surveyor Data Port","text":"<p>By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. </p> <p>Note: The Data port does not output NMEA by default. The unit must be opened and the Serial NMEA Connection switch must be moved to 'Ext Connector'. See Hardware Overview - Advanced Features for the location of the switch.</p>"},{"location":"menu_profiles/","title":"Profiles Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Profiles Menu on the WiFi config page</p> <p></p> <p>User Profiles Menu</p> <p>Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for an NTRIP-enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles.</p> <p></p> <p>Multiple Profiles on Menu</p> <p>If more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup on the Facet or Setup on the Express and Express Plus. Profiles can be named up to 50 characters; only the first 7 characters will be shown on the menu.</p>"},{"location":"menu_profiles/#surveyor-profiles","title":"Surveyor Profiles","text":"<p>Because the Surveyor does not have a display, profiles are not available. The Base/Rover switch allows simple pre-set configurations to be toggled.</p>"},{"location":"menu_radios/","title":"Radios Menu","text":""},{"location":"menu_radios/#esp-now","title":"ESP-Now","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Radio configuration through WiFi</p> <p></p> <p>Radio menu showing ESP-Now</p> <p>Pressing 'r' from the main menu will open the Configure Radios menu. This allows a user to enable or disable the use of the internal ESP-Now radio.</p> <p>ESP-Now is a 2.4GHz protocol that is built into the internal ESP32 microcontroller; the same microcontroller that provides Bluetooth and WiFi. ESP-Now does not require WiFi or an Access Point. This is most useful for connecting a Base to Rover without the need for an external radio. Simply turn two SparkFun RTK products on, enable their radios, pair them, and data will be passed between units.</p> <p>Additionally, ESP-Now supports point-to-multipoint transmissions. This means a Base can transmit to multiple Rovers simultaneously.</p> <p>The ESP-Now radio feature was added in firmware release v2.4. If the Configure Radio menu is not visible, consider upgrading your firmware.</p> <p>ESP-Now is a free radio included in every RTK product, and works well, but it has a few limitations: </p> <ol> <li> <p>Limited use with Bluetooth SPP. The ESP32 is capable of simultaneously transmitting ESP-Now and Bluetooth LE, but not classic Bluetooth SPP. Unfortunately SPP (Serial Port Profile) is the most common method for moving data between a GNSS receiver and the GIS software. Because of this, using ESP-Now while connecting to the RTK product using Bluetooth SPP is not stable. SparkFun RTK products support Bluetooth LE and ESP-Now works flawlessly with Bluetooth LE. There are a few GIS applications that support Bluetooth LE including SW Maps.</p> <p></p> </li> <li> <p>Limited range. You can expect two RTK devices to be able to communicate approximately 250m (845 ft) line of sight but any trees, buildings, or objects between the Base and Rover will degrade reception. This range is useful for many applications but may not be acceptable for some applications. We recommend using ESP-Now as a quick, free, and easy way to get started with Base/Rover setups. If your application needs longer RF distances consider cellular NTRIP, WiFi NTRIP, or an external serial telemetry radio plugged into the RADIO port.</p> </li> <li> <p>Bug limited to Point to Point. There is a known bug in the ESP32 Arduino core that prevents a base from transmitting to multiple rovers. This will be fixed in future releases of the RTK firmware once the ESP32 core is updated. For now, a base can be paired successfully with a single rover.</p> </li> </ol>"},{"location":"menu_radios/#pairing","title":"Pairing","text":"<p>Pressing the Setup button (Express or Express Plus) or the Power/Setup button (Facet or Facet L-Band) will display the various submenus. Pausing on E-Pair will put the unit into ESP-Now pairing mode. If another RTK device is detected nearby in pairing mode, they will exchange MAC addresses and pair with each other. Multiple Rover units can be paired to a Base in the same fashion.</p> <p></p> <p>Radio configuration through WiFi</p> <p>The radio system can be configured over WiFi. The radios subsystem is disabled by default. Enabling the radio to ESP-Now will expose the above options. The unit's radio MAC can be seen as well as a button to forget all paired radios. This button is disabled until the 'Enable Forget All Radios' checkbox is checked. The 'Broadcast Override' function changes all data transmitted by this radio to be sent to all radios in the vicinity, instead of only the radios it is paired with. This override feature is helpful if using a base that has not been paired: a base can transmit to multiple rovers regardless if they are paired or not.</p> <p></p> <p>A serial menu is also available. This menu allows users to enter pairing mode, view the unit's current Radio MAC, the MAC addresses of any paired radios, as well as the ability to remove all paired radios from memory.</p>"},{"location":"menu_radios/#reference-station","title":"Reference Station","text":"<p>There is not enough RAM available on the Reference Station to run ESP-Now and Bluetooth simultaneously. ESP-Now does work on the Reference Station but you need to disable Bluetooth in order to use it.</p> <ul> <li> <p>Disable Bluetooth via the System Menu. Select \"b\" twice to: first select BLE mode; and then to disable Bluetooth completely</p> </li> <li> <p>Restart the system using the System Menu  Debug Menu: enter \"s\" followed by \"d\" followed by \"r\" to restart the Reference Station. This ensures the RAM used by Bluetooth is released</p> </li> <li> <p>Select the E-Pair option by pressing the MODE button until \"E-Pair\" is displayed</p> </li> <li> <p>Pair the Reference Station Base with an RTK Rover and the Rover will achieve RTK-Fix</p> </li> </ul>"},{"location":"menu_sensor/","title":"Sensor Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p></p> <p>Setting the Sensor options over WiFi config and serial connections</p> <p>The RTK Express Plus utilizes the ZED-F9R GNSS receiver with built-in IMU. This allows the RTK device to continue to output high-precision location information even if GNSS reception goes down or becomes unavailable. This was designed for and is especially helpful in automotive environments, such as tunnels or parking garages, where GNSS reception because sparse.</p> <p>Enable 'Sensor Fusion' to begin using the onboard IMU when GNSS is avaialble. Sensor Fusion will only aid position information when used with an automobile and may lead to degraded position fixes when used in other situations (ie, surveying, pedestrian, etc).</p> <p>'Automatic IMU-Mount Alignment' will allow the device to automatically determine how the product is mounted within the vehicle's frame of reference.</p> <p>Additionally, wheel ticks should be provided to the unit to enhance the positional fixes. Please see Mux Channel of the Ports Menu for more information.</p>"},{"location":"menu_system/","title":"System Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p>"},{"location":"menu_system/#wifi-interface","title":"WiFi Interface","text":"<p>Because of the nature of these controls, the AP config page is different than the terminal menu.</p> <p></p> <p>System Config Menu on WiFi Config Page</p>"},{"location":"menu_system/#check-for-new-firmware","title":"Check for New Firmware","text":"<p>This feature allows over-the-air updates of the RTK device's firmware. Please see Updating RTK Firmware for more information.</p>"},{"location":"menu_system/#system-initial-state","title":"System Initial State","text":"<p>At power on, the device will enter either Rover or Base state.</p>"},{"location":"menu_system/#log-to-sd","title":"Log to SD","text":"<p>If a microSD card is detected, all messages will be logged. </p>"},{"location":"menu_system/#max-log-time","title":"Max Log Time","text":"<p>Once the max log time is achieved, logging will cease. This is useful for limiting long-term, overnight, static surveys to a certain length of time. Default: 1440 minutes (24 hours). Limit: 1 to 2880 minutes.</p>"},{"location":"menu_system/#max-log-length","title":"Max Log Length","text":"<p>Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached.</p>"},{"location":"menu_system/#start-new-log","title":"Start New Log","text":"<p>Pressing the 'Start New Log' button will close the current log. A new log will be opened immediately and the file name will be shown. This can be helpful in the field when a certain set of coordinates or feature marks need to be recorded in close proximity to one another. By dividing up the logs, the work can be more easily identified.</p>"},{"location":"menu_system/#bluetooth-protocol","title":"Bluetooth Protocol","text":"<p>By default, the RTK products use Bluetooth v2.0 SPP (Serial Port Profile) to connect to data collectors. Nearly all data collectors support this protocol. The RTK product line also supports BLE (Bluetooth Low Energy). The BLE protocol has a variety of improvements but very few data collectors support it.</p> <p>Note: Bluetooth SPP cannot operate concurrently with ESP-Now radio transmissions. Therefore, if you plan to use the ESP-Now radio system to connect RTK products, the BLE protocol must be used to communicate over Bluetooth to data collectors. Alternatively, ESP-Now works concurrently with WiFi so connecting to a data collector over WiFi can be used.</p>"},{"location":"menu_system/#enable-factory-defaults","title":"Enable Factory Defaults","text":"<p>See Factory Reset.</p>"},{"location":"menu_system/#sd-card","title":"SD Card","text":"<p>Various stats for the SD card are shown. </p>"},{"location":"menu_system/#update-firmware","title":"Update Firmware","text":"<p>New firmware may be uploaded via WiFi to the unit. See Updating Firmware from WiFi for more information.</p>"},{"location":"menu_system/#reset-counter","title":"Reset Counter","text":"<p>A counter is displayed indicating the number of non-power-on-resets since the last power-on.</p>"},{"location":"menu_system/#serial-interface","title":"Serial Interface","text":"<p>Menu showing various attributes of the system</p> <p>The System Status menu will show a large number of system parameters including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all systems have all hardware. For example, the RTK Surveyor does not have an accelerometer so it will always be shown offline.</p> <p>This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current ZED-F9x firmware version, and which parts of the unit are online.</p> <ul> <li> <p>z - A local timezone in hours, minutes and seconds may be set by pressing 'z'. The timezone values change the RTC clock setting and the file system's timestamps for new files.</p> </li> <li> <p>d - Enters the debug menu that is for advanced users.</p> </li> <li> <p>f - Show any files on the microSD card (if present).</p> </li> <li> <p>b - Change the Bluetooth protocol. By default, Serial Port Profile (SPP) for Bluetooth v2.0 is used. This can be changed to BLE if desired at which time serial is sent over BLESerial. Additionally, Bluetooth can be turned off. This state is normally used for debugging.</p> </li> <li> <p>r - Reset all settings to default including a factory reset of the ZED-F9x receiver. This can be helpful if the unit has been configured into an unknown or problematic state.</p> </li> <li> <p>B, R, W, or S - Change the mode the device is in without needing to press the external SETUP or POWER buttons.</p> </li> </ul> <p></p> <p>System Config over WiFi Config</p> <p>The WiFi Config page also allows various aspects of the system to be configured but it is limited by design.</p>"},{"location":"menu_system/#factory-reset","title":"Factory Reset","text":"<p>If a device gets into an unknown state it can be returned to default settings using the WiFi or Serial interfaces. </p> <p></p> <p>Enabling and Starting a Factory Reset</p> <p>Factory Defaults will erase any user settings and reset the internal receiver to stock settings. To prevent accidental reset the checkbox must first be checked before the button is pressed. Any logs on SD are maintained. Any settings file and commonly used coordinate files on the SD card associated with the current profile will be removed.</p> <p></p> <p>Issuing and confirming a Factory Reset</p> <p>If a device gets into an unknown state it can be returned to default settings. Press 'r' then 'y' to confirm. Factory Default will erase any user settings and reset the internal receiver to stock settings. Any settings file and commonly used coordinate files on the SD card associated with the current profile will be removed.</p> <p>Note: Log files and any other files on the SD card are not removed or modified.</p> <p>Note: A factory reset can also be accomplished by editing the settings files. See Force a Factory Reset for more information. </p>"},{"location":"menu_tcp_udp/","title":"Network Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>Client and Server settings</p> <p>As an alternative to serial ports, serial over USB, or Bluetooth, the RTK device can send and receive GNSS data over TCP, and can send data over UDP.   These mechanisms sit on top of the network layer (WiFi or Ethernet).  The data could be NMEA, UBX, RTCM, and is the same data that would be sent and received over Bluetooth.  The mechanism can be used in Rover or Base mode.  There are three mechanisms, two TCP and one UDP, described below.</p>"},{"location":"menu_tcp_udp/#tcp-client-and-server","title":"TCP Client and Server","text":"<p>Configuring a TCP Client will cause the RTK device to open a TCP connection to a given address and port, and then send and receive data.  Configuring a TCP Server will cause the RTK device to listen on the given port for an incoming connection.  In either case, when a connection is established the device will send and receive data. Some Data Collector software (such as Vespucci) requires that the SparkFun RTK device connect as a TCP Client. Other software (such as QGIS) requires that the SparkFun RTK device acts as a TCP Server. Both are supported.</p> <p>Note: Currently for WiFi: TCP is only supported while connected to local WiFi, not AP mode. This means the device will need to be connected to a WiFi network, such as a mobile hotspot, before TCP connections can occur.</p> <p></p> <p>If either Client or Server is enabled, a port can be designated. By default, the port is 2948 (registered as GPS Daemon request/response) but any port 0 to 65535 is supported.</p> <p></p> <p>The above animation was generated using TCP_Server.py.</p>"},{"location":"menu_tcp_udp/#udp-server","title":"UDP Server","text":"<p>Data can also be broadcast via UDP on Ethernet and WiFi, rather than TCP. If enabled, the UDP Server will begin broadcasting NMEA data over the specific port (default 10110).</p>"},{"location":"menu_wifi/","title":"WiFi Menu","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>WiFi Menu in the WiFi config page</p> <p></p> <p>WiFi Menu containing one network</p> <p>Beginning in firmware version 3.0, the WiFi menu allows a user to input credentials of up to four WiFi networks. WiFi is used for a variety of features on the RTK device. When WiFi is needed, the RTK device will attempt to connect to any network on the list of WiFi networks. For example, if you enter your home WiFi, work WiFi, and the WiFi for a mobile hotspot, the RTK device will automatically detect and connect to the network with the strongest signal.</p> <p>Additionally, the device will continue to try to connect to WiFi if a connection is not made. The connection timeout starts at 15 seconds and increases by 15 seconds with each failed attempt. For example, 15, 30, 45, etc seconds are delayed between each new WiFi connection attempt. Once a successful connection is made, the timeout is reset.</p> <p>WiFi is used for the following features:</p> <ul> <li>NTRIP Client or Server</li> <li>TCP Client or Server</li> <li>Firmware Updates</li> <li>Device Configuration (WiFi mode only)</li> <li>PointPerfect Key renewal (RTK Facet L-Band only)</li> </ul>"},{"location":"menu_wifi/#configure-mode-ap-vs-wifi","title":"Configure Mode: AP vs WiFi","text":"<p>By default, the device will become an Access Point when the user selects 'Config' from the front panel controls. This is handy for in-field device configuration. Alternatively, changing this setting to 'WiFi' will cause the device to connect to local WiFi. </p> <p></p> <p>Configuring over WiFi allows the device to be configured from any desktop computer that has access to the same WiFi network. This method allows for greater control from a full size keyboard and mouse.</p> <p></p> <p>When the device enters WiFi config mode it will display the WiFi network it is connected to as well as its assigned IP address.</p>"},{"location":"menu_wifi/#mdns","title":"MDNS","text":"<p>Multicast DNS or MDNS allows the RTK device to be discovered over wireless networks without needing to know the IP. For example, when MDNS is enabled, simply type 'rtk.local' into a browser to connect to the RTK Config page. This feature works both for 'WiFi Access Point' or direct WiFi config. Note: When using WiFi config, you must be on the same subdomain (in other words, the same WiFi or Ethernet network) as the RTK device.</p>"},{"location":"permanent_base/","title":"Creating a Permanent Base","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p></p> <p>The base station at SparkFun</p> <p>This section goes into depth on how to gather the data using an RTK product to create a permanent fixed base.</p> <p>Note: The RTK Facet and RTK Facet L-Band are rated IP53 - Protected from limited dust ingress and water spray. As such it is not recommended for permanent outdoor deployment. Use the RTK Surveyor or Express placed inside (or protected from the elements) with a fully sealed TOP106 antenna placed outside with a clear view of the sky.</p> <p>Note: The RTK Express Plus does not support Base mode.</p>"},{"location":"permanent_base/#temporary-vs-fixed-base","title":"Temporary vs. Fixed Base","text":"<p>There are two types of bases: Surveyed and Fixed. A surveyed base is often a temporary base set up in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. </p> <p>In a separate tutorial, we described how to create a temporary base station with the 1 to 10-minute survey-in method. The temporary base method is flexible, but it is not as accurate and can vary dramatically in the time required. The ZED-F9P has a much faster way to provide base corrections: if you know the location of your antenna, you can set the coordinates of the receiver and it will immediately start providing RTCM corrections. The problem is \u2018what is the location of the antenna?\u2019. It\u2019s as if you need a soldering iron to assemble your soldering iron kit. Where do we start?</p> <p>Why don\u2019t I just survey-in my fixed antenna to get its location? </p> <p>While a survey-in is easy to set up and fine for an in-the-field way to establish the location of a base, it\u2019s not recommended for getting the fixed location of a static base station as it is less accurate. Instead, PPP or Precise Point Positioning is far more accurate and is recommended for obtaining your antenna\u2019s position. It\u2019s a similar process but involves bouncing frick\u2019n lasers off of satellites!</p> <p>A major problem is that the predicted orbits are often off by one meter or more. Ground stations bounce lasers off the individual satellites as they pass overhead and use this new data to compute the actual orbits of the satellites. Using this new ephemeris data, when it becomes available, combined with the receiver\u2019s raw data, better fixes can be computed. This is the basis of PPP.</p> <p>From Gary Miller\u2019s PPP HOWTO</p> <p></p> <p>L1/L2 antenna semi-fixed to a flat roof</p> <p>The PPP process works like this:</p> <ul> <li>Install an antenna in a fixed location</li> <li>Gather 24 hours' worth of raw GNSS data from that antenna</li> <li>Pass the raw data to a processing center for PPP</li> <li>Obtain a highly accurate position of the antenna we use to set a \u2018Fixed Mode\u2019 on a receiver</li> </ul> <p>There are some great articles written about PPP. We\u2019ll scrape the surface but for more information check out:</p> <ul> <li>Gary Miller\u2019s great PPP HOWTO</li> <li>Emlid\u2019s PPP</li> <li>Suelynn Choy, GNSS PPP</li> </ul>"},{"location":"permanent_base/#affix-your-antenna","title":"Affix Your Antenna","text":"<p>You don\u2019t want your antenna moving once you\u2019ve determined its position. Consider investing in a premium antenna but we\u2019ve used the classic u-blox L1/L2 antenna with good success. Mount the antenna to a proper ground plane on a fixed surface that has a very clear view of the sky. No nearby anything. </p> <p></p> <p>The u-blox antenna attached to SparkFun\u2019s parapet</p> <p>We mounted the u-blox antenna to the ferrous flashing around the top of the SparkFun building. While not completely permanent, the magnets on the u-blox antenna are tested to survive automobile strength winds so it should be fine in the 100+ MPH winds experienced in the front range of Colorado. The u-blox ANN-MB-00 antenna has a 5m cable attached but this was not long enough to get from the SparkFun roof to the receiver so we attached a 10m SMA extension. It\u2019s true that most L1/L2 antennas have a built-in amplifier but every meter of extension and every connector will slightly degrade the GNSS signal. Limit the use of connector converters and use an extension as short as possible to get where you need.</p> <p>If you want to use a higher-grade antenna that doesn\u2019t have a magnetic base we\u2019ve come up with a great way to create a stable fix point without the need for poking holes in your roof!</p> <p></p> <p>Yes, that\u2019s a cinder block. Don\u2019t laugh. It works!</p> <p>Most surveying grade antennas have a \u215d\u201d 11-TPI (threads per inch) thread on the bottom of the antenna. Luckily, \u215d\u201d 11-TPI is the thread found on wedge anchors in hardware stores in the US. Wedge anchors are designed to hold walls to foundations but luckily for us, we can use the same hardware to anchor an antenna. (We\u2019ve also heard of concrete anchors that use epoxy so be sure to shop around.)</p> <p></p> <p>I needed to mount an antenna to my roof. Luckily, I had two, leftover cinder blocks from a weather station that, based on the Electric Imp, had long since been retired.</p> <p></p> <p>Step one is drilling the \u215d\u201d hole into the cinder block. The masonry bit cost me $20 but cheaper, less fancy ones can be had for less than $10. The blue tape shows me the depth I\u2019m trying to hit. The cinder block is 3.5\u201d thick so I settled on ~2.5\u201d deep. Once the hole is drilled, tip the block upside down to get most of the cement dust out. Then pound the anchor into place. </p> <p></p> <p>Oops!</p> <p>Don\u2019t get greedy! I pounded the anchor so far that it split the block. Luckily, I had a second block!</p> <p></p> <p>Once the anchor is ~2 inches into the hole tighten the bolt. This will draw the anchor back up compressing the collar into place. Note: I finger tightened the bolt and added a \u00bd turn with a wrench. If you really go after the bolt and tighten it too much you risk pushing the collar out further and breaking the cinder block in half (see Ooops! picture above). We are not anchoring a wall here, just a 400g antenna.</p> <p></p> <p>I used a 2nd bolt, tightened against the antenna base, to lock it into place and prevent rotation in either direction. Astute readers will notice my TNC to SMA adapter in the picture above. It\u2019s the wrong gender. Originally, I used an SMA extension to connect my GPS-RTK-SMA to my u-blox L1/L2 antenna on my roof. The GPS-RTK-SMA expects a regular SMA connection so the end of the extension would not connect to this adapter. So before you get out the ladder, test connect everything! Luckily I have a set of adapters and found the right TNC to SMA converter to suit my needs.</p> <p></p> <p>It\u2019s a bit of work getting 35lbs of concrete onto a roof but the view is pretty spectacular!</p> <p>I wrapped the SMA extension once around the base. In case anything pulls on the SMA cable the tension will be transferred to the bolt rather than the TNC connection to the antenna.</p> <p>Lightning Warning: My antenna profile is lower than the parapet so lightning strikes are unlikely. Your antenna may be the highest point around so consider lightning protection.</p>"},{"location":"permanent_base/#gather-raw-gnss-data","title":"Gather Raw GNSS Data","text":"<p>Once you\u2019ve got the antenna into a location where it will not move or be moved we need to establish its location. Power on your RTK unit and verify that you can get a lock and see 25+ satellites. Assuming you\u2019ve got good reception, we now need to set the receiver to output raw data from the satellites. </p> <p>You will need a microSD card that is 1GB up to 32GB formatted for FAT16 or FAT32. </p> <p></p> <p>The microSD slot on the bottom of the RTK Facet</p> <p>Enable RAWX and SFRBX</p> <p>Power on the unit and using the serial or WiFi method, connect to the device.</p> <p>Configure via WiFi</p> <p></p> <p>Expand the Message Rates sub-menu under the GNSS Config menu. Pressing the NMEAx5 + RXMx2 message button will turn off all messages and enable the following messages:</p> <ul> <li>NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX</li> </ul> <p>These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). </p> <p>Press the 'Save and Exit' button. Upon reset, the unit should begin displaying a gradually increasing logging icon indicating successful logging.</p> <p>Configure via Serial</p> <p></p> <p>Press 2 and then 8 to enable the PPP logging defaults</p> <p>After enabling the NMEA and RXM messages, exit from the serial menu by pressing x repeatedly. The system will save and apply the settings.</p> <p>Once the RTK product is configured, power it up with microSD inserted, and leave the unit in Rover mode. This will record all the data (NMEA, UBX, and RAWX) from the receiver to a .ubx file. We do not yet know the location of the antenna so we stay in Rover mode to allow it to compile a large amount of satellite data. Only after we have confirmed its location should you enter **Base* mode.</p> <p></p> <p>The logging icon will remain animated while the log file is increasing</p> <p>Confirm Recording</p> <p>Before leaving the unit for 6 to 24 hours, it is recommended that you capture a few minutes of RAWX log data, with the antenna located with a clear view of the sky, and then inspect the log to confirm everything is working correctly. </p> <p></p> <p>Getting UBX file from SD card</p> <p>Remove the microSD from the RTK unit and open it on a computer. The latest log file is shown above. Note the file shown above is 492kB because it logged only ~60 seconds. Log files with RAWX and SFRBX and NMEA will grow in size to over 1GB across 24 hours.</p> <p>The quickest method to verify RAWX logging is to open the UBX file with a text editor.</p> <p></p> <p>NMEA and UBX binary data viewed in Visual Studio Code</p> <p>Your editor may render the binary UBX RAWX data in unknown ways. If you see NMEA ASCII sentences combined with large chunks of binary data, the RTK product is correctly logging RAWX data.</p> <p>If you have u-center installed, you can more easily inspect for successful logging. Double click on a UBX file to open them in u-center.</p> <p></p> <p>Viewing a RAWX log in u-center</p> <p>Press the play button (shown above) and you should see satellites quickly come in and out of view as u-center 'plays' back the log file.</p> <p></p> <p>RAWX packet within the Packet Console</p> <p>Open the Packet Console and verify the UBX RXM-RAWX and SFRBX packets are logged. You are now ready to do a long survey of the antenna's position. Allow this to run for 24 hours. Don\u2019t worry if you go long but do realize that a 24-hour file will be ~1GB so don\u2019t let it run for a month.</p> <p></p> <p>From Suelynn Choy's \u2018GNSS Precision Point Positioning\u2019 presentation 2018</p> <p>Capturing 6 hours is good, 24 is slightly better (note the logarithmic scale for position error in the graph above). Most PPP analysis services will accept more than 24 hours of data but they may truncate it to 24 hours. If you capture 30 hours of RAWX data, that\u2019s ok, we will show you how to trim a file that is too long. </p>"},{"location":"permanent_base/#converting-ubx-to-rinex","title":"Converting UBX to RINEX","text":"<p>Once the 24-hour log file is obtained, the 1GB UBX file will need to be converted to RINEX (Receiver Independent Exchange Format). The popular RTKLIB is here to help. We recommend the rtklibexplorer\u2019s modified version of RTKLIB (available for download here) but you can obtain the original RTKLIB here. Open RTKCONV. Select your UBX file and hit \u2018Convert\u2019. Our 300MB file took ~30 seconds to convert. You should see a *.obs file once complete.</p> <p></p> <p>An OBS file with 14 hours of data</p> <p>If your data file is 25 hours or a little more, that\u2019s fine. If you need to cut your RINEX file down because it\u2019s too large (or 40 hours long) you can trim the time window. Convert the entire file then click on the notepad icon to open the OBS file. You\u2019ll see the GPS start time and stop time for this capture. </p> <p></p> <p>Using these times, you can limit the time window to whatever you need and re-convert the file.</p> <p>Why don\u2019t we crank up the fix rate? Moar is better!\u2122</p> <p>The RTK products can log fix rates up to 20Hz. Why not get RAWX data at greater than 1Hz? Because nature doesn\u2019t move that fast. Most PPP analysis services will ignore anything greater than 1Hz. OPUS goes so far as to \u201cdecimate all recording rates to 30 seconds\u201d. And, your OBS files will be monstrously large. If 24 hours is 1GB at 1Hz, it follows that 24 hours at 30Hz will be ~30 gigs. So no, keep it at 1Hz.</p> <p>We now need to pass the raw GNSS satellite data in RINEX format (*.obs) through a post-processing center to try to get the actual location of the antenna. There are a handful of services but we\u2019ve had great luck using the Canadian CSRS-PPP service. The US National Geodetic Service provides a service called OPUS but we found it to be frustratingly limited by file size and format issues. Your mileage may vary. </p> <p></p> <p>Zip your obs file then create an account with CSRS. Select ITRF then upload your file. Twiddle your thumbs for a few hours and you should receive an email that looks like this:</p> <p></p> <p>Click the 'Summary' link to open a summary of results. This summary contains the coordinates of your antenna in Geodetic, UTM, and Cartesian formats. </p> <p></p> <p>The SparkFun antenna with +/-2mm of accuracy! :O</p> <p>The email will also include a fancy PDF report of your antenna\u2019s location but does not include the Cartesian coordinates we will need later.</p> <p>If all goes well you should have a very precise location for your antenna. For SparkFun RTK products we are most interested in ECEF coordinates. ECEF is fascinating. Rather than lat and long, ECEF is the number of meters from the internationally agreed-upon reference frame of the center of mass of the Earth. Basically, your ECEF coordinates are the distance you are from the center of the Earth. Neat.</p>"},{"location":"permanent_base/#setting-fixed-location","title":"Setting Fixed Location","text":"<p>Now that you\u2019ve got the ECEF position of your antenna, let\u2019s tell the RTK product where its antenna is located with a few millimeters of accuracy. </p> <p>Configure via WiFi</p> <p>Enter the WiFi AP config page or connect over Serial.</p> <p> </p> <p>Setting ECEF coordinates over WiFi</p> <p>Select Fixed and ECEF Coordinates then enter the coordinates obtained from the CSRS-PPP email. </p> <p> </p> <p>Configuring NTRIP Server settings via WiFi Config AP</p> <p>If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information.</p> <p>Save the settings to the RTK unit and exit. </p> <p>Configure via Serial</p> <p> </p> <p>Base Menu Options</p> <p>To configure over serial, press 3 to open the Base menu, then 1 to toggle the Base Mode to Fixed/Static Position, then enter the three ECEF coordinates. </p> <p> </p> <p>Settings for the NTRIP Server</p> <p>If your RTK product has access to a WiFi network, consider enabling the NTRIP Server. This will allow the RTK device to automatically begin transmitting its RTCM data to an NTRIP Caster once it has entered Fixed Base mode. See Creating NTRIP Caster for more information.</p> <p>Press x multiple times to exit the serial menu.</p> <p>Beginning Base Mode</p> <p>Power cycle the unit to load the Fixed ECEF coordinates. After boot, use the Setup button to enter Base mode.</p> <p> </p> <p>RTK Facet in Fixed Transmit Mode</p> <p>Almost immediately after entering Base mode, the unit will begin outputting RTCM messages. These RTCM messages are sent to the RADIO port on the device. This is helpful for transmitting corrections via serial radio to any Rover units within a 10km baseline. </p> <p> </p> <p>RTK Facet in Transmit Mode with NTRIP Server Enabled</p> <p>If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi.</p> <p>Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second.</p>"},{"location":"permanent_base/#creating-ntrip-caster","title":"Creating NTRIP Caster","text":"<p>Your RTK device can both serve RTCM correction data (aka Server) to an NTRIP Caster and get RTCM correction data (aka Client) from an NTRIP Caster. But how does one get an NTRIP Caster?</p> <p>There are a variety of Windows applications out there that claim to be an NTRIP caster. We found them to be generally terrible. The easiest solutions we've found are RTK2GO or Emlid Caster. Both are free and available to the public.</p> <p>RTK2Go</p> <p>RTK2Go seems to be a pet project of SNIP. We recommend creating a mount point and a password through RTK2GO.com. Yes, the RTK2go website looks spammy but the service works well and is used widely. Please see RTK2Go for details about creating an account. It's free and takes only a few minutes. Once activated you will be provided with your Mount Point name and Mount Point PW. These two credentials are used in an NTRIP Server setup:</p> <p>NTRIP Server:</p> <ul> <li>Caster Host: rtk2go.com</li> <li>Caster Port: 2101</li> <li>Caster User Name: Not needed</li> <li>Caster User PW: Not needed</li> <li>Mount Point: Provided by RTK2Go</li> <li>Mount Point PW: Required and provided by RTK2Go</li> </ul> <p>NTRIP Client:</p> <ul> <li>Caster Host: rtk2go.com</li> <li>Caster Port: 2101</li> <li>Caster User Name: Your Valid Email Address</li> <li>Caster User PW: Not needed</li> <li>Mount Point: Provided by RTK2Go</li> <li>Mount Point PW: Not Needed</li> </ul> <p>The differences between Server and Client are small. The Server needs to know the mount point PW as it needs to be authorized to push data there. The Client needs to know which mount point but does not need a mount point password. </p> <p>Note: You must provide a valid email address to RTK2Go. From RTK2Go:</p> <p>It is now REQUIRED that all data consumers (Rover devices) provide a valid email address in the NTRIP Client user account name field when accessing the Caster.</p> <p></p> <p>The SparkFun Mount Point 'bldr_SparkFun1'</p> <p>To verify that your RTK product is correctly broadcasting RTCM data, you can access RTK2Go from a browser on Port 2101. This link RTK2Go.com:2101 will show a list of all current NTRIP Servers that are pushing data to the RTK2Go caster, and are available to be accessed, free of charge, by any NTRIP Client in the world.</p> <p>Emlid Caster</p> <p>Emlid Caster is also very easy to set up and has a bit more user-friendly-looking website. Creating an account is very straightforward.</p> <p></p> <p>Emlid Mount Points with PWs removed</p> <p>Once your account is created, you'll be presented with Mount Points and Rovers.</p> <p>NTRIP Server:</p> <ul> <li>Caster Host: caster.emlid.com</li> <li>Caster Port: 2101</li> <li>Caster User Name: Not needed</li> <li>Caster User PW: Not needed</li> <li>Mount Point: Required. MP1979 for example. Shown in your mount point dashboard.</li> <li>Mount Point PW: Required. Shown in your mount point dashboard.</li> </ul> <p>NTRIP Client:</p> <ul> <li>Caster Host: caster.emlid.com</li> <li>Caster Port: 2101</li> <li>Caster User Name: Required. Shown in your rover dashboard.</li> <li>Caster User PW: Required. Shown in your rover dashboard.</li> <li>Mount Point: Required. Shown in your rover dashboard.</li> <li>Mount Point PW: Not Needed</li> </ul> <p></p> <p>'Online' Badge Illuminated</p> <p>To verify that your RTK product is correctly broadcasting RTCM data open the Emlid Caster dashboard. Once a device is successfully connected as a mount point or rover, the Emlid dashboard will turn green.</p>"},{"location":"readme/","title":"Readme","text":"<p>This folder contains the markdown files for the RTK Product Manual that are rendered by mkdocs.</p>"},{"location":"repair/","title":"Disassembly / Repair","text":"<p>Surveyor:  / Express:  / Express Plus:  / Facet:  / Facet L-Band:  / Reference Station: </p> <p>The RTK product line is fully open-source hardware. This allows users to view schematics, code, and repair manuals. This section documents how to safely disassemble the RTK Facet and Reference Station.</p> <p>Repair Parts:</p> SparkFun RTK Replacement Parts - Facet L-Band Main Board v14 (SPX-24675) SparkFun RTK Replacement Parts - Facet Main Board v13 (SPX-24064) SparkFun RTK Replacement Parts - Facet Housing (SPX-24673) SparkFun RTK Replacement Parts - Facet L-Band Housing (SPX-24674) SparkFun RTK Replacement Parts - Facet Rubber Sock (SPX-24707) SparkFun RTK Replacement Parts - Facet Connector Assembly v12 (SPX-24706) SparkFun RTK Replacement Parts - Facet Display/Button (SPX-24705) <p>Tools Needed:</p> <ul> <li>Small Philips Head Screwdriver</li> <li>Curved Tweezers</li> <li>U.FL Puller - Recommended</li> <li>Wire Cutters - Recommended</li> </ul>"},{"location":"repair/#opening-facet","title":"Opening Facet","text":"<p>Starting from the back of the unit, remove the protective silicone boot. If your boot has gotten particularly dirty from field use, rinse it with warm water and soap to clean it up.</p> <p></p> <p>Remove the four Philips head screws. They may not come all the way out of the lower enclosure.</p> <p></p> <p>The top lid should then come off. The front overlay is adhesive and may adhere slightly to the 'tooth' on the lid. You will not damage anything by gently prying it loose from the lid as you lift the lid.</p> <p>Tip: The lid makes a great screw bin.</p> <p>Before starting to remove the antenna, be aware that the antenna material is susceptible to fingerprints. You won't likely damage the reception but it's best to just avoid touching the elements.</p> <p></p> <p>Note the antenna orientation so that it can be re-mounted in the same way. A sharpie dot towards the display is a handy method. However, if you forget, this is the correct orientation:</p> <p></p> <p>Remove the four screws holding the antenna in place. </p> <p></p> <p>The antenna will be attached to the main board and must stay that way for the next few steps. Without pulling on the thin RF cable, gently set the antenna to the side.</p> <p></p> <p>The battery and vertical PCBs are held in place using a retention PCB. Remove the four screws holding the PCB in place and lift off the foam top of the battery holder. </p> <p>Note: v1.0 of the retention plate is not symmetrical. Meaning, if the plate is installed in reverse, the retention PCB will be just short of the connector board and will not properly hold it in place. Reinstall the retention plate as shown in the picture.</p> <p>Note: The foam is held to the PCB using an adhesive. Some of that adhesive is exposed to catch material that may enter into the enclosure. Try to avoid getting stuck.</p> <p></p> <p>Set the retention PCB to the side.</p>"},{"location":"repair/#removing-antenna-connection","title":"Removing Antenna Connection","text":"<p>This is the most dangerous step. The cable connecting the antenna to the main board uses something called a U.FL or IPEX connector. These tend to be fragile. You can damage the connector rendering the unit inoperable. Just be sure to take your time.</p> <p>Using the U.FL removal tool, slide the tool onto the U.FL connector and gently pull away from the main board. If it won't give, you may need to angle the tool slightly while pulling.</p> <p>Note: If you do not have a U.FL tool this tutorial on U.FL connectors has three alternative methods using tweezers, wire cutters, and a skinny PCB that may also work. </p> <p></p> <p>The U.FL connector will disconnect. The antenna can now be set to the side.</p>"},{"location":"repair/#opening-backflip-connectors","title":"Opening Backflip Connectors","text":"<p>Many of the connections made within the RTK product line use this 'back flip' style of FPC connector. To open the connector and release the flex printed circuit (FPC) cable, use a curved pair of tweezers to gently flip up the arm. The arm in the connector above has been flipped, the FPC can now be removed.</p> <p>As shown above, remove the FPC connecting to the 4th connector on the main board. The connector is labeled 'SD Display'. Leave all other FPCs in place.</p> <p></p> <p>The main board is attached to the battery and the connector board. Lift the mainboard and connector board together, bringing the battery with the assembly.</p>"},{"location":"repair/#removing-the-battery","title":"Removing the Battery","text":"<p>Note: This step is not needed for general repair. Only disconnect the battery if you are replacing the battery.</p> <p>The battery is plugged into the mainboard using a JST connector. These are very strong connectors. Do not pull on the wires. We recommend using the mouth of wire cutters (also known as diagonal cutters) to pry the connector sideways. </p> <p>Once removed, the battery can be set aside.</p>"},{"location":"repair/#removing-the-front-overlay","title":"Removing the Front Overlay","text":"<p>The front overlay (the sticker with the Power button) is connected to the display board using the same style 'back flip' FPC connector. Flip up the arm and disconnect the overlay.</p> <p></p> <p>Gently peel off the adhesive overlay from the front face. This cannot be saved.</p>"},{"location":"repair/#inserting-new-display-board","title":"Inserting New Display Board","text":"<p>Slide the old display board out. Remove the brown FPC from the old display board and move over to the new display board. Insert the new display board into the slot.</p> <p></p> <p>With the new display board in place, remove the protective film from the display.</p> <p></p> <p>Remove the backing from the new overlay. Stick the overlay into the center of the front face area.</p> <p></p> <p>Be sure to flip up the arm on the overlay connector before trying to insert the new overlay FPC.</p> <p>Using tweezers, and holding the FPC by the cable stiffener, insert the overlay FPC into the display board. </p> <p></p> <p>Shown above, the modern display boards use a 6-pin friction fit connector. There is no backflip arm that needs to be raised. Hold the FPC by the cable stiffener and push it down into the black connector on the display board.</p>"},{"location":"repair/#closing-the-backflip-connector","title":"Closing The Backflip Connector","text":"<p>Use the nose of the tweezers to press the arm down, securing the FPC in place.</p> <p></p> <p>If you haven't already done so, move the brown FPC from the original display board over to the new display board. Be sure to open the connector before inserting the FPC, and then press down on the arm to secure it in place.</p>"},{"location":"repair/#reinstalling-main-board","title":"Reinstalling Main Board","text":"<p>Slide the main board and connector boards back into place along with the battery. We find it easier to partially insert the connector board, then the main board, and then adjust them down together.</p> <p></p> <p>Reconnect the display board to the main board. Be sure to close the arm on the main board to secure the FPC in place. </p>"},{"location":"repair/#testing-the-overlay","title":"Testing the Overlay","text":"<p>The RTK Facet has two power buttons: the external button on the overlay and an internal button on the back of the display board (shown above). Pressing and holding the internal button will verify the connection between the display board and the main board.</p> <p>If the internal button is not working, remove and reinsert the FPC connecting the display board to the main board.</p> <p>Press and hold the internal power button to power down the unit.</p> <p></p> <p>Repeat the process using the overlay button to verify the external power button is working. </p> <p>If the external overlay button is not working, but the internal button is, remove and reinsert the FPC connecting the overlay to the display board.</p> <p>If the external button is working, proceed with re-assembling the unit.</p>"},{"location":"repair/#reassembly","title":"Reassembly","text":"<p>Confirm that all FPC armatures are in the down and locked position.</p> <p></p> <p>Carefully line the U.FL connector up with the main board and gently press the connector in place. A tool is useful in this step but an index finger works just as reliably.</p> <p></p> <p>Place the retention plate and foam over the battery. The battery may need to be nudged slightly to align with the upper cavity.</p> <p>Note: v1.0 of the retention plate is not symmetrical. Meaning, if the plate is installed in reverse, the retention PCB will be just short of the connector board and will not properly hold it in place. Reinstall the retention plate as shown in the picture above.</p> <p>Secure the retention plate with the four small screws.</p> <p></p> <p>Place the antenna over top of the retention plate in the same orientation as it was removed. Secure in place with the four large screws.</p> <p></p> <p>Plate the dome over the antenna with the front 'tooth' aligning over the display.</p> <p></p> <p>Secure the dome in place using four small screws.</p> <p>Replace the silicone boot around the device.</p> <p>Power on the RTK Facet and take outside to confirm SIV reaches above ~20 satellites and HPA is below ~1.0m.</p>"},{"location":"repair/#reference-station","title":"Reference Station","text":"<p>Taking the Reference Station apart is really easy:</p> <ul> <li> <p>Disconnect all cables</p> </li> <li> <p>Unplug the green 10-way 3.5mm I/O connector</p> <ul> <li>This makes it easy to remove the main PCB from the enclosure</li> <li>The connector is a firm fit. You may need to rock it from side to side as you unplug it</li> </ul> </li> <li> <p>Unscrew the four screws holding the front panel in place</p> <ul> <li>We recommend removing the front panel first, so you can unplug the OLED display</li> </ul> </li> <li> <p>Remove the front panel</p> </li> </ul> <p></p> <ul> <li> <p>Unplug the OLED Qwiic cable</p> </li> <li> <p>Slide out the main PCB</p> </li> </ul>"},{"location":"repair/#surveyor","title":"Surveyor","text":"<p>Disassembly of the RTK Surveyor is achieved by removing two Philips head screws and gently lifting the cover.</p> <p></p> <p>Within the RTK Surveyor, two internal slide switches control the flow of NMEA data over Bluetooth and should be in the position shown above. If these switches get moved, the device will fail to correctly push NMEA data over Bluetooth. Placing a bit of tape over the top of the switches can help keep them in place.</p>"}]}